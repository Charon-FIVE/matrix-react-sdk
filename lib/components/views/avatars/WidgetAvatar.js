"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _BaseAvatar = _interopRequireDefault(require("./BaseAvatar"));

var _Media = require("../../../customisations/Media");

const _excluded = ["app", "className", "width", "height"];

const WidgetAvatar = _ref => {
  let {
    app,
    className,
    width = 20,
    height = 20
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  let iconUrls = [require("../../../../res/img/element-icons/room/default_app.svg").default]; // heuristics for some better icons until Widgets support their own icons

  if (app.type.includes("jitsi")) {
    iconUrls = [require("../../../../res/img/element-icons/room/default_video.svg").default];
  } else if (app.type.includes("meeting") || app.type.includes("calendar")) {
    iconUrls = [require("../../../../res/img/element-icons/room/default_cal.svg").default];
  } else if (app.type.includes("pad") || app.type.includes("doc") || app.type.includes("calc")) {
    iconUrls = [require("../../../../res/img/element-icons/room/default_doc.svg").default];
  } else if (app.type.includes("clock")) {
    iconUrls = [require("../../../../res/img/element-icons/room/default_clock.svg").default];
  }

  return /*#__PURE__*/_react.default.createElement(_BaseAvatar.default, (0, _extends2.default)({}, props, {
    name: app.id,
    className: (0, _classnames.default)("mx_WidgetAvatar", className) // MSC2765
    ,
    url: app.avatar_url ? (0, _Media.mediaFromMxc)(app.avatar_url).getSquareThumbnailHttp(20) : undefined,
    urls: iconUrls,
    width: width,
    height: height
  }));
};

var _default = WidgetAvatar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJXaWRnZXRBdmF0YXIiLCJhcHAiLCJjbGFzc05hbWUiLCJ3aWR0aCIsImhlaWdodCIsInByb3BzIiwiaWNvblVybHMiLCJyZXF1aXJlIiwiZGVmYXVsdCIsInR5cGUiLCJpbmNsdWRlcyIsImlkIiwiY2xhc3NOYW1lcyIsImF2YXRhcl91cmwiLCJtZWRpYUZyb21NeGMiLCJnZXRTcXVhcmVUaHVtYm5haWxIdHRwIiwidW5kZWZpbmVkIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3MvYXZhdGFycy9XaWRnZXRBdmF0YXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMCBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnRQcm9wcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgeyBJQXBwIH0gZnJvbSBcIi4uLy4uLy4uL3N0b3Jlcy9XaWRnZXRTdG9yZVwiO1xuaW1wb3J0IEJhc2VBdmF0YXIsIHsgQmFzZUF2YXRhclR5cGUgfSBmcm9tIFwiLi9CYXNlQXZhdGFyXCI7XG5pbXBvcnQgeyBtZWRpYUZyb21NeGMgfSBmcm9tIFwiLi4vLi4vLi4vY3VzdG9taXNhdGlvbnMvTWVkaWFcIjtcblxuaW50ZXJmYWNlIElQcm9wcyBleHRlbmRzIE9taXQ8Q29tcG9uZW50UHJvcHM8QmFzZUF2YXRhclR5cGU+LCBcIm5hbWVcIiB8IFwidXJsXCIgfCBcInVybHNcIj4ge1xuICAgIGFwcDogSUFwcDtcbn1cblxuY29uc3QgV2lkZ2V0QXZhdGFyOiBSZWFjdC5GQzxJUHJvcHM+ID0gKHsgYXBwLCBjbGFzc05hbWUsIHdpZHRoID0gMjAsIGhlaWdodCA9IDIwLCAuLi5wcm9wcyB9KSA9PiB7XG4gICAgbGV0IGljb25VcmxzID0gW3JlcXVpcmUoXCIuLi8uLi8uLi8uLi9yZXMvaW1nL2VsZW1lbnQtaWNvbnMvcm9vbS9kZWZhdWx0X2FwcC5zdmdcIikuZGVmYXVsdF07XG4gICAgLy8gaGV1cmlzdGljcyBmb3Igc29tZSBiZXR0ZXIgaWNvbnMgdW50aWwgV2lkZ2V0cyBzdXBwb3J0IHRoZWlyIG93biBpY29uc1xuICAgIGlmIChhcHAudHlwZS5pbmNsdWRlcyhcImppdHNpXCIpKSB7XG4gICAgICAgIGljb25VcmxzID0gW3JlcXVpcmUoXCIuLi8uLi8uLi8uLi9yZXMvaW1nL2VsZW1lbnQtaWNvbnMvcm9vbS9kZWZhdWx0X3ZpZGVvLnN2Z1wiKS5kZWZhdWx0XTtcbiAgICB9IGVsc2UgaWYgKGFwcC50eXBlLmluY2x1ZGVzKFwibWVldGluZ1wiKSB8fCBhcHAudHlwZS5pbmNsdWRlcyhcImNhbGVuZGFyXCIpKSB7XG4gICAgICAgIGljb25VcmxzID0gW3JlcXVpcmUoXCIuLi8uLi8uLi8uLi9yZXMvaW1nL2VsZW1lbnQtaWNvbnMvcm9vbS9kZWZhdWx0X2NhbC5zdmdcIikuZGVmYXVsdF07XG4gICAgfSBlbHNlIGlmIChhcHAudHlwZS5pbmNsdWRlcyhcInBhZFwiKSB8fCBhcHAudHlwZS5pbmNsdWRlcyhcImRvY1wiKSB8fCBhcHAudHlwZS5pbmNsdWRlcyhcImNhbGNcIikpIHtcbiAgICAgICAgaWNvblVybHMgPSBbcmVxdWlyZShcIi4uLy4uLy4uLy4uL3Jlcy9pbWcvZWxlbWVudC1pY29ucy9yb29tL2RlZmF1bHRfZG9jLnN2Z1wiKS5kZWZhdWx0XTtcbiAgICB9IGVsc2UgaWYgKGFwcC50eXBlLmluY2x1ZGVzKFwiY2xvY2tcIikpIHtcbiAgICAgICAgaWNvblVybHMgPSBbcmVxdWlyZShcIi4uLy4uLy4uLy4uL3Jlcy9pbWcvZWxlbWVudC1pY29ucy9yb29tL2RlZmF1bHRfY2xvY2suc3ZnXCIpLmRlZmF1bHRdO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxCYXNlQXZhdGFyXG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICBuYW1lPXthcHAuaWR9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXCJteF9XaWRnZXRBdmF0YXJcIiwgY2xhc3NOYW1lKX1cbiAgICAgICAgICAgIC8vIE1TQzI3NjVcbiAgICAgICAgICAgIHVybD17YXBwLmF2YXRhcl91cmwgPyBtZWRpYUZyb21NeGMoYXBwLmF2YXRhcl91cmwpLmdldFNxdWFyZVRodW1ibmFpbEh0dHAoMjApIDogdW5kZWZpbmVkfVxuICAgICAgICAgICAgdXJscz17aWNvblVybHN9XG4gICAgICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgLz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgV2lkZ2V0QXZhdGFyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUdBOztBQUNBOzs7O0FBTUEsTUFBTUEsWUFBOEIsR0FBRyxRQUEyRDtFQUFBLElBQTFEO0lBQUVDLEdBQUY7SUFBT0MsU0FBUDtJQUFrQkMsS0FBSyxHQUFHLEVBQTFCO0lBQThCQyxNQUFNLEdBQUc7RUFBdkMsQ0FBMEQ7RUFBQSxJQUFaQyxLQUFZO0VBQzlGLElBQUlDLFFBQVEsR0FBRyxDQUFDQyxPQUFPLENBQUMsd0RBQUQsQ0FBUCxDQUFrRUMsT0FBbkUsQ0FBZixDQUQ4RixDQUU5Rjs7RUFDQSxJQUFJUCxHQUFHLENBQUNRLElBQUosQ0FBU0MsUUFBVCxDQUFrQixPQUFsQixDQUFKLEVBQWdDO0lBQzVCSixRQUFRLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLDBEQUFELENBQVAsQ0FBb0VDLE9BQXJFLENBQVg7RUFDSCxDQUZELE1BRU8sSUFBSVAsR0FBRyxDQUFDUSxJQUFKLENBQVNDLFFBQVQsQ0FBa0IsU0FBbEIsS0FBZ0NULEdBQUcsQ0FBQ1EsSUFBSixDQUFTQyxRQUFULENBQWtCLFVBQWxCLENBQXBDLEVBQW1FO0lBQ3RFSixRQUFRLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLHdEQUFELENBQVAsQ0FBa0VDLE9BQW5FLENBQVg7RUFDSCxDQUZNLE1BRUEsSUFBSVAsR0FBRyxDQUFDUSxJQUFKLENBQVNDLFFBQVQsQ0FBa0IsS0FBbEIsS0FBNEJULEdBQUcsQ0FBQ1EsSUFBSixDQUFTQyxRQUFULENBQWtCLEtBQWxCLENBQTVCLElBQXdEVCxHQUFHLENBQUNRLElBQUosQ0FBU0MsUUFBVCxDQUFrQixNQUFsQixDQUE1RCxFQUF1RjtJQUMxRkosUUFBUSxHQUFHLENBQUNDLE9BQU8sQ0FBQyx3REFBRCxDQUFQLENBQWtFQyxPQUFuRSxDQUFYO0VBQ0gsQ0FGTSxNQUVBLElBQUlQLEdBQUcsQ0FBQ1EsSUFBSixDQUFTQyxRQUFULENBQWtCLE9BQWxCLENBQUosRUFBZ0M7SUFDbkNKLFFBQVEsR0FBRyxDQUFDQyxPQUFPLENBQUMsMERBQUQsQ0FBUCxDQUFvRUMsT0FBckUsQ0FBWDtFQUNIOztFQUVELG9CQUNJLDZCQUFDLG1CQUFELDZCQUNRSCxLQURSO0lBRUksSUFBSSxFQUFFSixHQUFHLENBQUNVLEVBRmQ7SUFHSSxTQUFTLEVBQUUsSUFBQUMsbUJBQUEsRUFBVyxpQkFBWCxFQUE4QlYsU0FBOUIsQ0FIZixDQUlJO0lBSko7SUFLSSxHQUFHLEVBQUVELEdBQUcsQ0FBQ1ksVUFBSixHQUFpQixJQUFBQyxtQkFBQSxFQUFhYixHQUFHLENBQUNZLFVBQWpCLEVBQTZCRSxzQkFBN0IsQ0FBb0QsRUFBcEQsQ0FBakIsR0FBMkVDLFNBTHBGO0lBTUksSUFBSSxFQUFFVixRQU5WO0lBT0ksS0FBSyxFQUFFSCxLQVBYO0lBUUksTUFBTSxFQUFFQztFQVJaLEdBREo7QUFZSCxDQXpCRDs7ZUEyQmVKLFkifQ==