"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _FormattingUtils = require("../../../utils/FormattingUtils");

var _UserIdentifier = _interopRequireDefault(require("../../../customisations/UserIdentifier"));

/*
Copyright 2021 Å imon Brandner <simon.bra.ag@gmail.com>
Copyright 2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class DisambiguatedProfile extends _react.default.Component {
  render() {
    const {
      fallbackName,
      member,
      colored,
      emphasizeDisplayName,
      onClick
    } = this.props;
    const rawDisplayName = member?.rawDisplayName || fallbackName;
    const mxid = member?.userId;
    let colorClass;

    if (colored) {
      colorClass = (0, _FormattingUtils.getUserNameColorClass)(fallbackName);
    }

    let mxidElement;

    if (member?.disambiguate && mxid) {
      mxidElement = /*#__PURE__*/_react.default.createElement("span", {
        className: "mx_DisambiguatedProfile_mxid"
      }, _UserIdentifier.default.getDisplayUserIdentifier(mxid, {
        withDisplayName: true,
        roomId: member.roomId
      }));
    }

    const displayNameClasses = (0, _classnames.default)({
      "mx_DisambiguatedProfile_displayName": emphasizeDisplayName,
      [colorClass]: true
    });
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_DisambiguatedProfile",
      onClick: onClick
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: displayNameClasses,
      dir: "auto"
    }, rawDisplayName), mxidElement);
  }

}

exports.default = DisambiguatedProfile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEaXNhbWJpZ3VhdGVkUHJvZmlsZSIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwiZmFsbGJhY2tOYW1lIiwibWVtYmVyIiwiY29sb3JlZCIsImVtcGhhc2l6ZURpc3BsYXlOYW1lIiwib25DbGljayIsInByb3BzIiwicmF3RGlzcGxheU5hbWUiLCJteGlkIiwidXNlcklkIiwiY29sb3JDbGFzcyIsImdldFVzZXJOYW1lQ29sb3JDbGFzcyIsIm14aWRFbGVtZW50IiwiZGlzYW1iaWd1YXRlIiwiVXNlcklkZW50aWZpZXIiLCJnZXREaXNwbGF5VXNlcklkZW50aWZpZXIiLCJ3aXRoRGlzcGxheU5hbWUiLCJyb29tSWQiLCJkaXNwbGF5TmFtZUNsYXNzZXMiLCJjbGFzc05hbWVzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3MvbWVzc2FnZXMvRGlzYW1iaWd1YXRlZFByb2ZpbGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMSDFoGltb24gQnJhbmRuZXIgPHNpbW9uLmJyYS5hZ0BnbWFpbC5jb20+XG5Db3B5cmlnaHQgMjAyMiBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSb29tTWVtYmVyIH0gZnJvbSAnbWF0cml4LWpzLXNkay9zcmMvbW9kZWxzL3Jvb20tbWVtYmVyJztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgeyBnZXRVc2VyTmFtZUNvbG9yQ2xhc3MgfSBmcm9tICcuLi8uLi8uLi91dGlscy9Gb3JtYXR0aW5nVXRpbHMnO1xuaW1wb3J0IFVzZXJJZGVudGlmaWVyIGZyb20gXCIuLi8uLi8uLi9jdXN0b21pc2F0aW9ucy9Vc2VySWRlbnRpZmllclwiO1xuXG5pbnRlcmZhY2UgSVByb3BzIHtcbiAgICBtZW1iZXI/OiBSb29tTWVtYmVyO1xuICAgIGZhbGxiYWNrTmFtZTogc3RyaW5nO1xuICAgIG9uQ2xpY2s/KCk6IHZvaWQ7XG4gICAgY29sb3JlZD86IGJvb2xlYW47XG4gICAgZW1waGFzaXplRGlzcGxheU5hbWU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNhbWJpZ3VhdGVkUHJvZmlsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgZmFsbGJhY2tOYW1lLCBtZW1iZXIsIGNvbG9yZWQsIGVtcGhhc2l6ZURpc3BsYXlOYW1lLCBvbkNsaWNrIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCByYXdEaXNwbGF5TmFtZSA9IG1lbWJlcj8ucmF3RGlzcGxheU5hbWUgfHwgZmFsbGJhY2tOYW1lO1xuICAgICAgICBjb25zdCBteGlkID0gbWVtYmVyPy51c2VySWQ7XG5cbiAgICAgICAgbGV0IGNvbG9yQ2xhc3M7XG4gICAgICAgIGlmIChjb2xvcmVkKSB7XG4gICAgICAgICAgICBjb2xvckNsYXNzID0gZ2V0VXNlck5hbWVDb2xvckNsYXNzKGZhbGxiYWNrTmFtZSk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgbXhpZEVsZW1lbnQ7XG4gICAgICAgIGlmIChtZW1iZXI/LmRpc2FtYmlndWF0ZSAmJiBteGlkKSB7XG4gICAgICAgICAgICBteGlkRWxlbWVudCA9IChcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJteF9EaXNhbWJpZ3VhdGVkUHJvZmlsZV9teGlkXCI+XG4gICAgICAgICAgICAgICAgICAgIHsgVXNlcklkZW50aWZpZXIuZ2V0RGlzcGxheVVzZXJJZGVudGlmaWVyKFxuICAgICAgICAgICAgICAgICAgICAgICAgbXhpZCwgeyB3aXRoRGlzcGxheU5hbWU6IHRydWUsIHJvb21JZDogbWVtYmVyLnJvb21JZCB9LFxuICAgICAgICAgICAgICAgICAgICApIH1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZGlzcGxheU5hbWVDbGFzc2VzID0gY2xhc3NOYW1lcyh7XG4gICAgICAgICAgICBcIm14X0Rpc2FtYmlndWF0ZWRQcm9maWxlX2Rpc3BsYXlOYW1lXCI6IGVtcGhhc2l6ZURpc3BsYXlOYW1lLFxuICAgICAgICAgICAgW2NvbG9yQ2xhc3NdOiB0cnVlLFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9EaXNhbWJpZ3VhdGVkUHJvZmlsZVwiIG9uQ2xpY2s9e29uQ2xpY2t9PlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17ZGlzcGxheU5hbWVDbGFzc2VzfSBkaXI9XCJhdXRvXCI+XG4gICAgICAgICAgICAgICAgICAgIHsgcmF3RGlzcGxheU5hbWUgfVxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICB7IG14aWRFbGVtZW50IH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBaUJBOztBQUVBOztBQUVBOztBQUNBOztBQXRCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWlCZSxNQUFNQSxvQkFBTixTQUFtQ0MsY0FBQSxDQUFNQyxTQUF6QyxDQUEyRDtFQUN0RUMsTUFBTSxHQUFHO0lBQ0wsTUFBTTtNQUFFQyxZQUFGO01BQWdCQyxNQUFoQjtNQUF3QkMsT0FBeEI7TUFBaUNDLG9CQUFqQztNQUF1REM7SUFBdkQsSUFBbUUsS0FBS0MsS0FBOUU7SUFDQSxNQUFNQyxjQUFjLEdBQUdMLE1BQU0sRUFBRUssY0FBUixJQUEwQk4sWUFBakQ7SUFDQSxNQUFNTyxJQUFJLEdBQUdOLE1BQU0sRUFBRU8sTUFBckI7SUFFQSxJQUFJQyxVQUFKOztJQUNBLElBQUlQLE9BQUosRUFBYTtNQUNUTyxVQUFVLEdBQUcsSUFBQUMsc0NBQUEsRUFBc0JWLFlBQXRCLENBQWI7SUFDSDs7SUFFRCxJQUFJVyxXQUFKOztJQUNBLElBQUlWLE1BQU0sRUFBRVcsWUFBUixJQUF3QkwsSUFBNUIsRUFBa0M7TUFDOUJJLFdBQVcsZ0JBQ1A7UUFBTSxTQUFTLEVBQUM7TUFBaEIsR0FDTUUsdUJBQUEsQ0FBZUMsd0JBQWYsQ0FDRVAsSUFERixFQUNRO1FBQUVRLGVBQWUsRUFBRSxJQUFuQjtRQUF5QkMsTUFBTSxFQUFFZixNQUFNLENBQUNlO01BQXhDLENBRFIsQ0FETixDQURKO0lBT0g7O0lBRUQsTUFBTUMsa0JBQWtCLEdBQUcsSUFBQUMsbUJBQUEsRUFBVztNQUNsQyx1Q0FBdUNmLG9CQURMO01BRWxDLENBQUNNLFVBQUQsR0FBYztJQUZvQixDQUFYLENBQTNCO0lBS0Esb0JBQ0k7TUFBSyxTQUFTLEVBQUMseUJBQWY7TUFBeUMsT0FBTyxFQUFFTDtJQUFsRCxnQkFDSTtNQUFNLFNBQVMsRUFBRWEsa0JBQWpCO01BQXFDLEdBQUcsRUFBQztJQUF6QyxHQUNNWCxjQUROLENBREosRUFJTUssV0FKTixDQURKO0VBUUg7O0FBbkNxRSJ9