"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _event = require("matrix-js-sdk/src/@types/event");

var _MImageBody = _interopRequireDefault(require("./MImageBody"));

var _FileUtils = require("../../../utils/FileUtils");

var _SenderProfile = _interopRequireDefault(require("./SenderProfile"));

var _languageHandler = require("../../../languageHandler");

/*
Copyright 2020-2021 Tulir Asokan <tulir@maunium.net>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const FORCED_IMAGE_HEIGHT = 44;

class MImageReplyBody extends _MImageBody.default {
  constructor() {
    super(...arguments);
    (0, _defineProperty2.default)(this, "onClick", ev => {
      ev.preventDefault();
    });
  }

  wrapImage(contentUrl, children) {
    return children;
  } // Don't show "Download this_file.png ..."


  getFileBody() {
    const sticker = this.props.mxEvent.getType() === _event.EventType.Sticker;

    return (0, _FileUtils.presentableTextForFile)(this.props.mxEvent.getContent(), sticker ? (0, _languageHandler._t)("Sticker") : (0, _languageHandler._t)("Image"), !sticker);
  }

  getBanner(content) {
    return null; // we don't need a banner, nor have space for one
  }

  render() {
    if (this.state.error) {
      return super.render();
    }

    const content = this.props.mxEvent.getContent();
    const thumbnail = this.messageContent(this.state.contentUrl, this.state.thumbUrl, content, FORCED_IMAGE_HEIGHT);
    const fileBody = this.getFileBody();

    const sender = /*#__PURE__*/_react.default.createElement(_SenderProfile.default, {
      mxEvent: this.props.mxEvent
    });

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody"
    }, thumbnail, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody_info"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody_sender"
    }, sender), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody_filename"
    }, fileBody)));
  }

}

exports.default = MImageReplyBody;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGT1JDRURfSU1BR0VfSEVJR0hUIiwiTUltYWdlUmVwbHlCb2R5IiwiTUltYWdlQm9keSIsImV2IiwicHJldmVudERlZmF1bHQiLCJ3cmFwSW1hZ2UiLCJjb250ZW50VXJsIiwiY2hpbGRyZW4iLCJnZXRGaWxlQm9keSIsInN0aWNrZXIiLCJwcm9wcyIsIm14RXZlbnQiLCJnZXRUeXBlIiwiRXZlbnRUeXBlIiwiU3RpY2tlciIsInByZXNlbnRhYmxlVGV4dEZvckZpbGUiLCJnZXRDb250ZW50IiwiX3QiLCJnZXRCYW5uZXIiLCJjb250ZW50IiwicmVuZGVyIiwic3RhdGUiLCJlcnJvciIsInRodW1ibmFpbCIsIm1lc3NhZ2VDb250ZW50IiwidGh1bWJVcmwiLCJmaWxlQm9keSIsInNlbmRlciJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL21lc3NhZ2VzL01JbWFnZVJlcGx5Qm9keS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIwLTIwMjEgVHVsaXIgQXNva2FuIDx0dWxpckBtYXVuaXVtLm5ldD5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBFdmVudFR5cGUgfSBmcm9tIFwibWF0cml4LWpzLXNkay9zcmMvQHR5cGVzL2V2ZW50XCI7XG5cbmltcG9ydCBNSW1hZ2VCb2R5IGZyb20gXCIuL01JbWFnZUJvZHlcIjtcbmltcG9ydCB7IHByZXNlbnRhYmxlVGV4dEZvckZpbGUgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvRmlsZVV0aWxzXCI7XG5pbXBvcnQgeyBJTWVkaWFFdmVudENvbnRlbnQgfSBmcm9tIFwiLi4vLi4vLi4vY3VzdG9taXNhdGlvbnMvbW9kZWxzL0lNZWRpYUV2ZW50Q29udGVudFwiO1xuaW1wb3J0IFNlbmRlclByb2ZpbGUgZnJvbSBcIi4vU2VuZGVyUHJvZmlsZVwiO1xuaW1wb3J0IHsgX3QgfSBmcm9tIFwiLi4vLi4vLi4vbGFuZ3VhZ2VIYW5kbGVyXCI7XG5cbmNvbnN0IEZPUkNFRF9JTUFHRV9IRUlHSFQgPSA0NDtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTUltYWdlUmVwbHlCb2R5IGV4dGVuZHMgTUltYWdlQm9keSB7XG4gICAgcHVibGljIG9uQ2xpY2sgPSAoZXY6IFJlYWN0Lk1vdXNlRXZlbnQpOiB2b2lkID0+IHtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICB9O1xuXG4gICAgcHVibGljIHdyYXBJbWFnZShjb250ZW50VXJsOiBzdHJpbmcsIGNoaWxkcmVuOiBKU1guRWxlbWVudCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgcmV0dXJuIGNoaWxkcmVuO1xuICAgIH1cblxuICAgIC8vIERvbid0IHNob3cgXCJEb3dubG9hZCB0aGlzX2ZpbGUucG5nIC4uLlwiXG4gICAgcHVibGljIGdldEZpbGVCb2R5KCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHN0aWNrZXIgPSB0aGlzLnByb3BzLm14RXZlbnQuZ2V0VHlwZSgpID09PSBFdmVudFR5cGUuU3RpY2tlcjtcbiAgICAgICAgcmV0dXJuIHByZXNlbnRhYmxlVGV4dEZvckZpbGUodGhpcy5wcm9wcy5teEV2ZW50LmdldENvbnRlbnQoKSwgc3RpY2tlciA/IF90KFwiU3RpY2tlclwiKSA6IF90KFwiSW1hZ2VcIiksICFzdGlja2VyKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0QmFubmVyKGNvbnRlbnQ6IElNZWRpYUV2ZW50Q29udGVudCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgcmV0dXJuIG51bGw7IC8vIHdlIGRvbid0IG5lZWQgYSBiYW5uZXIsIG5vciBoYXZlIHNwYWNlIGZvciBvbmVcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gc3VwZXIucmVuZGVyKCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wcm9wcy5teEV2ZW50LmdldENvbnRlbnQ8SU1lZGlhRXZlbnRDb250ZW50PigpO1xuICAgICAgICBjb25zdCB0aHVtYm5haWwgPSB0aGlzLm1lc3NhZ2VDb250ZW50KHRoaXMuc3RhdGUuY29udGVudFVybCwgdGhpcy5zdGF0ZS50aHVtYlVybCwgY29udGVudCwgRk9SQ0VEX0lNQUdFX0hFSUdIVCk7XG4gICAgICAgIGNvbnN0IGZpbGVCb2R5ID0gdGhpcy5nZXRGaWxlQm9keSgpO1xuICAgICAgICBjb25zdCBzZW5kZXIgPSA8U2VuZGVyUHJvZmlsZVxuICAgICAgICAgICAgbXhFdmVudD17dGhpcy5wcm9wcy5teEV2ZW50fVxuICAgICAgICAvPjtcblxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJteF9NSW1hZ2VSZXBseUJvZHlcIj5cbiAgICAgICAgICAgIHsgdGh1bWJuYWlsIH1cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfTUltYWdlUmVwbHlCb2R5X2luZm9cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X01JbWFnZVJlcGx5Qm9keV9zZW5kZXJcIj57IHNlbmRlciB9PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9NSW1hZ2VSZXBseUJvZHlfZmlsZW5hbWVcIj57IGZpbGVCb2R5IH08L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj47XG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUF2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBV0EsTUFBTUEsbUJBQW1CLEdBQUcsRUFBNUI7O0FBRWUsTUFBTUMsZUFBTixTQUE4QkMsbUJBQTlCLENBQXlDO0VBQUE7SUFBQTtJQUFBLCtDQUNsQ0MsRUFBRCxJQUFnQztNQUM3Q0EsRUFBRSxDQUFDQyxjQUFIO0lBQ0gsQ0FIbUQ7RUFBQTs7RUFLN0NDLFNBQVMsQ0FBQ0MsVUFBRCxFQUFxQkMsUUFBckIsRUFBeUQ7SUFDckUsT0FBT0EsUUFBUDtFQUNILENBUG1ELENBU3BEOzs7RUFDT0MsV0FBVyxHQUFXO0lBQ3pCLE1BQU1DLE9BQU8sR0FBRyxLQUFLQyxLQUFMLENBQVdDLE9BQVgsQ0FBbUJDLE9BQW5CLE9BQWlDQyxnQkFBQSxDQUFVQyxPQUEzRDs7SUFDQSxPQUFPLElBQUFDLGlDQUFBLEVBQXVCLEtBQUtMLEtBQUwsQ0FBV0MsT0FBWCxDQUFtQkssVUFBbkIsRUFBdkIsRUFBd0RQLE9BQU8sR0FBRyxJQUFBUSxtQkFBQSxFQUFHLFNBQUgsQ0FBSCxHQUFtQixJQUFBQSxtQkFBQSxFQUFHLE9BQUgsQ0FBbEYsRUFBK0YsQ0FBQ1IsT0FBaEcsQ0FBUDtFQUNIOztFQUVTUyxTQUFTLENBQUNDLE9BQUQsRUFBMkM7SUFDMUQsT0FBTyxJQUFQLENBRDBELENBQzdDO0VBQ2hCOztFQUVEQyxNQUFNLEdBQUc7SUFDTCxJQUFJLEtBQUtDLEtBQUwsQ0FBV0MsS0FBZixFQUFzQjtNQUNsQixPQUFPLE1BQU1GLE1BQU4sRUFBUDtJQUNIOztJQUVELE1BQU1ELE9BQU8sR0FBRyxLQUFLVCxLQUFMLENBQVdDLE9BQVgsQ0FBbUJLLFVBQW5CLEVBQWhCO0lBQ0EsTUFBTU8sU0FBUyxHQUFHLEtBQUtDLGNBQUwsQ0FBb0IsS0FBS0gsS0FBTCxDQUFXZixVQUEvQixFQUEyQyxLQUFLZSxLQUFMLENBQVdJLFFBQXRELEVBQWdFTixPQUFoRSxFQUF5RW5CLG1CQUF6RSxDQUFsQjtJQUNBLE1BQU0wQixRQUFRLEdBQUcsS0FBS2xCLFdBQUwsRUFBakI7O0lBQ0EsTUFBTW1CLE1BQU0sZ0JBQUcsNkJBQUMsc0JBQUQ7TUFDWCxPQUFPLEVBQUUsS0FBS2pCLEtBQUwsQ0FBV0M7SUFEVCxFQUFmOztJQUlBLG9CQUFPO01BQUssU0FBUyxFQUFDO0lBQWYsR0FDRFksU0FEQyxlQUVIO01BQUssU0FBUyxFQUFDO0lBQWYsZ0JBQ0k7TUFBSyxTQUFTLEVBQUM7SUFBZixHQUE2Q0ksTUFBN0MsQ0FESixlQUVJO01BQUssU0FBUyxFQUFDO0lBQWYsR0FBK0NELFFBQS9DLENBRkosQ0FGRyxDQUFQO0VBT0g7O0FBdENtRCJ9