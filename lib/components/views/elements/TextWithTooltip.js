"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _TooltipTarget = _interopRequireDefault(require("./TooltipTarget"));

const _excluded = ["class", "children", "tooltip", "tooltipClass", "tooltipProps"];

class TextWithTooltip extends _react.default.Component {
  constructor(props) {
    super(props);
  }

  render() {
    const _this$props = this.props,
          {
      class: className,
      children,
      tooltip,
      tooltipClass,
      tooltipProps
    } = _this$props,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
    return /*#__PURE__*/_react.default.createElement(_TooltipTarget.default, (0, _extends2.default)({
      onClick: this.props.onClick,
      tooltipTargetClassName: (0, _classnames.default)("mx_TextWithTooltip_target", className)
    }, tooltipProps, {
      label: tooltip,
      tooltipClassName: tooltipClass,
      className: "mx_TextWithTooltip_tooltip"
    }, props), children);
  }

}

exports.default = TextWithTooltip;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZXh0V2l0aFRvb2x0aXAiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJyZW5kZXIiLCJjbGFzcyIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwidG9vbHRpcCIsInRvb2x0aXBDbGFzcyIsInRvb2x0aXBQcm9wcyIsIm9uQ2xpY2siLCJjbGFzc05hbWVzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3MvZWxlbWVudHMvVGV4dFdpdGhUb29sdGlwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuIENvcHlyaWdodCAyMDE5IE5ldyBWZWN0b3IgTHRkLlxuXG4gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCBSZWFjdCwgeyBIVE1MQXR0cmlidXRlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG5pbXBvcnQgVG9vbHRpcFRhcmdldCBmcm9tICcuL1Rvb2x0aXBUYXJnZXQnO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgSFRNTEF0dHJpYnV0ZXM8SFRNTFNwYW5FbGVtZW50PiB7XG4gICAgY2xhc3M/OiBzdHJpbmc7XG4gICAgdG9vbHRpcENsYXNzPzogc3RyaW5nO1xuICAgIHRvb2x0aXA6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgICB0b29sdGlwUHJvcHM/OiBPbWl0PFJlYWN0LkNvbXBvbmVudFByb3BzPHR5cGVvZiBUb29sdGlwVGFyZ2V0PiwgXCJsYWJlbFwiIHwgXCJ0b29sdGlwQ2xhc3NOYW1lXCIgfCBcImNsYXNzTmFtZVwiPjtcbiAgICBvbkNsaWNrPzogKGV2PzogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dFdpdGhUb29sdGlwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PElQcm9wcz4ge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBJUHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW5kZXIoKTogSlNYLkVsZW1lbnQge1xuICAgICAgICBjb25zdCB7IGNsYXNzOiBjbGFzc05hbWUsIGNoaWxkcmVuLCB0b29sdGlwLCB0b29sdGlwQ2xhc3MsIHRvb2x0aXBQcm9wcywgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxUb29sdGlwVGFyZ2V0XG4gICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5vbkNsaWNrfVxuICAgICAgICAgICAgICAgIHRvb2x0aXBUYXJnZXRDbGFzc05hbWU9e2NsYXNzTmFtZXMoXCJteF9UZXh0V2l0aFRvb2x0aXBfdGFyZ2V0XCIsIGNsYXNzTmFtZSl9XG4gICAgICAgICAgICAgICAgey4uLnRvb2x0aXBQcm9wc31cbiAgICAgICAgICAgICAgICBsYWJlbD17dG9vbHRpcH1cbiAgICAgICAgICAgICAgICB0b29sdGlwQ2xhc3NOYW1lPXt0b29sdGlwQ2xhc3N9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibXhfVGV4dFdpdGhUb29sdGlwX3Rvb2x0aXBcIlxuICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgICAgICAgIDwvVG9vbHRpcFRhcmdldD5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFnQkE7O0FBQ0E7O0FBRUE7Ozs7QUFVZSxNQUFNQSxlQUFOLFNBQThCQyxjQUFBLENBQU1DLFNBQXBDLENBQXNEO0VBQ2pFQyxXQUFXLENBQUNDLEtBQUQsRUFBZ0I7SUFDdkIsTUFBTUEsS0FBTjtFQUNIOztFQUVNQyxNQUFNLEdBQWdCO0lBQ3pCLG9CQUFzRixLQUFLRCxLQUEzRjtJQUFBLE1BQU07TUFBRUUsS0FBSyxFQUFFQyxTQUFUO01BQW9CQyxRQUFwQjtNQUE4QkMsT0FBOUI7TUFBdUNDLFlBQXZDO01BQXFEQztJQUFyRCxDQUFOO0lBQUEsTUFBNEVQLEtBQTVFO0lBRUEsb0JBQ0ksNkJBQUMsc0JBQUQ7TUFDSSxPQUFPLEVBQUUsS0FBS0EsS0FBTCxDQUFXUSxPQUR4QjtNQUVJLHNCQUFzQixFQUFFLElBQUFDLG1CQUFBLEVBQVcsMkJBQVgsRUFBd0NOLFNBQXhDO0lBRjVCLEdBR1FJLFlBSFI7TUFJSSxLQUFLLEVBQUVGLE9BSlg7TUFLSSxnQkFBZ0IsRUFBRUMsWUFMdEI7TUFNSSxTQUFTLEVBQUM7SUFOZCxHQU9RTixLQVBSLEdBU01JLFFBVE4sQ0FESjtFQWFIOztBQXJCZ0UifQ==