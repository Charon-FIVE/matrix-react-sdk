"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _WidgetUtils = _interopRequireDefault(require("../../../utils/WidgetUtils"));

var _AppTile = _interopRequireDefault(require("./AppTile"));

var _MatrixClientContext = _interopRequireDefault(require("../../../contexts/MatrixClientContext"));

/*
Copyright 2018 New Vector Ltd
Copyright 2019-2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class PersistentApp extends _react.default.Component {
  constructor(props, context) {
    super(props, context);
    (0, _defineProperty2.default)(this, "context", void 0);
    (0, _defineProperty2.default)(this, "room", void 0);
    this.room = context.getRoom(this.props.persistentRoomId);
  }

  get app() {
    // get the widget data
    const appEvent = _WidgetUtils.default.getRoomWidgets(this.room).find(ev => ev.getStateKey() === this.props.persistentWidgetId);

    if (appEvent) {
      return _WidgetUtils.default.makeAppConfig(appEvent.getStateKey(), appEvent.getContent(), appEvent.getSender(), this.room.roomId, appEvent.getId());
    } else {
      return null;
    }
  }

  render() {
    const app = this.app;

    if (app) {
      return /*#__PURE__*/_react.default.createElement(_AppTile.default, {
        key: app.id,
        app: app,
        fullWidth: true,
        room: this.room,
        userId: this.context.credentials.userId,
        creatorUserId: app.creatorUserId,
        widgetPageTitle: _WidgetUtils.default.getWidgetDataTitle(app),
        waitForIframeLoad: app.waitForIframeLoad,
        miniMode: true,
        showMenubar: false,
        pointerEvents: this.props.pointerEvents,
        movePersistedElement: this.props.movePersistedElement
      });
    }

    return null;
  }

}

exports.default = PersistentApp;
(0, _defineProperty2.default)(PersistentApp, "contextType", _MatrixClientContext.default);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQZXJzaXN0ZW50QXBwIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiY29udGV4dCIsInJvb20iLCJnZXRSb29tIiwicGVyc2lzdGVudFJvb21JZCIsImFwcCIsImFwcEV2ZW50IiwiV2lkZ2V0VXRpbHMiLCJnZXRSb29tV2lkZ2V0cyIsImZpbmQiLCJldiIsImdldFN0YXRlS2V5IiwicGVyc2lzdGVudFdpZGdldElkIiwibWFrZUFwcENvbmZpZyIsImdldENvbnRlbnQiLCJnZXRTZW5kZXIiLCJyb29tSWQiLCJnZXRJZCIsInJlbmRlciIsImlkIiwiY3JlZGVudGlhbHMiLCJ1c2VySWQiLCJjcmVhdG9yVXNlcklkIiwiZ2V0V2lkZ2V0RGF0YVRpdGxlIiwid2FpdEZvcklmcmFtZUxvYWQiLCJwb2ludGVyRXZlbnRzIiwibW92ZVBlcnNpc3RlZEVsZW1lbnQiLCJNYXRyaXhDbGllbnRDb250ZXh0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3MvZWxlbWVudHMvUGVyc2lzdGVudEFwcC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDE4IE5ldyBWZWN0b3IgTHRkXG5Db3B5cmlnaHQgMjAxOS0yMDIyIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0LCB7IENvbnRleHRUeXBlLCBNdXRhYmxlUmVmT2JqZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm9vbSB9IGZyb20gXCJtYXRyaXgtanMtc2RrL3NyYy9tb2RlbHMvcm9vbVwiO1xuXG5pbXBvcnQgV2lkZ2V0VXRpbHMgZnJvbSAnLi4vLi4vLi4vdXRpbHMvV2lkZ2V0VXRpbHMnO1xuaW1wb3J0IEFwcFRpbGUgZnJvbSBcIi4vQXBwVGlsZVwiO1xuaW1wb3J0IHsgSUFwcCB9IGZyb20gJy4uLy4uLy4uL3N0b3Jlcy9XaWRnZXRTdG9yZSc7XG5pbXBvcnQgTWF0cml4Q2xpZW50Q29udGV4dCBmcm9tIFwiLi4vLi4vLi4vY29udGV4dHMvTWF0cml4Q2xpZW50Q29udGV4dFwiO1xuXG5pbnRlcmZhY2UgSVByb3BzIHtcbiAgICBwZXJzaXN0ZW50V2lkZ2V0SWQ6IHN0cmluZztcbiAgICBwZXJzaXN0ZW50Um9vbUlkOiBzdHJpbmc7XG4gICAgcG9pbnRlckV2ZW50cz86IHN0cmluZztcbiAgICBtb3ZlUGVyc2lzdGVkRWxlbWVudDogTXV0YWJsZVJlZk9iamVjdDwoKSA9PiB2b2lkPjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGVyc2lzdGVudEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICBwdWJsaWMgc3RhdGljIGNvbnRleHRUeXBlID0gTWF0cml4Q2xpZW50Q29udGV4dDtcbiAgICBjb250ZXh0OiBDb250ZXh0VHlwZTx0eXBlb2YgTWF0cml4Q2xpZW50Q29udGV4dD47XG4gICAgcHJpdmF0ZSByb29tOiBSb29tO1xuXG4gICAgY29uc3RydWN0b3IocHJvcHM6IElQcm9wcywgY29udGV4dDogQ29udGV4dFR5cGU8dHlwZW9mIE1hdHJpeENsaWVudENvbnRleHQ+KSB7XG4gICAgICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KTtcbiAgICAgICAgdGhpcy5yb29tID0gY29udGV4dC5nZXRSb29tKHRoaXMucHJvcHMucGVyc2lzdGVudFJvb21JZCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXQgYXBwKCk6IElBcHAgfCBudWxsIHtcbiAgICAgICAgLy8gZ2V0IHRoZSB3aWRnZXQgZGF0YVxuICAgICAgICBjb25zdCBhcHBFdmVudCA9IFdpZGdldFV0aWxzLmdldFJvb21XaWRnZXRzKHRoaXMucm9vbSkuZmluZChldiA9PlxuICAgICAgICAgICAgZXYuZ2V0U3RhdGVLZXkoKSA9PT0gdGhpcy5wcm9wcy5wZXJzaXN0ZW50V2lkZ2V0SWQsXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKGFwcEV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gV2lkZ2V0VXRpbHMubWFrZUFwcENvbmZpZyhcbiAgICAgICAgICAgICAgICBhcHBFdmVudC5nZXRTdGF0ZUtleSgpLCBhcHBFdmVudC5nZXRDb250ZW50KCksIGFwcEV2ZW50LmdldFNlbmRlcigpLFxuICAgICAgICAgICAgICAgIHRoaXMucm9vbS5yb29tSWQsIGFwcEV2ZW50LmdldElkKCksXG4gICAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgY29uc3QgYXBwID0gdGhpcy5hcHA7XG4gICAgICAgIGlmIChhcHApIHtcbiAgICAgICAgICAgIHJldHVybiA8QXBwVGlsZVxuICAgICAgICAgICAgICAgIGtleT17YXBwLmlkfVxuICAgICAgICAgICAgICAgIGFwcD17YXBwfVxuICAgICAgICAgICAgICAgIGZ1bGxXaWR0aD17dHJ1ZX1cbiAgICAgICAgICAgICAgICByb29tPXt0aGlzLnJvb219XG4gICAgICAgICAgICAgICAgdXNlcklkPXt0aGlzLmNvbnRleHQuY3JlZGVudGlhbHMudXNlcklkfVxuICAgICAgICAgICAgICAgIGNyZWF0b3JVc2VySWQ9e2FwcC5jcmVhdG9yVXNlcklkfVxuICAgICAgICAgICAgICAgIHdpZGdldFBhZ2VUaXRsZT17V2lkZ2V0VXRpbHMuZ2V0V2lkZ2V0RGF0YVRpdGxlKGFwcCl9XG4gICAgICAgICAgICAgICAgd2FpdEZvcklmcmFtZUxvYWQ9e2FwcC53YWl0Rm9ySWZyYW1lTG9hZH1cbiAgICAgICAgICAgICAgICBtaW5pTW9kZT17dHJ1ZX1cbiAgICAgICAgICAgICAgICBzaG93TWVudWJhcj17ZmFsc2V9XG4gICAgICAgICAgICAgICAgcG9pbnRlckV2ZW50cz17dGhpcy5wcm9wcy5wb2ludGVyRXZlbnRzfVxuICAgICAgICAgICAgICAgIG1vdmVQZXJzaXN0ZWRFbGVtZW50PXt0aGlzLnByb3BzLm1vdmVQZXJzaXN0ZWRFbGVtZW50fVxuICAgICAgICAgICAgLz47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxufVxuXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBaUJBOztBQUdBOztBQUNBOztBQUVBOztBQXZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWlCZSxNQUFNQSxhQUFOLFNBQTRCQyxjQUFBLENBQU1DLFNBQWxDLENBQW9EO0VBSy9EQyxXQUFXLENBQUNDLEtBQUQsRUFBZ0JDLE9BQWhCLEVBQWtFO0lBQ3pFLE1BQU1ELEtBQU4sRUFBYUMsT0FBYjtJQUR5RTtJQUFBO0lBRXpFLEtBQUtDLElBQUwsR0FBWUQsT0FBTyxDQUFDRSxPQUFSLENBQWdCLEtBQUtILEtBQUwsQ0FBV0ksZ0JBQTNCLENBQVo7RUFDSDs7RUFFYyxJQUFIQyxHQUFHLEdBQWdCO0lBQzNCO0lBQ0EsTUFBTUMsUUFBUSxHQUFHQyxvQkFBQSxDQUFZQyxjQUFaLENBQTJCLEtBQUtOLElBQWhDLEVBQXNDTyxJQUF0QyxDQUEyQ0MsRUFBRSxJQUMxREEsRUFBRSxDQUFDQyxXQUFILE9BQXFCLEtBQUtYLEtBQUwsQ0FBV1ksa0JBRG5CLENBQWpCOztJQUlBLElBQUlOLFFBQUosRUFBYztNQUNWLE9BQU9DLG9CQUFBLENBQVlNLGFBQVosQ0FDSFAsUUFBUSxDQUFDSyxXQUFULEVBREcsRUFDcUJMLFFBQVEsQ0FBQ1EsVUFBVCxFQURyQixFQUM0Q1IsUUFBUSxDQUFDUyxTQUFULEVBRDVDLEVBRUgsS0FBS2IsSUFBTCxDQUFVYyxNQUZQLEVBRWVWLFFBQVEsQ0FBQ1csS0FBVCxFQUZmLENBQVA7SUFJSCxDQUxELE1BS087TUFDSCxPQUFPLElBQVA7SUFDSDtFQUNKOztFQUVNQyxNQUFNLEdBQWdCO0lBQ3pCLE1BQU1iLEdBQUcsR0FBRyxLQUFLQSxHQUFqQjs7SUFDQSxJQUFJQSxHQUFKLEVBQVM7TUFDTCxvQkFBTyw2QkFBQyxnQkFBRDtRQUNILEdBQUcsRUFBRUEsR0FBRyxDQUFDYyxFQUROO1FBRUgsR0FBRyxFQUFFZCxHQUZGO1FBR0gsU0FBUyxFQUFFLElBSFI7UUFJSCxJQUFJLEVBQUUsS0FBS0gsSUFKUjtRQUtILE1BQU0sRUFBRSxLQUFLRCxPQUFMLENBQWFtQixXQUFiLENBQXlCQyxNQUw5QjtRQU1ILGFBQWEsRUFBRWhCLEdBQUcsQ0FBQ2lCLGFBTmhCO1FBT0gsZUFBZSxFQUFFZixvQkFBQSxDQUFZZ0Isa0JBQVosQ0FBK0JsQixHQUEvQixDQVBkO1FBUUgsaUJBQWlCLEVBQUVBLEdBQUcsQ0FBQ21CLGlCQVJwQjtRQVNILFFBQVEsRUFBRSxJQVRQO1FBVUgsV0FBVyxFQUFFLEtBVlY7UUFXSCxhQUFhLEVBQUUsS0FBS3hCLEtBQUwsQ0FBV3lCLGFBWHZCO1FBWUgsb0JBQW9CLEVBQUUsS0FBS3pCLEtBQUwsQ0FBVzBCO01BWjlCLEVBQVA7SUFjSDs7SUFDRCxPQUFPLElBQVA7RUFDSDs7QUE3QzhEOzs7OEJBQTlDOUIsYSxpQkFDVytCLDRCIn0=