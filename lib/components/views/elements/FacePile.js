"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _MemberAvatar = _interopRequireDefault(require("../avatars/MemberAvatar"));

var _TooltipTarget = _interopRequireDefault(require("./TooltipTarget"));

var _TextWithTooltip = _interopRequireDefault(require("./TextWithTooltip"));

const _excluded = ["members", "faceSize", "overflow", "tooltip", "children"];

const FacePile = _ref => {
  let {
    members,
    faceSize,
    overflow,
    tooltip,
    children
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const faces = members.map(tooltip ? m => /*#__PURE__*/_react.default.createElement(_MemberAvatar.default, {
    key: m.userId,
    member: m,
    width: faceSize,
    height: faceSize,
    hideTitle: true
  }) : m => /*#__PURE__*/_react.default.createElement(_TooltipTarget.default, {
    key: m.userId,
    label: m.name
  }, /*#__PURE__*/_react.default.createElement(_MemberAvatar.default, {
    member: m,
    width: faceSize,
    height: faceSize,
    viewUserOnClick: !props.onClick,
    hideTitle: true
  })));

  const pileContents = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, overflow ? /*#__PURE__*/_react.default.createElement("span", {
    className: "mx_FacePile_more"
  }) : null, faces);

  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, props, {
    className: "mx_FacePile"
  }), tooltip ? /*#__PURE__*/_react.default.createElement(_TextWithTooltip.default, {
    class: "mx_FacePile_faces",
    tooltip: tooltip
  }, pileContents) : /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_FacePile_faces"
  }, pileContents), children);
};

var _default = FacePile;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGYWNlUGlsZSIsIm1lbWJlcnMiLCJmYWNlU2l6ZSIsIm92ZXJmbG93IiwidG9vbHRpcCIsImNoaWxkcmVuIiwicHJvcHMiLCJmYWNlcyIsIm1hcCIsIm0iLCJ1c2VySWQiLCJuYW1lIiwib25DbGljayIsInBpbGVDb250ZW50cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL0ZhY2VQaWxlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMjEgVGhlIE1hdHJpeC5vcmcgRm91bmRhdGlvbiBDLkkuQy5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QsIHsgRkMsIEhUTUxBdHRyaWJ1dGVzLCBSZWFjdE5vZGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJvb21NZW1iZXIgfSBmcm9tIFwibWF0cml4LWpzLXNkay9zcmMvbW9kZWxzL3Jvb20tbWVtYmVyXCI7XG5cbmltcG9ydCBNZW1iZXJBdmF0YXIgZnJvbSBcIi4uL2F2YXRhcnMvTWVtYmVyQXZhdGFyXCI7XG5pbXBvcnQgVG9vbHRpcFRhcmdldCBmcm9tIFwiLi9Ub29sdGlwVGFyZ2V0XCI7XG5pbXBvcnQgVGV4dFdpdGhUb29sdGlwIGZyb20gXCIuL1RleHRXaXRoVG9vbHRpcFwiO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgSFRNTEF0dHJpYnV0ZXM8SFRNTFNwYW5FbGVtZW50PiB7XG4gICAgbWVtYmVyczogUm9vbU1lbWJlcltdO1xuICAgIGZhY2VTaXplOiBudW1iZXI7XG4gICAgb3ZlcmZsb3c6IGJvb2xlYW47XG4gICAgdG9vbHRpcD86IFJlYWN0Tm9kZTtcbiAgICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbn1cblxuY29uc3QgRmFjZVBpbGU6IEZDPElQcm9wcz4gPSAoeyBtZW1iZXJzLCBmYWNlU2l6ZSwgb3ZlcmZsb3csIHRvb2x0aXAsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PiB7XG4gICAgY29uc3QgZmFjZXMgPSBtZW1iZXJzLm1hcChcbiAgICAgICAgdG9vbHRpcFxuICAgICAgICAgICAgPyBtID0+IDxNZW1iZXJBdmF0YXIga2V5PXttLnVzZXJJZH0gbWVtYmVyPXttfSB3aWR0aD17ZmFjZVNpemV9IGhlaWdodD17ZmFjZVNpemV9IGhpZGVUaXRsZSAvPlxuICAgICAgICAgICAgOiBtID0+IDxUb29sdGlwVGFyZ2V0IGtleT17bS51c2VySWR9IGxhYmVsPXttLm5hbWV9PlxuICAgICAgICAgICAgICAgIDxNZW1iZXJBdmF0YXJcbiAgICAgICAgICAgICAgICAgICAgbWVtYmVyPXttfVxuICAgICAgICAgICAgICAgICAgICB3aWR0aD17ZmFjZVNpemV9XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodD17ZmFjZVNpemV9XG4gICAgICAgICAgICAgICAgICAgIHZpZXdVc2VyT25DbGljaz17IXByb3BzLm9uQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgIGhpZGVUaXRsZVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L1Rvb2x0aXBUYXJnZXQ+LFxuICAgICk7XG5cbiAgICBjb25zdCBwaWxlQ29udGVudHMgPSA8PlxuICAgICAgICB7IG92ZXJmbG93ID8gPHNwYW4gY2xhc3NOYW1lPVwibXhfRmFjZVBpbGVfbW9yZVwiIC8+IDogbnVsbCB9XG4gICAgICAgIHsgZmFjZXMgfVxuICAgIDwvPjtcblxuICAgIHJldHVybiA8ZGl2IHsuLi5wcm9wc30gY2xhc3NOYW1lPVwibXhfRmFjZVBpbGVcIj5cbiAgICAgICAgeyB0b29sdGlwID8gKFxuICAgICAgICAgICAgPFRleHRXaXRoVG9vbHRpcCBjbGFzcz1cIm14X0ZhY2VQaWxlX2ZhY2VzXCIgdG9vbHRpcD17dG9vbHRpcH0+XG4gICAgICAgICAgICAgICAgeyBwaWxlQ29udGVudHMgfVxuICAgICAgICAgICAgPC9UZXh0V2l0aFRvb2x0aXA+XG4gICAgICAgICkgOiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0ZhY2VQaWxlX2ZhY2VzXCI+XG4gICAgICAgICAgICAgICAgeyBwaWxlQ29udGVudHMgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICkgfVxuICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICA8L2Rpdj47XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGYWNlUGlsZTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQWdCQTs7QUFHQTs7QUFDQTs7QUFDQTs7OztBQVVBLE1BQU1BLFFBQW9CLEdBQUcsUUFBa0U7RUFBQSxJQUFqRTtJQUFFQyxPQUFGO0lBQVdDLFFBQVg7SUFBcUJDLFFBQXJCO0lBQStCQyxPQUEvQjtJQUF3Q0M7RUFBeEMsQ0FBaUU7RUFBQSxJQUFaQyxLQUFZO0VBQzNGLE1BQU1DLEtBQUssR0FBR04sT0FBTyxDQUFDTyxHQUFSLENBQ1ZKLE9BQU8sR0FDREssQ0FBQyxpQkFBSSw2QkFBQyxxQkFBRDtJQUFjLEdBQUcsRUFBRUEsQ0FBQyxDQUFDQyxNQUFyQjtJQUE2QixNQUFNLEVBQUVELENBQXJDO0lBQXdDLEtBQUssRUFBRVAsUUFBL0M7SUFBeUQsTUFBTSxFQUFFQSxRQUFqRTtJQUEyRSxTQUFTO0VBQXBGLEVBREosR0FFRE8sQ0FBQyxpQkFBSSw2QkFBQyxzQkFBRDtJQUFlLEdBQUcsRUFBRUEsQ0FBQyxDQUFDQyxNQUF0QjtJQUE4QixLQUFLLEVBQUVELENBQUMsQ0FBQ0U7RUFBdkMsZ0JBQ0gsNkJBQUMscUJBQUQ7SUFDSSxNQUFNLEVBQUVGLENBRFo7SUFFSSxLQUFLLEVBQUVQLFFBRlg7SUFHSSxNQUFNLEVBQUVBLFFBSFo7SUFJSSxlQUFlLEVBQUUsQ0FBQ0ksS0FBSyxDQUFDTSxPQUo1QjtJQUtJLFNBQVM7RUFMYixFQURHLENBSEQsQ0FBZDs7RUFjQSxNQUFNQyxZQUFZLGdCQUFHLDREQUNmVixRQUFRLGdCQUFHO0lBQU0sU0FBUyxFQUFDO0VBQWhCLEVBQUgsR0FBMkMsSUFEcEMsRUFFZkksS0FGZSxDQUFyQjs7RUFLQSxvQkFBTywrREFBU0QsS0FBVDtJQUFnQixTQUFTLEVBQUM7RUFBMUIsSUFDREYsT0FBTyxnQkFDTCw2QkFBQyx3QkFBRDtJQUFpQixLQUFLLEVBQUMsbUJBQXZCO0lBQTJDLE9BQU8sRUFBRUE7RUFBcEQsR0FDTVMsWUFETixDQURLLGdCQUtMO0lBQUssU0FBUyxFQUFDO0VBQWYsR0FDTUEsWUFETixDQU5ELEVBVURSLFFBVkMsQ0FBUDtBQVlILENBaENEOztlQWtDZUwsUSJ9