"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilterDropdown = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _checkmark = require("../../../../res/img/element-icons/roomlist/checkmark.svg");

var _Dropdown = _interopRequireDefault(require("./Dropdown"));

const _excluded = ["value", "options", "selectedLabel", "className"];

const getSelectedFilterOptionComponent = (options, selectedLabel) => filterKey => {
  const option = options.find(_ref => {
    let {
      id
    } = _ref;
    return id === filterKey;
  });

  if (!option) {
    return null;
  }

  if (selectedLabel) {
    return `${selectedLabel}: ${option.label}`;
  }

  return option.label;
};
/**
 * Dropdown styled for list filtering
 */


const FilterDropdown = _ref2 => {
  let {
    value,
    options,
    selectedLabel,
    className
  } = _ref2,
      restProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded);
  return /*#__PURE__*/_react.default.createElement(_Dropdown.default, (0, _extends2.default)({}, restProps, {
    value: value,
    className: (0, _classnames.default)('mx_FilterDropdown', className),
    getShortOption: getSelectedFilterOptionComponent(options, selectedLabel)
  }), options.map(_ref3 => {
    let {
      id,
      label,
      description
    } = _ref3;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_FilterDropdown_option",
      "data-testid": `filter-option-${id}`,
      key: id
    }, id === value && /*#__PURE__*/_react.default.createElement(_checkmark.Icon, {
      className: "mx_FilterDropdown_optionSelectedIcon"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_FilterDropdown_optionLabel"
    }, label), !!description && /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_FilterDropdown_optionDescription"
    }, description));
  }));
};

exports.FilterDropdown = FilterDropdown;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXRTZWxlY3RlZEZpbHRlck9wdGlvbkNvbXBvbmVudCIsIm9wdGlvbnMiLCJzZWxlY3RlZExhYmVsIiwiZmlsdGVyS2V5Iiwib3B0aW9uIiwiZmluZCIsImlkIiwibGFiZWwiLCJGaWx0ZXJEcm9wZG93biIsInZhbHVlIiwiY2xhc3NOYW1lIiwicmVzdFByb3BzIiwiY2xhc3NOYW1lcyIsIm1hcCIsImRlc2NyaXB0aW9uIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3MvZWxlbWVudHMvRmlsdGVyRHJvcGRvd24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMiBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcblxuaW1wb3J0IHsgSWNvbiBhcyBDaGVja21hcmtJY29uIH0gZnJvbSAnLi4vLi4vLi4vLi4vcmVzL2ltZy9lbGVtZW50LWljb25zL3Jvb21saXN0L2NoZWNrbWFyay5zdmcnO1xuaW1wb3J0IERyb3Bkb3duLCB7IERyb3Bkb3duUHJvcHMgfSBmcm9tICcuL0Ryb3Bkb3duJztcblxuZXhwb3J0IHR5cGUgRmlsdGVyRHJvcGRvd25PcHRpb248RmlsdGVyS2V5c1R5cGUgZXh0ZW5kcyBzdHJpbmc+ID0ge1xuICAgIGlkOiBGaWx0ZXJLZXlzVHlwZTtcbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xufTtcbnR5cGUgRmlsdGVyRHJvcGRvd25Qcm9wczxGaWx0ZXJLZXlzVHlwZSBleHRlbmRzIHN0cmluZz4gPSBPbWl0PERyb3Bkb3duUHJvcHMsICdjaGlsZHJlbic+ICYge1xuICAgIHZhbHVlOiBGaWx0ZXJLZXlzVHlwZTtcbiAgICBvcHRpb25zOiBGaWx0ZXJEcm9wZG93bk9wdGlvbjxGaWx0ZXJLZXlzVHlwZT5bXTtcbiAgICAvLyBBIGxhYmVsIGRpc3BsYXllZCBiZWZvcmUgdGhlIHNlbGVjdGVkIHZhbHVlXG4gICAgLy8gaW4gdGhlIGRyb3Bkb3duIGlucHV0XG4gICAgc2VsZWN0ZWRMYWJlbD86IHN0cmluZztcbn07XG5cbmNvbnN0IGdldFNlbGVjdGVkRmlsdGVyT3B0aW9uQ29tcG9uZW50ID0gPEZpbHRlcktleXNUeXBlIGV4dGVuZHMgc3RyaW5nPihcbiAgICBvcHRpb25zOiBGaWx0ZXJEcm9wZG93bk9wdGlvbjxGaWx0ZXJLZXlzVHlwZT5bXSwgc2VsZWN0ZWRMYWJlbD86IHN0cmluZyxcbikgPT4gKGZpbHRlcktleTogRmlsdGVyS2V5c1R5cGUpID0+IHtcbiAgICAgICAgY29uc3Qgb3B0aW9uID0gb3B0aW9ucy5maW5kKCh7IGlkIH0pID0+IGlkID09PSBmaWx0ZXJLZXkpO1xuICAgICAgICBpZiAoIW9wdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGVjdGVkTGFiZWwpIHtcbiAgICAgICAgICAgIHJldHVybiBgJHtzZWxlY3RlZExhYmVsfTogJHtvcHRpb24ubGFiZWx9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gb3B0aW9uLmxhYmVsO1xuICAgIH07XG5cbi8qKlxuICogRHJvcGRvd24gc3R5bGVkIGZvciBsaXN0IGZpbHRlcmluZ1xuICovXG5leHBvcnQgY29uc3QgRmlsdGVyRHJvcGRvd24gPSA8RmlsdGVyS2V5c1R5cGUgZXh0ZW5kcyBzdHJpbmcgPSBzdHJpbmc+KFxuICAgIHtcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIG9wdGlvbnMsXG4gICAgICAgIHNlbGVjdGVkTGFiZWwsXG4gICAgICAgIGNsYXNzTmFtZSxcbiAgICAgICAgLi4ucmVzdFByb3BzXG4gICAgfTogRmlsdGVyRHJvcGRvd25Qcm9wczxGaWx0ZXJLZXlzVHlwZT4sXG4pOiBSZWFjdC5SZWFjdEVsZW1lbnQ8RmlsdGVyRHJvcGRvd25Qcm9wczxGaWx0ZXJLZXlzVHlwZT4+ID0+IHtcbiAgICByZXR1cm4gPERyb3Bkb3duXG4gICAgICAgIHsuLi5yZXN0UHJvcHN9XG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdteF9GaWx0ZXJEcm9wZG93bicsIGNsYXNzTmFtZSl9XG4gICAgICAgIGdldFNob3J0T3B0aW9uPXtnZXRTZWxlY3RlZEZpbHRlck9wdGlvbkNvbXBvbmVudDxGaWx0ZXJLZXlzVHlwZT4ob3B0aW9ucywgc2VsZWN0ZWRMYWJlbCl9XG4gICAgPlxuICAgICAgICB7IG9wdGlvbnMubWFwKCh7IGlkLCBsYWJlbCwgZGVzY3JpcHRpb24gfSkgPT5cbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9J214X0ZpbHRlckRyb3Bkb3duX29wdGlvbidcbiAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD17YGZpbHRlci1vcHRpb24tJHtpZH1gfVxuICAgICAgICAgICAgICAgIGtleT17aWR9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyBpZCA9PT0gdmFsdWUgJiYgPENoZWNrbWFya0ljb24gY2xhc3NOYW1lPSdteF9GaWx0ZXJEcm9wZG93bl9vcHRpb25TZWxlY3RlZEljb24nIC8+IH1cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J214X0ZpbHRlckRyb3Bkb3duX29wdGlvbkxhYmVsJz5cbiAgICAgICAgICAgICAgICAgICAgeyBsYWJlbCB9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgISFkZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgICAgICAmJiA8c3BhblxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdteF9GaWx0ZXJEcm9wZG93bl9vcHRpb25EZXNjcmlwdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPnsgZGVzY3JpcHRpb24gfTwvc3Bhbj5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2Rpdj4sXG4gICAgICAgICkgfVxuICAgIDwvRHJvcGRvd24+O1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFFQTs7QUFDQTs7OztBQWVBLE1BQU1BLGdDQUFnQyxHQUFHLENBQ3JDQyxPQURxQyxFQUNZQyxhQURaLEtBRW5DQyxTQUFELElBQStCO0VBQzVCLE1BQU1DLE1BQU0sR0FBR0gsT0FBTyxDQUFDSSxJQUFSLENBQWE7SUFBQSxJQUFDO01BQUVDO0lBQUYsQ0FBRDtJQUFBLE9BQVlBLEVBQUUsS0FBS0gsU0FBbkI7RUFBQSxDQUFiLENBQWY7O0VBQ0EsSUFBSSxDQUFDQyxNQUFMLEVBQWE7SUFDVCxPQUFPLElBQVA7RUFDSDs7RUFDRCxJQUFJRixhQUFKLEVBQW1CO0lBQ2YsT0FBUSxHQUFFQSxhQUFjLEtBQUlFLE1BQU0sQ0FBQ0csS0FBTSxFQUF6QztFQUNIOztFQUNELE9BQU9ILE1BQU0sQ0FBQ0csS0FBZDtBQUNILENBWEw7QUFhQTtBQUNBO0FBQ0E7OztBQUNPLE1BQU1DLGNBQWMsR0FBRyxTQVFnQztFQUFBLElBUDFEO0lBQ0lDLEtBREo7SUFFSVIsT0FGSjtJQUdJQyxhQUhKO0lBSUlRO0VBSkosQ0FPMEQ7RUFBQSxJQUZuREMsU0FFbUQ7RUFDMUQsb0JBQU8sNkJBQUMsaUJBQUQsNkJBQ0NBLFNBREQ7SUFFSCxLQUFLLEVBQUVGLEtBRko7SUFHSCxTQUFTLEVBQUUsSUFBQUcsbUJBQUEsRUFBVyxtQkFBWCxFQUFnQ0YsU0FBaEMsQ0FIUjtJQUlILGNBQWMsRUFBRVYsZ0NBQWdDLENBQWlCQyxPQUFqQixFQUEwQkMsYUFBMUI7RUFKN0MsSUFNREQsT0FBTyxDQUFDWSxHQUFSLENBQVk7SUFBQSxJQUFDO01BQUVQLEVBQUY7TUFBTUMsS0FBTjtNQUFhTztJQUFiLENBQUQ7SUFBQSxvQkFDVjtNQUNJLFNBQVMsRUFBQywwQkFEZDtNQUVJLGVBQWMsaUJBQWdCUixFQUFHLEVBRnJDO01BR0ksR0FBRyxFQUFFQTtJQUhULEdBS01BLEVBQUUsS0FBS0csS0FBUCxpQkFBZ0IsNkJBQUMsZUFBRDtNQUFlLFNBQVMsRUFBQztJQUF6QixFQUx0QixlQU1JO01BQU0sU0FBUyxFQUFDO0lBQWhCLEdBQ01GLEtBRE4sQ0FOSixFQVVRLENBQUMsQ0FBQ08sV0FBRixpQkFDRztNQUNDLFNBQVMsRUFBQztJQURYLEdBRUFBLFdBRkEsQ0FYWCxDQURVO0VBQUEsQ0FBWixDQU5DLENBQVA7QUF5QkgsQ0FsQ00ifQ==