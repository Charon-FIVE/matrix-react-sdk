"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _AccessibleButton = _interopRequireDefault(require("./AccessibleButton"));

var _languageHandler = require("../../../languageHandler");

var _TextWithTooltip = _interopRequireDefault(require("./TextWithTooltip"));

var _SdkConfig = _interopRequireDefault(require("../../../SdkConfig"));

var _Modal = _interopRequireDefault(require("../../../Modal"));

var _ServerPickerDialog = _interopRequireDefault(require("../dialogs/ServerPickerDialog"));

var _InfoDialog = _interopRequireDefault(require("../dialogs/InfoDialog"));

/*
Copyright 2020-2021 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const showPickerDialog = (title, serverConfig, onFinished) => {
  _Modal.default.createDialog(_ServerPickerDialog.default, {
    title,
    serverConfig,
    onFinished
  });
};

const onHelpClick = () => {
  const brand = _SdkConfig.default.get().brand;

  _Modal.default.createDialog(_InfoDialog.default, {
    title: (0, _languageHandler._t)("Server Options"),
    description: (0, _languageHandler._t)("You can use the custom server options to sign into other Matrix servers by specifying " + "a different homeserver URL. This allows you to use %(brand)s with an existing Matrix account on " + "a different homeserver.", {
      brand
    }),
    button: (0, _languageHandler._t)("Dismiss"),
    hasCloseButton: false,
    fixedWidth: false
  }, "mx_ServerPicker_helpDialog");
};

const ServerPicker = _ref => {
  let {
    title,
    dialogTitle,
    serverConfig,
    onServerConfigChange
  } = _ref;

  const disableCustomUrls = _SdkConfig.default.get("disable_custom_urls");

  let editBtn;

  if (!disableCustomUrls && onServerConfigChange) {
    const onClick = () => {
      showPickerDialog(dialogTitle, serverConfig, config => {
        if (config) {
          onServerConfigChange(config);
        }
      });
    };

    editBtn = /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
      className: "mx_ServerPicker_change",
      kind: "link",
      onClick: onClick
    }, (0, _languageHandler._t)("Edit"));
  }

  let serverName = serverConfig.isNameResolvable ? serverConfig.hsName : serverConfig.hsUrl;

  if (serverConfig.hsNameIsDifferent) {
    serverName = /*#__PURE__*/_react.default.createElement(_TextWithTooltip.default, {
      class: "mx_Login_underlinedServerName",
      tooltip: serverConfig.hsUrl
    }, serverConfig.hsName);
  }

  let desc;

  if (serverConfig.hsName === "matrix.org") {
    desc = /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_ServerPicker_desc"
    }, (0, _languageHandler._t)("Join millions for free on the largest public server"));
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_ServerPicker"
  }, /*#__PURE__*/_react.default.createElement("h2", null, title || (0, _languageHandler._t)("Homeserver")), !disableCustomUrls ? /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
    className: "mx_ServerPicker_help",
    onClick: onHelpClick,
    "aria-label": (0, _languageHandler._t)("Help")
  }) : null, /*#__PURE__*/_react.default.createElement("span", {
    className: "mx_ServerPicker_server",
    title: typeof serverName === "string" ? serverName : undefined
  }, serverName), editBtn, desc);
};

var _default = ServerPicker;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,