"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _PlayPauseButton = _interopRequireDefault(require("./PlayPauseButton"));

var _FormattingUtils = require("../../../utils/FormattingUtils");

var _DurationClock = _interopRequireDefault(require("./DurationClock"));

var _languageHandler = require("../../../languageHandler");

var _SeekBar = _interopRequireDefault(require("./SeekBar"));

var _PlaybackClock = _interopRequireDefault(require("./PlaybackClock"));

var _AudioPlayerBase = _interopRequireDefault(require("./AudioPlayerBase"));

/*
Copyright 2021 - 2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class AudioPlayer extends _AudioPlayerBase.default {
  renderFileSize() {
    const bytes = this.props.playback.sizeBytes;
    if (!bytes) return null; // Not translated here - we're just presenting the data which should already
    // be translated if needed.

    return `(${(0, _FormattingUtils.formatBytes)(bytes)})`;
  }

  renderComponent() {
    // tabIndex=0 to ensure that the whole component becomes a tab stop, where we handle keyboard
    // events for accessibility
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MediaBody mx_AudioPlayer_container",
      tabIndex: 0,
      onKeyDown: this.onKeyDown
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_AudioPlayer_primaryContainer"
    }, /*#__PURE__*/_react.default.createElement(_PlayPauseButton.default, {
      playback: this.props.playback,
      playbackPhase: this.state.playbackPhase,
      tabIndex: -1 // prevent tabbing into the button
      ,
      ref: this.playPauseRef
    }), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_AudioPlayer_mediaInfo"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_AudioPlayer_mediaName"
    }, this.props.mediaName || (0, _languageHandler._t)("Unnamed audio")), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_AudioPlayer_byline"
    }, /*#__PURE__*/_react.default.createElement(_DurationClock.default, {
      playback: this.props.playback
    }), "\xA0 ", this.renderFileSize()))), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_AudioPlayer_seek"
    }, /*#__PURE__*/_react.default.createElement(_SeekBar.default, {
      playback: this.props.playback,
      tabIndex: -1 // prevent tabbing into the bar
      ,
      playbackPhase: this.state.playbackPhase,
      ref: this.seekRef
    }), /*#__PURE__*/_react.default.createElement(_PlaybackClock.default, {
      playback: this.props.playback,
      defaultDisplaySeconds: 0
    })));
  }

}

exports.default = AudioPlayer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBdWRpb1BsYXllciIsIkF1ZGlvUGxheWVyQmFzZSIsInJlbmRlckZpbGVTaXplIiwiYnl0ZXMiLCJwcm9wcyIsInBsYXliYWNrIiwic2l6ZUJ5dGVzIiwiZm9ybWF0Qnl0ZXMiLCJyZW5kZXJDb21wb25lbnQiLCJvbktleURvd24iLCJzdGF0ZSIsInBsYXliYWNrUGhhc2UiLCJwbGF5UGF1c2VSZWYiLCJtZWRpYU5hbWUiLCJfdCIsInNlZWtSZWYiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy92aWV3cy9hdWRpb19tZXNzYWdlcy9BdWRpb1BsYXllci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIxIC0gMjAyMiBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCwgeyBSZWFjdE5vZGUgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFBsYXlQYXVzZUJ1dHRvbiBmcm9tIFwiLi9QbGF5UGF1c2VCdXR0b25cIjtcbmltcG9ydCB7IGZvcm1hdEJ5dGVzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL0Zvcm1hdHRpbmdVdGlsc1wiO1xuaW1wb3J0IER1cmF0aW9uQ2xvY2sgZnJvbSBcIi4vRHVyYXRpb25DbG9ja1wiO1xuaW1wb3J0IHsgX3QgfSBmcm9tIFwiLi4vLi4vLi4vbGFuZ3VhZ2VIYW5kbGVyXCI7XG5pbXBvcnQgU2Vla0JhciBmcm9tIFwiLi9TZWVrQmFyXCI7XG5pbXBvcnQgUGxheWJhY2tDbG9jayBmcm9tIFwiLi9QbGF5YmFja0Nsb2NrXCI7XG5pbXBvcnQgQXVkaW9QbGF5ZXJCYXNlIGZyb20gXCIuL0F1ZGlvUGxheWVyQmFzZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdWRpb1BsYXllciBleHRlbmRzIEF1ZGlvUGxheWVyQmFzZSB7XG4gICAgcHJvdGVjdGVkIHJlbmRlckZpbGVTaXplKCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gdGhpcy5wcm9wcy5wbGF5YmFjay5zaXplQnl0ZXM7XG4gICAgICAgIGlmICghYnl0ZXMpIHJldHVybiBudWxsO1xuXG4gICAgICAgIC8vIE5vdCB0cmFuc2xhdGVkIGhlcmUgLSB3ZSdyZSBqdXN0IHByZXNlbnRpbmcgdGhlIGRhdGEgd2hpY2ggc2hvdWxkIGFscmVhZHlcbiAgICAgICAgLy8gYmUgdHJhbnNsYXRlZCBpZiBuZWVkZWQuXG4gICAgICAgIHJldHVybiBgKCR7Zm9ybWF0Qnl0ZXMoYnl0ZXMpfSlgO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCByZW5kZXJDb21wb25lbnQoKTogUmVhY3ROb2RlIHtcbiAgICAgICAgLy8gdGFiSW5kZXg9MCB0byBlbnN1cmUgdGhhdCB0aGUgd2hvbGUgY29tcG9uZW50IGJlY29tZXMgYSB0YWIgc3RvcCwgd2hlcmUgd2UgaGFuZGxlIGtleWJvYXJkXG4gICAgICAgIC8vIGV2ZW50cyBmb3IgYWNjZXNzaWJpbGl0eVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J214X01lZGlhQm9keSBteF9BdWRpb1BsYXllcl9jb250YWluZXInIHRhYkluZGV4PXswfSBvbktleURvd249e3RoaXMub25LZXlEb3dufT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXhfQXVkaW9QbGF5ZXJfcHJpbWFyeUNvbnRhaW5lcic+XG4gICAgICAgICAgICAgICAgICAgIDxQbGF5UGF1c2VCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXliYWNrPXt0aGlzLnByb3BzLnBsYXliYWNrfVxuICAgICAgICAgICAgICAgICAgICAgICAgcGxheWJhY2tQaGFzZT17dGhpcy5zdGF0ZS5wbGF5YmFja1BoYXNlfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGFiSW5kZXg9ey0xfSAvLyBwcmV2ZW50IHRhYmJpbmcgaW50byB0aGUgYnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY9e3RoaXMucGxheVBhdXNlUmVmfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXhfQXVkaW9QbGF5ZXJfbWVkaWFJbmZvJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0nbXhfQXVkaW9QbGF5ZXJfbWVkaWFOYW1lJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMubWVkaWFOYW1lIHx8IF90KFwiVW5uYW1lZCBhdWRpb1wiKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbXhfQXVkaW9QbGF5ZXJfYnlsaW5lJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RHVyYXRpb25DbG9jayBwbGF5YmFjaz17dGhpcy5wcm9wcy5wbGF5YmFja30gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsgeyAvKiBlYXNpZXN0IHdheSB0byBpbnRyb2R1Y2UgYSBnYXAgYmV0d2VlbiB0aGUgY29tcG9uZW50cyAqLyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnJlbmRlckZpbGVTaXplKCkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdteF9BdWRpb1BsYXllcl9zZWVrJz5cbiAgICAgICAgICAgICAgICAgICAgPFNlZWtCYXJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsYXliYWNrPXt0aGlzLnByb3BzLnBsYXliYWNrfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGFiSW5kZXg9ey0xfSAvLyBwcmV2ZW50IHRhYmJpbmcgaW50byB0aGUgYmFyXG4gICAgICAgICAgICAgICAgICAgICAgICBwbGF5YmFja1BoYXNlPXt0aGlzLnN0YXRlLnBsYXliYWNrUGhhc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICByZWY9e3RoaXMuc2Vla1JlZn1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPFBsYXliYWNrQ2xvY2sgcGxheWJhY2s9e3RoaXMucHJvcHMucGxheWJhY2t9IGRlZmF1bHREaXNwbGF5U2Vjb25kcz17MH0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBZ0JBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQXhCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFZZSxNQUFNQSxXQUFOLFNBQTBCQyx3QkFBMUIsQ0FBMEM7RUFDM0NDLGNBQWMsR0FBVztJQUMvQixNQUFNQyxLQUFLLEdBQUcsS0FBS0MsS0FBTCxDQUFXQyxRQUFYLENBQW9CQyxTQUFsQztJQUNBLElBQUksQ0FBQ0gsS0FBTCxFQUFZLE9BQU8sSUFBUCxDQUZtQixDQUkvQjtJQUNBOztJQUNBLE9BQVEsSUFBRyxJQUFBSSw0QkFBQSxFQUFZSixLQUFaLENBQW1CLEdBQTlCO0VBQ0g7O0VBRVNLLGVBQWUsR0FBYztJQUNuQztJQUNBO0lBQ0Esb0JBQ0k7TUFBSyxTQUFTLEVBQUMsdUNBQWY7TUFBdUQsUUFBUSxFQUFFLENBQWpFO01BQW9FLFNBQVMsRUFBRSxLQUFLQztJQUFwRixnQkFDSTtNQUFLLFNBQVMsRUFBQztJQUFmLGdCQUNJLDZCQUFDLHdCQUFEO01BQ0ksUUFBUSxFQUFFLEtBQUtMLEtBQUwsQ0FBV0MsUUFEekI7TUFFSSxhQUFhLEVBQUUsS0FBS0ssS0FBTCxDQUFXQyxhQUY5QjtNQUdJLFFBQVEsRUFBRSxDQUFDLENBSGYsQ0FHa0I7TUFIbEI7TUFJSSxHQUFHLEVBQUUsS0FBS0M7SUFKZCxFQURKLGVBT0k7TUFBSyxTQUFTLEVBQUM7SUFBZixnQkFDSTtNQUFNLFNBQVMsRUFBQztJQUFoQixHQUNNLEtBQUtSLEtBQUwsQ0FBV1MsU0FBWCxJQUF3QixJQUFBQyxtQkFBQSxFQUFHLGVBQUgsQ0FEOUIsQ0FESixlQUlJO01BQUssU0FBUyxFQUFDO0lBQWYsZ0JBQ0ksNkJBQUMsc0JBQUQ7TUFBZSxRQUFRLEVBQUUsS0FBS1YsS0FBTCxDQUFXQztJQUFwQyxFQURKLFdBR00sS0FBS0gsY0FBTCxFQUhOLENBSkosQ0FQSixDQURKLGVBbUJJO01BQUssU0FBUyxFQUFDO0lBQWYsZ0JBQ0ksNkJBQUMsZ0JBQUQ7TUFDSSxRQUFRLEVBQUUsS0FBS0UsS0FBTCxDQUFXQyxRQUR6QjtNQUVJLFFBQVEsRUFBRSxDQUFDLENBRmYsQ0FFa0I7TUFGbEI7TUFHSSxhQUFhLEVBQUUsS0FBS0ssS0FBTCxDQUFXQyxhQUg5QjtNQUlJLEdBQUcsRUFBRSxLQUFLSTtJQUpkLEVBREosZUFPSSw2QkFBQyxzQkFBRDtNQUFlLFFBQVEsRUFBRSxLQUFLWCxLQUFMLENBQVdDLFFBQXBDO01BQThDLHFCQUFxQixFQUFFO0lBQXJFLEVBUEosQ0FuQkosQ0FESjtFQStCSDs7QUE1Q29EIn0=