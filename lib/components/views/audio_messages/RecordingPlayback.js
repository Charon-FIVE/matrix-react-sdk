"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PlaybackLayout = void 0;

var _react = _interopRequireDefault(require("react"));

var _PlayPauseButton = _interopRequireDefault(require("./PlayPauseButton"));

var _PlaybackClock = _interopRequireDefault(require("./PlaybackClock"));

var _AudioPlayerBase = _interopRequireDefault(require("./AudioPlayerBase"));

var _SeekBar = _interopRequireDefault(require("./SeekBar"));

var _PlaybackWaveform = _interopRequireDefault(require("./PlaybackWaveform"));

/*
Copyright 2021 - 2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
let PlaybackLayout;
exports.PlaybackLayout = PlaybackLayout;

(function (PlaybackLayout) {
  PlaybackLayout[PlaybackLayout["Composer"] = 0] = "Composer";
  PlaybackLayout[PlaybackLayout["Timeline"] = 1] = "Timeline";
})(PlaybackLayout || (exports.PlaybackLayout = PlaybackLayout = {}));

class RecordingPlayback extends _AudioPlayerBase.default {
  // This component is rendered in two ways: the composer and timeline. They have different
  // rendering properties (specifically the difference of a waveform or not).
  renderComposerLook() {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_PlaybackClock.default, {
      playback: this.props.playback
    }), /*#__PURE__*/_react.default.createElement(_PlaybackWaveform.default, {
      playback: this.props.playback
    }));
  }

  renderTimelineLook() {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_RecordingPlayback_timelineLayoutMiddle"
    }, /*#__PURE__*/_react.default.createElement(_PlaybackWaveform.default, {
      playback: this.props.playback
    }), /*#__PURE__*/_react.default.createElement(_SeekBar.default, {
      playback: this.props.playback,
      tabIndex: 0 // allow keyboard users to fall into the seek bar
      ,
      playbackPhase: this.state.playbackPhase,
      ref: this.seekRef
    })), /*#__PURE__*/_react.default.createElement(_PlaybackClock.default, {
      playback: this.props.playback
    }));
  }

  renderComponent() {
    let body;

    switch (this.props.layout) {
      case PlaybackLayout.Composer:
        body = this.renderComposerLook();
        break;

      case PlaybackLayout.Timeline: // default is timeline, fall through.

      default:
        body = this.renderTimelineLook();
        break;
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MediaBody mx_VoiceMessagePrimaryContainer",
      onKeyDown: this.onKeyDown
    }, /*#__PURE__*/_react.default.createElement(_PlayPauseButton.default, {
      playback: this.props.playback,
      playbackPhase: this.state.playbackPhase,
      ref: this.playPauseRef
    }), body);
  }

}

exports.default = RecordingPlayback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQbGF5YmFja0xheW91dCIsIlJlY29yZGluZ1BsYXliYWNrIiwiQXVkaW9QbGF5ZXJCYXNlIiwicmVuZGVyQ29tcG9zZXJMb29rIiwicHJvcHMiLCJwbGF5YmFjayIsInJlbmRlclRpbWVsaW5lTG9vayIsInN0YXRlIiwicGxheWJhY2tQaGFzZSIsInNlZWtSZWYiLCJyZW5kZXJDb21wb25lbnQiLCJib2R5IiwibGF5b3V0IiwiQ29tcG9zZXIiLCJUaW1lbGluZSIsIm9uS2V5RG93biIsInBsYXlQYXVzZVJlZiJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2F1ZGlvX21lc3NhZ2VzL1JlY29yZGluZ1BsYXliYWNrLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMjEgLSAyMDIyIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0LCB7IFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgUGxheVBhdXNlQnV0dG9uIGZyb20gXCIuL1BsYXlQYXVzZUJ1dHRvblwiO1xuaW1wb3J0IFBsYXliYWNrQ2xvY2sgZnJvbSBcIi4vUGxheWJhY2tDbG9ja1wiO1xuaW1wb3J0IEF1ZGlvUGxheWVyQmFzZSwgeyBJUHJvcHMgYXMgSUF1ZGlvUGxheWVyQmFzZVByb3BzIH0gZnJvbSBcIi4vQXVkaW9QbGF5ZXJCYXNlXCI7XG5pbXBvcnQgU2Vla0JhciBmcm9tIFwiLi9TZWVrQmFyXCI7XG5pbXBvcnQgUGxheWJhY2tXYXZlZm9ybSBmcm9tIFwiLi9QbGF5YmFja1dhdmVmb3JtXCI7XG5cbmV4cG9ydCBlbnVtIFBsYXliYWNrTGF5b3V0IHtcbiAgICAvKipcbiAgICAgKiBDbG9jayBvbiB0aGUgbGVmdCBzaWRlIG9mIGEgd2F2ZWZvcm0sIHdpdGhvdXQgc2VlayBiYXIuXG4gICAgICovXG4gICAgQ29tcG9zZXIsXG5cbiAgICAvKipcbiAgICAgKiBDbG9jayBvbiB0aGUgcmlnaHQgc2lkZSBvZiBhIHdhdmVmb3JtLCB3aXRoIGFuIGFkZGVkIHNlZWsgYmFyLlxuICAgICAqL1xuICAgIFRpbWVsaW5lLFxufVxuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgSUF1ZGlvUGxheWVyQmFzZVByb3BzIHtcbiAgICBsYXlvdXQ/OiBQbGF5YmFja0xheW91dDsgLy8gRGVmYXVsdHMgdG8gVGltZWxpbmUgbGF5b3V0XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlY29yZGluZ1BsYXliYWNrIGV4dGVuZHMgQXVkaW9QbGF5ZXJCYXNlPElQcm9wcz4ge1xuICAgIC8vIFRoaXMgY29tcG9uZW50IGlzIHJlbmRlcmVkIGluIHR3byB3YXlzOiB0aGUgY29tcG9zZXIgYW5kIHRpbWVsaW5lLiBUaGV5IGhhdmUgZGlmZmVyZW50XG4gICAgLy8gcmVuZGVyaW5nIHByb3BlcnRpZXMgKHNwZWNpZmljYWxseSB0aGUgZGlmZmVyZW5jZSBvZiBhIHdhdmVmb3JtIG9yIG5vdCkuXG5cbiAgICBwcml2YXRlIHJlbmRlckNvbXBvc2VyTG9vaygpOiBSZWFjdE5vZGUge1xuICAgICAgICByZXR1cm4gPD5cbiAgICAgICAgICAgIDxQbGF5YmFja0Nsb2NrIHBsYXliYWNrPXt0aGlzLnByb3BzLnBsYXliYWNrfSAvPlxuICAgICAgICAgICAgPFBsYXliYWNrV2F2ZWZvcm0gcGxheWJhY2s9e3RoaXMucHJvcHMucGxheWJhY2t9IC8+XG4gICAgICAgIDwvPjtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlbmRlclRpbWVsaW5lTG9vaygpOiBSZWFjdE5vZGUge1xuICAgICAgICByZXR1cm4gPD5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfUmVjb3JkaW5nUGxheWJhY2tfdGltZWxpbmVMYXlvdXRNaWRkbGVcIj5cbiAgICAgICAgICAgICAgICA8UGxheWJhY2tXYXZlZm9ybSBwbGF5YmFjaz17dGhpcy5wcm9wcy5wbGF5YmFja30gLz5cbiAgICAgICAgICAgICAgICA8U2Vla0JhclxuICAgICAgICAgICAgICAgICAgICBwbGF5YmFjaz17dGhpcy5wcm9wcy5wbGF5YmFja31cbiAgICAgICAgICAgICAgICAgICAgdGFiSW5kZXg9ezB9IC8vIGFsbG93IGtleWJvYXJkIHVzZXJzIHRvIGZhbGwgaW50byB0aGUgc2VlayBiYXJcbiAgICAgICAgICAgICAgICAgICAgcGxheWJhY2tQaGFzZT17dGhpcy5zdGF0ZS5wbGF5YmFja1BoYXNlfVxuICAgICAgICAgICAgICAgICAgICByZWY9e3RoaXMuc2Vla1JlZn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8UGxheWJhY2tDbG9jayBwbGF5YmFjaz17dGhpcy5wcm9wcy5wbGF5YmFja30gLz5cbiAgICAgICAgPC8+O1xuICAgIH1cblxuICAgIHByb3RlY3RlZCByZW5kZXJDb21wb25lbnQoKTogUmVhY3ROb2RlIHtcbiAgICAgICAgbGV0IGJvZHk6IFJlYWN0Tm9kZTtcbiAgICAgICAgc3dpdGNoICh0aGlzLnByb3BzLmxheW91dCkge1xuICAgICAgICAgICAgY2FzZSBQbGF5YmFja0xheW91dC5Db21wb3NlcjpcbiAgICAgICAgICAgICAgICBib2R5ID0gdGhpcy5yZW5kZXJDb21wb3Nlckxvb2soKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUGxheWJhY2tMYXlvdXQuVGltZWxpbmU6IC8vIGRlZmF1bHQgaXMgdGltZWxpbmUsIGZhbGwgdGhyb3VnaC5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYm9keSA9IHRoaXMucmVuZGVyVGltZWxpbmVMb29rKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9NZWRpYUJvZHkgbXhfVm9pY2VNZXNzYWdlUHJpbWFyeUNvbnRhaW5lclwiIG9uS2V5RG93bj17dGhpcy5vbktleURvd259PlxuICAgICAgICAgICAgICAgIDxQbGF5UGF1c2VCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgcGxheWJhY2s9e3RoaXMucHJvcHMucGxheWJhY2t9XG4gICAgICAgICAgICAgICAgICAgIHBsYXliYWNrUGhhc2U9e3RoaXMuc3RhdGUucGxheWJhY2tQaGFzZX1cbiAgICAgICAgICAgICAgICAgICAgcmVmPXt0aGlzLnBsYXlQYXVzZVJlZn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHsgYm9keSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQWdCQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUF0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0lBVVlBLGM7OztXQUFBQSxjO0VBQUFBLGMsQ0FBQUEsYztFQUFBQSxjLENBQUFBLGM7R0FBQUEsYyw4QkFBQUEsYzs7QUFnQkcsTUFBTUMsaUJBQU4sU0FBZ0NDLHdCQUFoQyxDQUF3RDtFQUNuRTtFQUNBO0VBRVFDLGtCQUFrQixHQUFjO0lBQ3BDLG9CQUFPLHlFQUNILDZCQUFDLHNCQUFEO01BQWUsUUFBUSxFQUFFLEtBQUtDLEtBQUwsQ0FBV0M7SUFBcEMsRUFERyxlQUVILDZCQUFDLHlCQUFEO01BQWtCLFFBQVEsRUFBRSxLQUFLRCxLQUFMLENBQVdDO0lBQXZDLEVBRkcsQ0FBUDtFQUlIOztFQUVPQyxrQkFBa0IsR0FBYztJQUNwQyxvQkFBTyx5RUFDSDtNQUFLLFNBQVMsRUFBQztJQUFmLGdCQUNJLDZCQUFDLHlCQUFEO01BQWtCLFFBQVEsRUFBRSxLQUFLRixLQUFMLENBQVdDO0lBQXZDLEVBREosZUFFSSw2QkFBQyxnQkFBRDtNQUNJLFFBQVEsRUFBRSxLQUFLRCxLQUFMLENBQVdDLFFBRHpCO01BRUksUUFBUSxFQUFFLENBRmQsQ0FFaUI7TUFGakI7TUFHSSxhQUFhLEVBQUUsS0FBS0UsS0FBTCxDQUFXQyxhQUg5QjtNQUlJLEdBQUcsRUFBRSxLQUFLQztJQUpkLEVBRkosQ0FERyxlQVVILDZCQUFDLHNCQUFEO01BQWUsUUFBUSxFQUFFLEtBQUtMLEtBQUwsQ0FBV0M7SUFBcEMsRUFWRyxDQUFQO0VBWUg7O0VBRVNLLGVBQWUsR0FBYztJQUNuQyxJQUFJQyxJQUFKOztJQUNBLFFBQVEsS0FBS1AsS0FBTCxDQUFXUSxNQUFuQjtNQUNJLEtBQUtaLGNBQWMsQ0FBQ2EsUUFBcEI7UUFDSUYsSUFBSSxHQUFHLEtBQUtSLGtCQUFMLEVBQVA7UUFDQTs7TUFDSixLQUFLSCxjQUFjLENBQUNjLFFBQXBCLENBSkosQ0FJa0M7O01BQzlCO1FBQ0lILElBQUksR0FBRyxLQUFLTCxrQkFBTCxFQUFQO1FBQ0E7SUFQUjs7SUFVQSxvQkFDSTtNQUFLLFNBQVMsRUFBQyw4Q0FBZjtNQUE4RCxTQUFTLEVBQUUsS0FBS1M7SUFBOUUsZ0JBQ0ksNkJBQUMsd0JBQUQ7TUFDSSxRQUFRLEVBQUUsS0FBS1gsS0FBTCxDQUFXQyxRQUR6QjtNQUVJLGFBQWEsRUFBRSxLQUFLRSxLQUFMLENBQVdDLGFBRjlCO01BR0ksR0FBRyxFQUFFLEtBQUtRO0lBSGQsRUFESixFQU1NTCxJQU5OLENBREo7RUFVSDs7QUFoRGtFIn0=