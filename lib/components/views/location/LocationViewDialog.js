"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _BaseDialog = _interopRequireDefault(require("../dialogs/BaseDialog"));

var _location = require("../../../utils/location");

var _Map = _interopRequireDefault(require("./Map"));

var _SmartMarker = _interopRequireDefault(require("./SmartMarker"));

var _ZoomButtons = _interopRequireDefault(require("./ZoomButtons"));

/*
Copyright 2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/**
 * Dialog to view m.location events maximised
 */
class LocationViewDialog extends _react.default.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "getBodyId", () => {
      return `mx_LocationViewDialog_${this.props.mxEvent.getId()}`;
    });
    (0, _defineProperty2.default)(this, "onError", error => {
      this.setState({
        error
      });
    });
    this.state = {
      error: undefined
    };
  }

  render() {
    const {
      mxEvent
    } = this.props; // only pass member to marker when should render avatar marker

    const markerRoomMember = (0, _location.isSelfLocation)(mxEvent.getContent()) ? mxEvent.sender : undefined;
    const geoUri = (0, _location.locationEventGeoUri)(mxEvent);
    return /*#__PURE__*/_react.default.createElement(_BaseDialog.default, {
      className: "mx_LocationViewDialog",
      onFinished: this.props.onFinished,
      fixedWidth: false
    }, /*#__PURE__*/_react.default.createElement(_Map.default, {
      id: this.getBodyId(),
      centerGeoUri: geoUri,
      onError: this.onError,
      interactive: true,
      className: "mx_LocationViewDialog_map"
    }, _ref => {
      let {
        map
      } = _ref;
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_SmartMarker.default, {
        map: map,
        id: `${this.getBodyId()}-marker`,
        geoUri: geoUri,
        roomMember: markerRoomMember
      }), /*#__PURE__*/_react.default.createElement(_ZoomButtons.default, {
        map: map
      }));
    }));
  }

}

exports.default = LocationViewDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2NhdGlvblZpZXdEaWFsb2ciLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJteEV2ZW50IiwiZ2V0SWQiLCJlcnJvciIsInNldFN0YXRlIiwic3RhdGUiLCJ1bmRlZmluZWQiLCJyZW5kZXIiLCJtYXJrZXJSb29tTWVtYmVyIiwiaXNTZWxmTG9jYXRpb24iLCJnZXRDb250ZW50Iiwic2VuZGVyIiwiZ2VvVXJpIiwibG9jYXRpb25FdmVudEdlb1VyaSIsIm9uRmluaXNoZWQiLCJnZXRCb2R5SWQiLCJvbkVycm9yIiwibWFwIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3MvbG9jYXRpb24vTG9jYXRpb25WaWV3RGlhbG9nLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMjIgVGhlIE1hdHJpeC5vcmcgRm91bmRhdGlvbiBDLkkuQy5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTWF0cml4RXZlbnQgfSBmcm9tICdtYXRyaXgtanMtc2RrL3NyYy9tb2RlbHMvZXZlbnQnO1xuaW1wb3J0IHsgTWF0cml4Q2xpZW50IH0gZnJvbSAnbWF0cml4LWpzLXNkay9zcmMvY2xpZW50JztcblxuaW1wb3J0IEJhc2VEaWFsb2cgZnJvbSBcIi4uL2RpYWxvZ3MvQmFzZURpYWxvZ1wiO1xuaW1wb3J0IHsgSURpYWxvZ1Byb3BzIH0gZnJvbSBcIi4uL2RpYWxvZ3MvSURpYWxvZ1Byb3BzXCI7XG5pbXBvcnQgeyBsb2NhdGlvbkV2ZW50R2VvVXJpLCBpc1NlbGZMb2NhdGlvbiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2xvY2F0aW9uJztcbmltcG9ydCBNYXAgZnJvbSAnLi9NYXAnO1xuaW1wb3J0IFNtYXJ0TWFya2VyIGZyb20gJy4vU21hcnRNYXJrZXInO1xuaW1wb3J0IFpvb21CdXR0b25zIGZyb20gJy4vWm9vbUJ1dHRvbnMnO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgSURpYWxvZ1Byb3BzIHtcbiAgICBtYXRyaXhDbGllbnQ6IE1hdHJpeENsaWVudDtcbiAgICBteEV2ZW50OiBNYXRyaXhFdmVudDtcbn1cblxuaW50ZXJmYWNlIElTdGF0ZSB7XG4gICAgZXJyb3I6IEVycm9yO1xufVxuXG4vKipcbiAqIERpYWxvZyB0byB2aWV3IG0ubG9jYXRpb24gZXZlbnRzIG1heGltaXNlZFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2NhdGlvblZpZXdEaWFsb2cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8SVByb3BzLCBJU3RhdGU+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogSVByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldEJvZHlJZCA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIGBteF9Mb2NhdGlvblZpZXdEaWFsb2dfJHt0aGlzLnByb3BzLm14RXZlbnQuZ2V0SWQoKX1gO1xuICAgIH07XG5cbiAgICBwcml2YXRlIG9uRXJyb3IgPSAoZXJyb3IpID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGVycm9yIH0pO1xuICAgIH07XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbXhFdmVudCB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICAvLyBvbmx5IHBhc3MgbWVtYmVyIHRvIG1hcmtlciB3aGVuIHNob3VsZCByZW5kZXIgYXZhdGFyIG1hcmtlclxuICAgICAgICBjb25zdCBtYXJrZXJSb29tTWVtYmVyID0gaXNTZWxmTG9jYXRpb24obXhFdmVudC5nZXRDb250ZW50KCkpID8gbXhFdmVudC5zZW5kZXIgOiB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IGdlb1VyaSA9IGxvY2F0aW9uRXZlbnRHZW9VcmkobXhFdmVudCk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QmFzZURpYWxvZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nbXhfTG9jYXRpb25WaWV3RGlhbG9nJ1xuICAgICAgICAgICAgICAgIG9uRmluaXNoZWQ9e3RoaXMucHJvcHMub25GaW5pc2hlZH1cbiAgICAgICAgICAgICAgICBmaXhlZFdpZHRoPXtmYWxzZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8TWFwXG4gICAgICAgICAgICAgICAgICAgIGlkPXt0aGlzLmdldEJvZHlJZCgpfVxuICAgICAgICAgICAgICAgICAgICBjZW50ZXJHZW9Vcmk9e2dlb1VyaX1cbiAgICAgICAgICAgICAgICAgICAgb25FcnJvcj17dGhpcy5vbkVycm9yfVxuICAgICAgICAgICAgICAgICAgICBpbnRlcmFjdGl2ZVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJteF9Mb2NhdGlvblZpZXdEaWFsb2dfbWFwXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICh7IG1hcCB9KSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxTbWFydE1hcmtlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwPXttYXB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD17YCR7dGhpcy5nZXRCb2R5SWQoKX0tbWFya2VyYH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdlb1VyaT17Z2VvVXJpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm9vbU1lbWJlcj17bWFya2VyUm9vbU1lbWJlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFpvb21CdXR0b25zIG1hcD17bWFwfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9NYXA+XG4gICAgICAgICAgICA8L0Jhc2VEaWFsb2c+XG4gICAgICAgICk7XG4gICAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWdCQTs7QUFJQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUF6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQXNCQTtBQUNBO0FBQ0E7QUFDZSxNQUFNQSxrQkFBTixTQUFpQ0MsY0FBQSxDQUFNQyxTQUF2QyxDQUFpRTtFQUM1RUMsV0FBVyxDQUFDQyxLQUFELEVBQWdCO0lBQ3ZCLE1BQU1BLEtBQU47SUFEdUIsaURBUVAsTUFBTTtNQUN0QixPQUFRLHlCQUF3QixLQUFLQSxLQUFMLENBQVdDLE9BQVgsQ0FBbUJDLEtBQW5CLEVBQTJCLEVBQTNEO0lBQ0gsQ0FWMEI7SUFBQSwrQ0FZUkMsS0FBRCxJQUFXO01BQ3pCLEtBQUtDLFFBQUwsQ0FBYztRQUFFRDtNQUFGLENBQWQ7SUFDSCxDQWQwQjtJQUd2QixLQUFLRSxLQUFMLEdBQWE7TUFDVEYsS0FBSyxFQUFFRztJQURFLENBQWI7RUFHSDs7RUFVREMsTUFBTSxHQUFHO0lBQ0wsTUFBTTtNQUFFTjtJQUFGLElBQWMsS0FBS0QsS0FBekIsQ0FESyxDQUdMOztJQUNBLE1BQU1RLGdCQUFnQixHQUFHLElBQUFDLHdCQUFBLEVBQWVSLE9BQU8sQ0FBQ1MsVUFBUixFQUFmLElBQXVDVCxPQUFPLENBQUNVLE1BQS9DLEdBQXdETCxTQUFqRjtJQUNBLE1BQU1NLE1BQU0sR0FBRyxJQUFBQyw2QkFBQSxFQUFvQlosT0FBcEIsQ0FBZjtJQUNBLG9CQUNJLDZCQUFDLG1CQUFEO01BQ0ksU0FBUyxFQUFDLHVCQURkO01BRUksVUFBVSxFQUFFLEtBQUtELEtBQUwsQ0FBV2MsVUFGM0I7TUFHSSxVQUFVLEVBQUU7SUFIaEIsZ0JBS0ksNkJBQUMsWUFBRDtNQUNJLEVBQUUsRUFBRSxLQUFLQyxTQUFMLEVBRFI7TUFFSSxZQUFZLEVBQUVILE1BRmxCO01BR0ksT0FBTyxFQUFFLEtBQUtJLE9BSGxCO01BSUksV0FBVyxNQUpmO01BS0ksU0FBUyxFQUFDO0lBTGQsR0FRUTtNQUFBLElBQUM7UUFBRUM7TUFBRixDQUFEO01BQUEsb0JBQ0kseUVBQ0ksNkJBQUMsb0JBQUQ7UUFDSSxHQUFHLEVBQUVBLEdBRFQ7UUFFSSxFQUFFLEVBQUcsR0FBRSxLQUFLRixTQUFMLEVBQWlCLFNBRjVCO1FBR0ksTUFBTSxFQUFFSCxNQUhaO1FBSUksVUFBVSxFQUFFSjtNQUpoQixFQURKLGVBT0ksNkJBQUMsb0JBQUQ7UUFBYSxHQUFHLEVBQUVTO01BQWxCLEVBUEosQ0FESjtJQUFBLENBUlIsQ0FMSixDQURKO0VBNEJIOztBQW5EMkUifQ==