"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _SettingsStore = _interopRequireDefault(require("../../../settings/SettingsStore"));

var _StyledRadioButton = _interopRequireDefault(require("../elements/StyledRadioButton"));

var _languageHandler = require("../../../languageHandler");

var _SettingLevel = require("../../../settings/SettingLevel");

var _ImageSize = require("../../../settings/enums/ImageSize");

/*
Copyright 2021 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class ImageSizePanel extends _react.default.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "onSizeChange", ev => {
      const newSize = ev.target.value;
      this.setState({
        size: newSize
      }); // noinspection JSIgnoredPromiseFromCall

      _SettingsStore.default.setValue("Images.size", null, _SettingLevel.SettingLevel.ACCOUNT, newSize);
    });
    this.state = {
      size: _SettingsStore.default.getValue("Images.size")
    };
  }

  render() {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_SettingsTab_section mx_ImageSizePanel"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_SettingsTab_subheading"
    }, (0, _languageHandler._t)("Image size in the timeline")), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_ImageSizePanel_radios"
    }, /*#__PURE__*/_react.default.createElement("label", null, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_ImageSizePanel_size mx_ImageSizePanel_sizeDefault"
    }), /*#__PURE__*/_react.default.createElement(_StyledRadioButton.default, {
      name: "image_size",
      value: _ImageSize.ImageSize.Normal,
      checked: this.state.size === _ImageSize.ImageSize.Normal,
      onChange: this.onSizeChange
    }, (0, _languageHandler._t)("Default"))), /*#__PURE__*/_react.default.createElement("label", null, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_ImageSizePanel_size mx_ImageSizePanel_sizeLarge"
    }), /*#__PURE__*/_react.default.createElement(_StyledRadioButton.default, {
      name: "image_size",
      value: _ImageSize.ImageSize.Large,
      checked: this.state.size === _ImageSize.ImageSize.Large,
      onChange: this.onSizeChange
    }, (0, _languageHandler._t)("Large")))));
  }

}

exports.default = ImageSizePanel;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJbWFnZVNpemVQYW5lbCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsImV2IiwibmV3U2l6ZSIsInRhcmdldCIsInZhbHVlIiwic2V0U3RhdGUiLCJzaXplIiwiU2V0dGluZ3NTdG9yZSIsInNldFZhbHVlIiwiU2V0dGluZ0xldmVsIiwiQUNDT1VOVCIsInN0YXRlIiwiZ2V0VmFsdWUiLCJyZW5kZXIiLCJfdCIsIkltYWdlU2l6ZSIsIk5vcm1hbCIsIm9uU2l6ZUNoYW5nZSIsIkxhcmdlIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdmlld3Mvc2V0dGluZ3MvSW1hZ2VTaXplUGFuZWwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMSBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFNldHRpbmdzU3RvcmUgZnJvbSBcIi4uLy4uLy4uL3NldHRpbmdzL1NldHRpbmdzU3RvcmVcIjtcbmltcG9ydCBTdHlsZWRSYWRpb0J1dHRvbiBmcm9tIFwiLi4vZWxlbWVudHMvU3R5bGVkUmFkaW9CdXR0b25cIjtcbmltcG9ydCB7IF90IH0gZnJvbSBcIi4uLy4uLy4uL2xhbmd1YWdlSGFuZGxlclwiO1xuaW1wb3J0IHsgU2V0dGluZ0xldmVsIH0gZnJvbSBcIi4uLy4uLy4uL3NldHRpbmdzL1NldHRpbmdMZXZlbFwiO1xuaW1wb3J0IHsgSW1hZ2VTaXplIH0gZnJvbSBcIi4uLy4uLy4uL3NldHRpbmdzL2VudW1zL0ltYWdlU2l6ZVwiO1xuXG5pbnRlcmZhY2UgSVByb3BzIHtcbiAgICAvLyBub25lXG59XG5cbmludGVyZmFjZSBJU3RhdGUge1xuICAgIHNpemU6IEltYWdlU2l6ZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW1hZ2VTaXplUGFuZWwgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8SVByb3BzLCBJU3RhdGU+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogSVByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc2l6ZTogU2V0dGluZ3NTdG9yZS5nZXRWYWx1ZShcIkltYWdlcy5zaXplXCIpLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHByaXZhdGUgb25TaXplQ2hhbmdlID0gKGV2OiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50Pik6IHZvaWQgPT4ge1xuICAgICAgICBjb25zdCBuZXdTaXplID0gZXYudGFyZ2V0LnZhbHVlIGFzIEltYWdlU2l6ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHNpemU6IG5ld1NpemUgfSk7XG5cbiAgICAgICAgLy8gbm9pbnNwZWN0aW9uIEpTSWdub3JlZFByb21pc2VGcm9tQ2FsbFxuICAgICAgICBTZXR0aW5nc1N0b3JlLnNldFZhbHVlKFwiSW1hZ2VzLnNpemVcIiwgbnVsbCwgU2V0dGluZ0xldmVsLkFDQ09VTlQsIG5ld1NpemUpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfU2V0dGluZ3NUYWJfc2VjdGlvbiBteF9JbWFnZVNpemVQYW5lbFwiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm14X1NldHRpbmdzVGFiX3N1YmhlYWRpbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgeyBfdChcIkltYWdlIHNpemUgaW4gdGhlIHRpbWVsaW5lXCIpIH1cbiAgICAgICAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0ltYWdlU2l6ZVBhbmVsX3JhZGlvc1wiPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0ltYWdlU2l6ZVBhbmVsX3NpemUgbXhfSW1hZ2VTaXplUGFuZWxfc2l6ZURlZmF1bHRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFJhZGlvQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImltYWdlX3NpemVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtJbWFnZVNpemUuTm9ybWFsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUuc2l6ZSA9PT0gSW1hZ2VTaXplLk5vcm1hbH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vblNpemVDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICA+eyBfdChcIkRlZmF1bHRcIikgfTwvU3R5bGVkUmFkaW9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfSW1hZ2VTaXplUGFuZWxfc2l6ZSBteF9JbWFnZVNpemVQYW5lbF9zaXplTGFyZ2VcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFN0eWxlZFJhZGlvQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cImltYWdlX3NpemVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtJbWFnZVNpemUuTGFyZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS5zaXplID09PSBJbWFnZVNpemUuTGFyZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMub25TaXplQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgPnsgX3QoXCJMYXJnZVwiKSB9PC9TdHlsZWRSYWRpb0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFnQkE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBdEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWtCZSxNQUFNQSxjQUFOLFNBQTZCQyxjQUFBLENBQU1DLFNBQW5DLENBQTZEO0VBQ3hFQyxXQUFXLENBQUNDLEtBQUQsRUFBZ0I7SUFDdkIsTUFBTUEsS0FBTjtJQUR1QixvREFRSEMsRUFBRCxJQUFtRDtNQUN0RSxNQUFNQyxPQUFPLEdBQUdELEVBQUUsQ0FBQ0UsTUFBSCxDQUFVQyxLQUExQjtNQUNBLEtBQUtDLFFBQUwsQ0FBYztRQUFFQyxJQUFJLEVBQUVKO01BQVIsQ0FBZCxFQUZzRSxDQUl0RTs7TUFDQUssc0JBQUEsQ0FBY0MsUUFBZCxDQUF1QixhQUF2QixFQUFzQyxJQUF0QyxFQUE0Q0MsMEJBQUEsQ0FBYUMsT0FBekQsRUFBa0VSLE9BQWxFO0lBQ0gsQ0FkMEI7SUFHdkIsS0FBS1MsS0FBTCxHQUFhO01BQ1RMLElBQUksRUFBRUMsc0JBQUEsQ0FBY0ssUUFBZCxDQUF1QixhQUF2QjtJQURHLENBQWI7RUFHSDs7RUFVTUMsTUFBTSxHQUFnQjtJQUN6QixvQkFDSTtNQUFLLFNBQVMsRUFBQztJQUFmLGdCQUNJO01BQU0sU0FBUyxFQUFDO0lBQWhCLEdBQ00sSUFBQUMsbUJBQUEsRUFBRyw0QkFBSCxDQUROLENBREosZUFLSTtNQUFLLFNBQVMsRUFBQztJQUFmLGdCQUNJLHlEQUNJO01BQUssU0FBUyxFQUFDO0lBQWYsRUFESixlQUVJLDZCQUFDLDBCQUFEO01BQ0ksSUFBSSxFQUFDLFlBRFQ7TUFFSSxLQUFLLEVBQUVDLG9CQUFBLENBQVVDLE1BRnJCO01BR0ksT0FBTyxFQUFFLEtBQUtMLEtBQUwsQ0FBV0wsSUFBWCxLQUFvQlMsb0JBQUEsQ0FBVUMsTUFIM0M7TUFJSSxRQUFRLEVBQUUsS0FBS0M7SUFKbkIsR0FLRyxJQUFBSCxtQkFBQSxFQUFHLFNBQUgsQ0FMSCxDQUZKLENBREosZUFVSSx5REFDSTtNQUFLLFNBQVMsRUFBQztJQUFmLEVBREosZUFFSSw2QkFBQywwQkFBRDtNQUNJLElBQUksRUFBQyxZQURUO01BRUksS0FBSyxFQUFFQyxvQkFBQSxDQUFVRyxLQUZyQjtNQUdJLE9BQU8sRUFBRSxLQUFLUCxLQUFMLENBQVdMLElBQVgsS0FBb0JTLG9CQUFBLENBQVVHLEtBSDNDO01BSUksUUFBUSxFQUFFLEtBQUtEO0lBSm5CLEdBS0csSUFBQUgsbUJBQUEsRUFBRyxPQUFILENBTEgsQ0FGSixDQVZKLENBTEosQ0FESjtFQTRCSDs7QUE5Q3VFIn0=