"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _SettingsStore = _interopRequireDefault(require("../../../settings/SettingsStore"));

var _EventTilePreview = _interopRequireDefault(require("../elements/EventTilePreview"));

var _StyledRadioButton = _interopRequireDefault(require("../elements/StyledRadioButton"));

var _languageHandler = require("../../../languageHandler");

var _Layout = require("../../../settings/enums/Layout");

var _SettingLevel = require("../../../settings/SettingLevel");

/*
Copyright 2019 New Vector Ltd
Copyright 2019 - 2021 The Matrix.org Foundation C.I.C.
Copyright 2021 Å imon Brandner <simon.bra.ag@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class LayoutSwitcher extends _react.default.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "onLayoutChange", e => {
      const layout = e.target.value;
      this.setState({
        layout: layout
      });

      _SettingsStore.default.setValue("layout", null, _SettingLevel.SettingLevel.DEVICE, layout);

      this.props.onLayoutChanged(layout);
    });
    this.state = {
      layout: _SettingsStore.default.getValue("layout")
    };
  }

  render() {
    const ircClasses = (0, _classnames.default)("mx_LayoutSwitcher_RadioButton", {
      mx_LayoutSwitcher_RadioButton_selected: this.state.layout == _Layout.Layout.IRC
    });
    const groupClasses = (0, _classnames.default)("mx_LayoutSwitcher_RadioButton", {
      mx_LayoutSwitcher_RadioButton_selected: this.state.layout == _Layout.Layout.Group
    });
    const bubbleClasses = (0, _classnames.default)("mx_LayoutSwitcher_RadioButton", {
      mx_LayoutSwitcher_RadioButton_selected: this.state.layout === _Layout.Layout.Bubble
    });
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_SettingsTab_section mx_LayoutSwitcher"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_SettingsTab_subheading"
    }, (0, _languageHandler._t)("Message layout")), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_LayoutSwitcher_RadioButtons"
    }, /*#__PURE__*/_react.default.createElement("label", {
      className: ircClasses
    }, /*#__PURE__*/_react.default.createElement(_EventTilePreview.default, {
      className: "mx_LayoutSwitcher_RadioButton_preview",
      message: this.props.messagePreviewText,
      layout: _Layout.Layout.IRC,
      userId: this.props.userId,
      displayName: this.props.displayName,
      avatarUrl: this.props.avatarUrl
    }), /*#__PURE__*/_react.default.createElement(_StyledRadioButton.default, {
      name: "layout",
      value: _Layout.Layout.IRC,
      checked: this.state.layout === _Layout.Layout.IRC,
      onChange: this.onLayoutChange
    }, (0, _languageHandler._t)("IRC (Experimental)"))), /*#__PURE__*/_react.default.createElement("label", {
      className: groupClasses
    }, /*#__PURE__*/_react.default.createElement(_EventTilePreview.default, {
      className: "mx_LayoutSwitcher_RadioButton_preview",
      message: this.props.messagePreviewText,
      layout: _Layout.Layout.Group,
      userId: this.props.userId,
      displayName: this.props.displayName,
      avatarUrl: this.props.avatarUrl
    }), /*#__PURE__*/_react.default.createElement(_StyledRadioButton.default, {
      name: "layout",
      value: _Layout.Layout.Group,
      checked: this.state.layout == _Layout.Layout.Group,
      onChange: this.onLayoutChange
    }, (0, _languageHandler._t)("Modern"))), /*#__PURE__*/_react.default.createElement("label", {
      className: bubbleClasses
    }, /*#__PURE__*/_react.default.createElement(_EventTilePreview.default, {
      className: "mx_LayoutSwitcher_RadioButton_preview",
      message: this.props.messagePreviewText,
      layout: _Layout.Layout.Bubble,
      userId: this.props.userId,
      displayName: this.props.displayName,
      avatarUrl: this.props.avatarUrl
    }), /*#__PURE__*/_react.default.createElement(_StyledRadioButton.default, {
      name: "layout",
      value: _Layout.Layout.Bubble,
      checked: this.state.layout == _Layout.Layout.Bubble,
      onChange: this.onLayoutChange
    }, (0, _languageHandler._t)("Message bubbles")))));
  }

}

exports.default = LayoutSwitcher;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,