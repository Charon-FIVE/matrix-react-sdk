"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _languageHandler = require("../../../../languageHandler");

var _RoomAvatar = _interopRequireDefault(require("../../avatars/RoomAvatar"));

var _AccessibleTooltipButton = _interopRequireDefault(require("../../elements/AccessibleTooltipButton"));

/*
Copyright 2021 New Vector Ltd

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const LegacyCallViewHeaderControls = _ref => {
  let {
    onExpand,
    onPin,
    onMaximize
  } = _ref;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_LegacyCallViewHeader_controls"
  }, onMaximize && /*#__PURE__*/_react.default.createElement(_AccessibleTooltipButton.default, {
    className: "mx_LegacyCallViewHeader_button mx_LegacyCallViewHeader_button_fullscreen",
    onClick: onMaximize,
    title: (0, _languageHandler._t)("Fill Screen")
  }), onPin && /*#__PURE__*/_react.default.createElement(_AccessibleTooltipButton.default, {
    className: "mx_LegacyCallViewHeader_button mx_LegacyCallViewHeader_button_pin",
    onClick: onPin,
    title: (0, _languageHandler._t)("Pin")
  }), onExpand && /*#__PURE__*/_react.default.createElement(_AccessibleTooltipButton.default, {
    className: "mx_LegacyCallViewHeader_button mx_LegacyCallViewHeader_button_expand",
    onClick: onExpand,
    title: (0, _languageHandler._t)("Return to call")
  }));
};

const SecondaryCallInfo = _ref2 => {
  let {
    callRoom
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement("span", {
    className: "mx_LegacyCallViewHeader_secondaryCallInfo"
  }, /*#__PURE__*/_react.default.createElement(_RoomAvatar.default, {
    room: callRoom,
    height: 16,
    width: 16
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "mx_LegacyCallView_secondaryCall_roomName"
  }, (0, _languageHandler._t)("%(name)s on hold", {
    name: callRoom.name
  })));
};

const LegacyCallViewHeader = _ref3 => {
  let {
    pipMode = false,
    callRooms = [],
    onPipMouseDown,
    onExpand,
    onPin,
    onMaximize
  } = _ref3;
  const [callRoom, onHoldCallRoom] = callRooms;
  const callRoomName = callRoom.name;

  if (!pipMode) {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_LegacyCallViewHeader"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_LegacyCallViewHeader_icon"
    }), /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_LegacyCallViewHeader_text"
    }, (0, _languageHandler._t)("Call")), /*#__PURE__*/_react.default.createElement(LegacyCallViewHeaderControls, {
      onMaximize: onMaximize
    }));
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_LegacyCallViewHeader mx_LegacyCallViewHeader_pip",
    onMouseDown: onPipMouseDown
  }, /*#__PURE__*/_react.default.createElement(_RoomAvatar.default, {
    room: callRoom,
    height: 32,
    width: 32
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_LegacyCallViewHeader_callInfo"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_LegacyCallViewHeader_roomName"
  }, callRoomName), onHoldCallRoom && /*#__PURE__*/_react.default.createElement(SecondaryCallInfo, {
    callRoom: onHoldCallRoom
  })), /*#__PURE__*/_react.default.createElement(LegacyCallViewHeaderControls, {
    onExpand: onExpand,
    onPin: onPin,
    onMaximize: onMaximize
  }));
};

var _default = LegacyCallViewHeader;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMZWdhY3lDYWxsVmlld0hlYWRlckNvbnRyb2xzIiwib25FeHBhbmQiLCJvblBpbiIsIm9uTWF4aW1pemUiLCJfdCIsIlNlY29uZGFyeUNhbGxJbmZvIiwiY2FsbFJvb20iLCJuYW1lIiwiTGVnYWN5Q2FsbFZpZXdIZWFkZXIiLCJwaXBNb2RlIiwiY2FsbFJvb21zIiwib25QaXBNb3VzZURvd24iLCJvbkhvbGRDYWxsUm9vbSIsImNhbGxSb29tTmFtZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL3ZvaXAvTGVnYWN5Q2FsbFZpZXcvTGVnYWN5Q2FsbFZpZXdIZWFkZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMSBOZXcgVmVjdG9yIEx0ZFxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCB7IFJvb20gfSBmcm9tICdtYXRyaXgtanMtc2RrL3NyYy9tb2RlbHMvcm9vbSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBfdCB9IGZyb20gJy4uLy4uLy4uLy4uL2xhbmd1YWdlSGFuZGxlcic7XG5pbXBvcnQgUm9vbUF2YXRhciBmcm9tICcuLi8uLi9hdmF0YXJzL1Jvb21BdmF0YXInO1xuaW1wb3J0IEFjY2Vzc2libGVUb29sdGlwQnV0dG9uIGZyb20gJy4uLy4uL2VsZW1lbnRzL0FjY2Vzc2libGVUb29sdGlwQnV0dG9uJztcblxuaW50ZXJmYWNlIExlZ2FjeUNhbGxDb250cm9sc1Byb3BzIHtcbiAgICBvbkV4cGFuZD86ICgpID0+IHZvaWQ7XG4gICAgb25QaW4/OiAoKSA9PiB2b2lkO1xuICAgIG9uTWF4aW1pemU/OiAoKSA9PiB2b2lkO1xufVxuXG5jb25zdCBMZWdhY3lDYWxsVmlld0hlYWRlckNvbnRyb2xzOiBSZWFjdC5GQzxMZWdhY3lDYWxsQ29udHJvbHNQcm9wcz4gPSAoeyBvbkV4cGFuZCwgb25QaW4sIG9uTWF4aW1pemUgfSkgPT4ge1xuICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm14X0xlZ2FjeUNhbGxWaWV3SGVhZGVyX2NvbnRyb2xzXCI+XG4gICAgICAgIHsgb25NYXhpbWl6ZSAmJiA8QWNjZXNzaWJsZVRvb2x0aXBCdXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm14X0xlZ2FjeUNhbGxWaWV3SGVhZGVyX2J1dHRvbiBteF9MZWdhY3lDYWxsVmlld0hlYWRlcl9idXR0b25fZnVsbHNjcmVlblwiXG4gICAgICAgICAgICBvbkNsaWNrPXtvbk1heGltaXplfVxuICAgICAgICAgICAgdGl0bGU9e190KFwiRmlsbCBTY3JlZW5cIil9XG4gICAgICAgIC8+IH1cbiAgICAgICAgeyBvblBpbiAmJiA8QWNjZXNzaWJsZVRvb2x0aXBCdXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm14X0xlZ2FjeUNhbGxWaWV3SGVhZGVyX2J1dHRvbiBteF9MZWdhY3lDYWxsVmlld0hlYWRlcl9idXR0b25fcGluXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e29uUGlufVxuICAgICAgICAgICAgdGl0bGU9e190KFwiUGluXCIpfVxuICAgICAgICAvPiB9XG4gICAgICAgIHsgb25FeHBhbmQgJiYgPEFjY2Vzc2libGVUb29sdGlwQnV0dG9uXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJteF9MZWdhY3lDYWxsVmlld0hlYWRlcl9idXR0b24gbXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXJfYnV0dG9uX2V4cGFuZFwiXG4gICAgICAgICAgICBvbkNsaWNrPXtvbkV4cGFuZH1cbiAgICAgICAgICAgIHRpdGxlPXtfdChcIlJldHVybiB0byBjYWxsXCIpfVxuICAgICAgICAvPiB9XG4gICAgPC9kaXY+O1xufTtcblxuaW50ZXJmYWNlIElTZWNvbmRhcnlDYWxsSW5mb1Byb3BzIHtcbiAgICBjYWxsUm9vbTogUm9vbTtcbn1cblxuY29uc3QgU2Vjb25kYXJ5Q2FsbEluZm86IFJlYWN0LkZDPElTZWNvbmRhcnlDYWxsSW5mb1Byb3BzPiA9ICh7IGNhbGxSb29tIH0pID0+IHtcbiAgICByZXR1cm4gPHNwYW4gY2xhc3NOYW1lPVwibXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXJfc2Vjb25kYXJ5Q2FsbEluZm9cIj5cbiAgICAgICAgPFJvb21BdmF0YXIgcm9vbT17Y2FsbFJvb219IGhlaWdodD17MTZ9IHdpZHRoPXsxNn0gLz5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibXhfTGVnYWN5Q2FsbFZpZXdfc2Vjb25kYXJ5Q2FsbF9yb29tTmFtZVwiPlxuICAgICAgICAgICAgeyBfdChcIiUobmFtZSlzIG9uIGhvbGRcIiwgeyBuYW1lOiBjYWxsUm9vbS5uYW1lIH0pIH1cbiAgICAgICAgPC9zcGFuPlxuICAgIDwvc3Bhbj47XG59O1xuXG5pbnRlcmZhY2UgTGVnYWN5Q2FsbFZpZXdIZWFkZXJQcm9wcyB7XG4gICAgcGlwTW9kZTogYm9vbGVhbjtcbiAgICBjYWxsUm9vbXM/OiBSb29tW107XG4gICAgb25QaXBNb3VzZURvd246IChldmVudDogUmVhY3QuTW91c2VFdmVudDxFbGVtZW50LCBNb3VzZUV2ZW50PikgPT4gdm9pZDtcbiAgICBvbkV4cGFuZD86ICgpID0+IHZvaWQ7XG4gICAgb25QaW4/OiAoKSA9PiB2b2lkO1xuICAgIG9uTWF4aW1pemU/OiAoKSA9PiB2b2lkO1xufVxuXG5jb25zdCBMZWdhY3lDYWxsVmlld0hlYWRlcjogUmVhY3QuRkM8TGVnYWN5Q2FsbFZpZXdIZWFkZXJQcm9wcz4gPSAoe1xuICAgIHBpcE1vZGUgPSBmYWxzZSxcbiAgICBjYWxsUm9vbXMgPSBbXSxcbiAgICBvblBpcE1vdXNlRG93bixcbiAgICBvbkV4cGFuZCxcbiAgICBvblBpbixcbiAgICBvbk1heGltaXplLFxufSkgPT4ge1xuICAgIGNvbnN0IFtjYWxsUm9vbSwgb25Ib2xkQ2FsbFJvb21dID0gY2FsbFJvb21zO1xuICAgIGNvbnN0IGNhbGxSb29tTmFtZSA9IGNhbGxSb29tLm5hbWU7XG5cbiAgICBpZiAoIXBpcE1vZGUpIHtcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwibXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXJfaWNvblwiIC8+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJteF9MZWdhY3lDYWxsVmlld0hlYWRlcl90ZXh0XCI+eyBfdChcIkNhbGxcIikgfTwvc3Bhbj5cbiAgICAgICAgICAgIDxMZWdhY3lDYWxsVmlld0hlYWRlckNvbnRyb2xzIG9uTWF4aW1pemU9e29uTWF4aW1pemV9IC8+XG4gICAgICAgIDwvZGl2PjtcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwibXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXIgbXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXJfcGlwXCJcbiAgICAgICAgICAgIG9uTW91c2VEb3duPXtvblBpcE1vdXNlRG93bn1cbiAgICAgICAgPlxuICAgICAgICAgICAgPFJvb21BdmF0YXIgcm9vbT17Y2FsbFJvb219IGhlaWdodD17MzJ9IHdpZHRoPXszMn0gLz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfTGVnYWN5Q2FsbFZpZXdIZWFkZXJfY2FsbEluZm9cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0xlZ2FjeUNhbGxWaWV3SGVhZGVyX3Jvb21OYW1lXCI+eyBjYWxsUm9vbU5hbWUgfTwvZGl2PlxuICAgICAgICAgICAgICAgIHsgb25Ib2xkQ2FsbFJvb20gJiYgPFNlY29uZGFyeUNhbGxJbmZvIGNhbGxSb29tPXtvbkhvbGRDYWxsUm9vbX0gLz4gfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8TGVnYWN5Q2FsbFZpZXdIZWFkZXJDb250cm9scyBvbkV4cGFuZD17b25FeHBhbmR9IG9uUGluPXtvblBpbn0gb25NYXhpbWl6ZT17b25NYXhpbWl6ZX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IExlZ2FjeUNhbGxWaWV3SGVhZGVyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFpQkE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWVBLE1BQU1BLDRCQUErRCxHQUFHLFFBQXFDO0VBQUEsSUFBcEM7SUFBRUMsUUFBRjtJQUFZQyxLQUFaO0lBQW1CQztFQUFuQixDQUFvQztFQUN6RyxvQkFBTztJQUFLLFNBQVMsRUFBQztFQUFmLEdBQ0RBLFVBQVUsaUJBQUksNkJBQUMsZ0NBQUQ7SUFDWixTQUFTLEVBQUMsMEVBREU7SUFFWixPQUFPLEVBQUVBLFVBRkc7SUFHWixLQUFLLEVBQUUsSUFBQUMsbUJBQUEsRUFBRyxhQUFIO0VBSEssRUFEYixFQU1ERixLQUFLLGlCQUFJLDZCQUFDLGdDQUFEO0lBQ1AsU0FBUyxFQUFDLG1FQURIO0lBRVAsT0FBTyxFQUFFQSxLQUZGO0lBR1AsS0FBSyxFQUFFLElBQUFFLG1CQUFBLEVBQUcsS0FBSDtFQUhBLEVBTlIsRUFXREgsUUFBUSxpQkFBSSw2QkFBQyxnQ0FBRDtJQUNWLFNBQVMsRUFBQyxzRUFEQTtJQUVWLE9BQU8sRUFBRUEsUUFGQztJQUdWLEtBQUssRUFBRSxJQUFBRyxtQkFBQSxFQUFHLGdCQUFIO0VBSEcsRUFYWCxDQUFQO0FBaUJILENBbEJEOztBQXdCQSxNQUFNQyxpQkFBb0QsR0FBRyxTQUFrQjtFQUFBLElBQWpCO0lBQUVDO0VBQUYsQ0FBaUI7RUFDM0Usb0JBQU87SUFBTSxTQUFTLEVBQUM7RUFBaEIsZ0JBQ0gsNkJBQUMsbUJBQUQ7SUFBWSxJQUFJLEVBQUVBLFFBQWxCO0lBQTRCLE1BQU0sRUFBRSxFQUFwQztJQUF3QyxLQUFLLEVBQUU7RUFBL0MsRUFERyxlQUVIO0lBQU0sU0FBUyxFQUFDO0VBQWhCLEdBQ00sSUFBQUYsbUJBQUEsRUFBRyxrQkFBSCxFQUF1QjtJQUFFRyxJQUFJLEVBQUVELFFBQVEsQ0FBQ0M7RUFBakIsQ0FBdkIsQ0FETixDQUZHLENBQVA7QUFNSCxDQVBEOztBQWtCQSxNQUFNQyxvQkFBeUQsR0FBRyxTQU81RDtFQUFBLElBUDZEO0lBQy9EQyxPQUFPLEdBQUcsS0FEcUQ7SUFFL0RDLFNBQVMsR0FBRyxFQUZtRDtJQUcvREMsY0FIK0Q7SUFJL0RWLFFBSitEO0lBSy9EQyxLQUwrRDtJQU0vREM7RUFOK0QsQ0FPN0Q7RUFDRixNQUFNLENBQUNHLFFBQUQsRUFBV00sY0FBWCxJQUE2QkYsU0FBbkM7RUFDQSxNQUFNRyxZQUFZLEdBQUdQLFFBQVEsQ0FBQ0MsSUFBOUI7O0VBRUEsSUFBSSxDQUFDRSxPQUFMLEVBQWM7SUFDVixvQkFBTztNQUFLLFNBQVMsRUFBQztJQUFmLGdCQUNIO01BQUssU0FBUyxFQUFDO0lBQWYsRUFERyxlQUVIO01BQU0sU0FBUyxFQUFDO0lBQWhCLEdBQWlELElBQUFMLG1CQUFBLEVBQUcsTUFBSCxDQUFqRCxDQUZHLGVBR0gsNkJBQUMsNEJBQUQ7TUFBOEIsVUFBVSxFQUFFRDtJQUExQyxFQUhHLENBQVA7RUFLSDs7RUFDRCxvQkFDSTtJQUNJLFNBQVMsRUFBQyxxREFEZDtJQUVJLFdBQVcsRUFBRVE7RUFGakIsZ0JBSUksNkJBQUMsbUJBQUQ7SUFBWSxJQUFJLEVBQUVMLFFBQWxCO0lBQTRCLE1BQU0sRUFBRSxFQUFwQztJQUF3QyxLQUFLLEVBQUU7RUFBL0MsRUFKSixlQUtJO0lBQUssU0FBUyxFQUFDO0VBQWYsZ0JBQ0k7SUFBSyxTQUFTLEVBQUM7RUFBZixHQUFvRE8sWUFBcEQsQ0FESixFQUVNRCxjQUFjLGlCQUFJLDZCQUFDLGlCQUFEO0lBQW1CLFFBQVEsRUFBRUE7RUFBN0IsRUFGeEIsQ0FMSixlQVNJLDZCQUFDLDRCQUFEO0lBQThCLFFBQVEsRUFBRVgsUUFBeEM7SUFBa0QsS0FBSyxFQUFFQyxLQUF6RDtJQUFnRSxVQUFVLEVBQUVDO0VBQTVFLEVBVEosQ0FESjtBQWFILENBL0JEOztlQWlDZUssb0IifQ==