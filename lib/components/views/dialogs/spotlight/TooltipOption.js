"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipOption = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _RovingTabIndex = require("../../../../accessibility/RovingTabIndex");

var _AccessibleTooltipButton = _interopRequireDefault(require("../../elements/AccessibleTooltipButton"));

const _excluded = ["inputRef", "className"];

const TooltipOption = _ref => {
  let {
    inputRef,
    className
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const [onFocus, isActive, ref] = (0, _RovingTabIndex.useRovingTabIndex)(inputRef);
  return /*#__PURE__*/_react.default.createElement(_AccessibleTooltipButton.default, (0, _extends2.default)({}, props, {
    className: (0, _classnames.default)(className, "mx_SpotlightDialog_option"),
    onFocus: onFocus,
    inputRef: ref,
    tabIndex: -1,
    "aria-selected": isActive,
    role: "option"
  }));
};

exports.TooltipOption = TooltipOption;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUb29sdGlwT3B0aW9uIiwiaW5wdXRSZWYiLCJjbGFzc05hbWUiLCJwcm9wcyIsIm9uRm9jdXMiLCJpc0FjdGl2ZSIsInJlZiIsInVzZVJvdmluZ1RhYkluZGV4IiwiY2xhc3NOYW1lcyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3Mvc3BvdGxpZ2h0L1Rvb2x0aXBPcHRpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMiBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBjbGFzc05hbWVzIGZyb20gXCJjbGFzc25hbWVzXCI7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50UHJvcHMsIFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBSb3ZpbmdBY2Nlc3NpYmxlVG9vbHRpcEJ1dHRvbiB9IGZyb20gXCIuLi8uLi8uLi8uLi9hY2Nlc3NpYmlsaXR5L3JvdmluZy9Sb3ZpbmdBY2Nlc3NpYmxlVG9vbHRpcEJ1dHRvblwiO1xuaW1wb3J0IHsgdXNlUm92aW5nVGFiSW5kZXggfSBmcm9tIFwiLi4vLi4vLi4vLi4vYWNjZXNzaWJpbGl0eS9Sb3ZpbmdUYWJJbmRleFwiO1xuaW1wb3J0IEFjY2Vzc2libGVUb29sdGlwQnV0dG9uIGZyb20gXCIuLi8uLi9lbGVtZW50cy9BY2Nlc3NpYmxlVG9vbHRpcEJ1dHRvblwiO1xuXG5pbnRlcmZhY2UgVG9vbHRpcE9wdGlvblByb3BzIGV4dGVuZHMgQ29tcG9uZW50UHJvcHM8dHlwZW9mIFJvdmluZ0FjY2Vzc2libGVUb29sdGlwQnV0dG9uPiB7XG4gICAgZW5kQWRvcm5tZW50PzogUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgVG9vbHRpcE9wdGlvbjogUmVhY3QuRkM8VG9vbHRpcE9wdGlvblByb3BzPiA9ICh7IGlucHV0UmVmLCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+IHtcbiAgICBjb25zdCBbb25Gb2N1cywgaXNBY3RpdmUsIHJlZl0gPSB1c2VSb3ZpbmdUYWJJbmRleChpbnB1dFJlZik7XG4gICAgcmV0dXJuIDxBY2Nlc3NpYmxlVG9vbHRpcEJ1dHRvblxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhjbGFzc05hbWUsIFwibXhfU3BvdGxpZ2h0RGlhbG9nX29wdGlvblwiKX1cbiAgICAgICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICAgICAgaW5wdXRSZWY9e3JlZn1cbiAgICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgICBhcmlhLXNlbGVjdGVkPXtpc0FjdGl2ZX1cbiAgICAgICAgcm9sZT1cIm9wdGlvblwiXG4gICAgLz47XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUdBOztBQUNBOzs7O0FBTU8sTUFBTUEsYUFBMkMsR0FBRyxRQUF1QztFQUFBLElBQXRDO0lBQUVDLFFBQUY7SUFBWUM7RUFBWixDQUFzQztFQUFBLElBQVpDLEtBQVk7RUFDOUYsTUFBTSxDQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBb0JDLEdBQXBCLElBQTJCLElBQUFDLGlDQUFBLEVBQWtCTixRQUFsQixDQUFqQztFQUNBLG9CQUFPLDZCQUFDLGdDQUFELDZCQUNDRSxLQUREO0lBRUgsU0FBUyxFQUFFLElBQUFLLG1CQUFBLEVBQVdOLFNBQVgsRUFBc0IsMkJBQXRCLENBRlI7SUFHSCxPQUFPLEVBQUVFLE9BSE47SUFJSCxRQUFRLEVBQUVFLEdBSlA7SUFLSCxRQUFRLEVBQUUsQ0FBQyxDQUxSO0lBTUgsaUJBQWVELFFBTlo7SUFPSCxJQUFJLEVBQUM7RUFQRixHQUFQO0FBU0gsQ0FYTSJ9