"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _languageHandler = require("../../../languageHandler");

var _BaseDialog = _interopRequireDefault(require("./BaseDialog"));

var _DialogButtons = _interopRequireDefault(require("../elements/DialogButtons"));

/*
Copyright 2015, 2016 OpenMarket Ltd
Copyright 2017 New Vector Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
class QuestionDialog extends _react.default.Component {
  constructor() {
    super(...arguments);
    (0, _defineProperty2.default)(this, "onOk", () => {
      this.props.onFinished(true);
    });
    (0, _defineProperty2.default)(this, "onCancel", () => {
      this.props.onFinished(false);
    });
  }

  render() {
    let primaryButtonClass = "";

    if (this.props.danger) {
      primaryButtonClass = "danger";
    }

    return /*#__PURE__*/_react.default.createElement(_BaseDialog.default, {
      className: (0, _classnames.default)("mx_QuestionDialog", this.props.className),
      onFinished: this.props.onFinished,
      title: this.props.title,
      contentId: "mx_Dialog_content",
      headerImage: this.props.headerImage,
      hasCancel: this.props.hasCancelButton,
      fixedWidth: this.props.fixedWidth
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_Dialog_content",
      id: "mx_Dialog_content"
    }, this.props.description), /*#__PURE__*/_react.default.createElement(_DialogButtons.default, {
      primaryButton: this.props.button || (0, _languageHandler._t)('OK'),
      primaryButtonClass: primaryButtonClass,
      primaryDisabled: this.props.buttonDisabled,
      cancelButton: this.props.cancelButton,
      hasCancel: this.props.hasCancelButton && !this.props.quitOnly,
      onPrimaryButtonClick: this.onOk,
      focus: this.props.focus,
      onCancel: this.onCancel
    }, this.props.extraButtons));
  }

}

exports.default = QuestionDialog;
(0, _defineProperty2.default)(QuestionDialog, "defaultProps", {
  title: "",
  description: "",
  extraButtons: null,
  focus: true,
  hasCancelButton: true,
  danger: false,
  quitOnly: false
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJRdWVzdGlvbkRpYWxvZyIsIlJlYWN0IiwiQ29tcG9uZW50IiwicHJvcHMiLCJvbkZpbmlzaGVkIiwicmVuZGVyIiwicHJpbWFyeUJ1dHRvbkNsYXNzIiwiZGFuZ2VyIiwiY2xhc3NOYW1lcyIsImNsYXNzTmFtZSIsInRpdGxlIiwiaGVhZGVySW1hZ2UiLCJoYXNDYW5jZWxCdXR0b24iLCJmaXhlZFdpZHRoIiwiZGVzY3JpcHRpb24iLCJidXR0b24iLCJfdCIsImJ1dHRvbkRpc2FibGVkIiwiY2FuY2VsQnV0dG9uIiwicXVpdE9ubHkiLCJvbk9rIiwiZm9jdXMiLCJvbkNhbmNlbCIsImV4dHJhQnV0dG9ucyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3MvUXVlc3Rpb25EaWFsb2cudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxNSwgMjAxNiBPcGVuTWFya2V0IEx0ZFxuQ29weXJpZ2h0IDIwMTcgTmV3IFZlY3RvciBMdGQuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gXCJjbGFzc25hbWVzXCI7XG5cbmltcG9ydCB7IF90IH0gZnJvbSAnLi4vLi4vLi4vbGFuZ3VhZ2VIYW5kbGVyJztcbmltcG9ydCB7IElEaWFsb2dQcm9wcyB9IGZyb20gXCIuL0lEaWFsb2dQcm9wc1wiO1xuaW1wb3J0IEJhc2VEaWFsb2cgZnJvbSBcIi4vQmFzZURpYWxvZ1wiO1xuaW1wb3J0IERpYWxvZ0J1dHRvbnMgZnJvbSBcIi4uL2VsZW1lbnRzL0RpYWxvZ0J1dHRvbnNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJUXVlc3Rpb25EaWFsb2dQcm9wcyBleHRlbmRzIElEaWFsb2dQcm9wcyB7XG4gICAgdGl0bGU/OiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgZXh0cmFCdXR0b25zPzogUmVhY3QuUmVhY3ROb2RlO1xuICAgIGJ1dHRvbj86IHN0cmluZztcbiAgICBidXR0b25EaXNhYmxlZD86IGJvb2xlYW47XG4gICAgZGFuZ2VyPzogYm9vbGVhbjtcbiAgICBmb2N1cz86IGJvb2xlYW47XG4gICAgaGVhZGVySW1hZ2U/OiBzdHJpbmc7XG4gICAgcXVpdE9ubHk/OiBib29sZWFuOyAvLyBxdWl0T25seSBkb2Vzbid0IHNob3cgdGhlIGNhbmNlbCBidXR0b24ganVzdCB0aGUgcXVpdCBbeF0uXG4gICAgZml4ZWRXaWR0aD86IGJvb2xlYW47XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICAgIGhhc0NhbmNlbEJ1dHRvbj86IGJvb2xlYW47XG4gICAgY2FuY2VsQnV0dG9uPzogUmVhY3QuUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRdWVzdGlvbkRpYWxvZyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUXVlc3Rpb25EaWFsb2dQcm9wcz4ge1xuICAgIHB1YmxpYyBzdGF0aWMgZGVmYXVsdFByb3BzOiBQYXJ0aWFsPElRdWVzdGlvbkRpYWxvZ1Byb3BzPiA9IHtcbiAgICAgICAgdGl0bGU6IFwiXCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxuICAgICAgICBleHRyYUJ1dHRvbnM6IG51bGwsXG4gICAgICAgIGZvY3VzOiB0cnVlLFxuICAgICAgICBoYXNDYW5jZWxCdXR0b246IHRydWUsXG4gICAgICAgIGRhbmdlcjogZmFsc2UsXG4gICAgICAgIHF1aXRPbmx5OiBmYWxzZSxcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBvbk9rID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLm9uRmluaXNoZWQodHJ1ZSk7XG4gICAgfTtcblxuICAgIHByaXZhdGUgb25DYW5jZWwgPSAoKTogdm9pZCA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMub25GaW5pc2hlZChmYWxzZSk7XG4gICAgfTtcblxuICAgIHB1YmxpYyByZW5kZXIoKTogSlNYLkVsZW1lbnQge1xuICAgICAgICBsZXQgcHJpbWFyeUJ1dHRvbkNsYXNzID0gXCJcIjtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuZGFuZ2VyKSB7XG4gICAgICAgICAgICBwcmltYXJ5QnV0dG9uQ2xhc3MgPSBcImRhbmdlclwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QmFzZURpYWxvZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcIm14X1F1ZXN0aW9uRGlhbG9nXCIsIHRoaXMucHJvcHMuY2xhc3NOYW1lKX1cbiAgICAgICAgICAgICAgICBvbkZpbmlzaGVkPXt0aGlzLnByb3BzLm9uRmluaXNoZWR9XG4gICAgICAgICAgICAgICAgdGl0bGU9e3RoaXMucHJvcHMudGl0bGV9XG4gICAgICAgICAgICAgICAgY29udGVudElkPSdteF9EaWFsb2dfY29udGVudCdcbiAgICAgICAgICAgICAgICBoZWFkZXJJbWFnZT17dGhpcy5wcm9wcy5oZWFkZXJJbWFnZX1cbiAgICAgICAgICAgICAgICBoYXNDYW5jZWw9e3RoaXMucHJvcHMuaGFzQ2FuY2VsQnV0dG9ufVxuICAgICAgICAgICAgICAgIGZpeGVkV2lkdGg9e3RoaXMucHJvcHMuZml4ZWRXaWR0aH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0RpYWxvZ19jb250ZW50XCIgaWQ9J214X0RpYWxvZ19jb250ZW50Jz5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLmRlc2NyaXB0aW9uIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8RGlhbG9nQnV0dG9ucyBwcmltYXJ5QnV0dG9uPXt0aGlzLnByb3BzLmJ1dHRvbiB8fCBfdCgnT0snKX1cbiAgICAgICAgICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsYXNzPXtwcmltYXJ5QnV0dG9uQ2xhc3N9XG4gICAgICAgICAgICAgICAgICAgIHByaW1hcnlEaXNhYmxlZD17dGhpcy5wcm9wcy5idXR0b25EaXNhYmxlZH1cbiAgICAgICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uPXt0aGlzLnByb3BzLmNhbmNlbEJ1dHRvbn1cbiAgICAgICAgICAgICAgICAgICAgaGFzQ2FuY2VsPXt0aGlzLnByb3BzLmhhc0NhbmNlbEJ1dHRvbiAmJiAhdGhpcy5wcm9wcy5xdWl0T25seX1cbiAgICAgICAgICAgICAgICAgICAgb25QcmltYXJ5QnV0dG9uQ2xpY2s9e3RoaXMub25Pa31cbiAgICAgICAgICAgICAgICAgICAgZm9jdXM9e3RoaXMucHJvcHMuZm9jdXN9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2FuY2VsPXt0aGlzLm9uQ2FuY2VsfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLmV4dHJhQnV0dG9ucyB9XG4gICAgICAgICAgICAgICAgPC9EaWFsb2dCdXR0b25zPlxuICAgICAgICAgICAgPC9CYXNlRGlhbG9nPlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFpQkE7O0FBQ0E7O0FBRUE7O0FBRUE7O0FBQ0E7O0FBdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBMEJlLE1BQU1BLGNBQU4sU0FBNkJDLGNBQUEsQ0FBTUMsU0FBbkMsQ0FBbUU7RUFBQTtJQUFBO0lBQUEsNENBVy9ELE1BQVk7TUFDdkIsS0FBS0MsS0FBTCxDQUFXQyxVQUFYLENBQXNCLElBQXRCO0lBQ0gsQ0FiNkU7SUFBQSxnREFlM0QsTUFBWTtNQUMzQixLQUFLRCxLQUFMLENBQVdDLFVBQVgsQ0FBc0IsS0FBdEI7SUFDSCxDQWpCNkU7RUFBQTs7RUFtQnZFQyxNQUFNLEdBQWdCO0lBQ3pCLElBQUlDLGtCQUFrQixHQUFHLEVBQXpCOztJQUNBLElBQUksS0FBS0gsS0FBTCxDQUFXSSxNQUFmLEVBQXVCO01BQ25CRCxrQkFBa0IsR0FBRyxRQUFyQjtJQUNIOztJQUNELG9CQUNJLDZCQUFDLG1CQUFEO01BQ0ksU0FBUyxFQUFFLElBQUFFLG1CQUFBLEVBQVcsbUJBQVgsRUFBZ0MsS0FBS0wsS0FBTCxDQUFXTSxTQUEzQyxDQURmO01BRUksVUFBVSxFQUFFLEtBQUtOLEtBQUwsQ0FBV0MsVUFGM0I7TUFHSSxLQUFLLEVBQUUsS0FBS0QsS0FBTCxDQUFXTyxLQUh0QjtNQUlJLFNBQVMsRUFBQyxtQkFKZDtNQUtJLFdBQVcsRUFBRSxLQUFLUCxLQUFMLENBQVdRLFdBTDVCO01BTUksU0FBUyxFQUFFLEtBQUtSLEtBQUwsQ0FBV1MsZUFOMUI7TUFPSSxVQUFVLEVBQUUsS0FBS1QsS0FBTCxDQUFXVTtJQVAzQixnQkFTSTtNQUFLLFNBQVMsRUFBQyxtQkFBZjtNQUFtQyxFQUFFLEVBQUM7SUFBdEMsR0FDTSxLQUFLVixLQUFMLENBQVdXLFdBRGpCLENBVEosZUFZSSw2QkFBQyxzQkFBRDtNQUFlLGFBQWEsRUFBRSxLQUFLWCxLQUFMLENBQVdZLE1BQVgsSUFBcUIsSUFBQUMsbUJBQUEsRUFBRyxJQUFILENBQW5EO01BQ0ksa0JBQWtCLEVBQUVWLGtCQUR4QjtNQUVJLGVBQWUsRUFBRSxLQUFLSCxLQUFMLENBQVdjLGNBRmhDO01BR0ksWUFBWSxFQUFFLEtBQUtkLEtBQUwsQ0FBV2UsWUFIN0I7TUFJSSxTQUFTLEVBQUUsS0FBS2YsS0FBTCxDQUFXUyxlQUFYLElBQThCLENBQUMsS0FBS1QsS0FBTCxDQUFXZ0IsUUFKekQ7TUFLSSxvQkFBb0IsRUFBRSxLQUFLQyxJQUwvQjtNQU1JLEtBQUssRUFBRSxLQUFLakIsS0FBTCxDQUFXa0IsS0FOdEI7TUFPSSxRQUFRLEVBQUUsS0FBS0M7SUFQbkIsR0FTTSxLQUFLbkIsS0FBTCxDQUFXb0IsWUFUakIsQ0FaSixDQURKO0VBMEJIOztBQWxENkU7Ozs4QkFBN0R2QixjLGtCQUMyQztFQUN4RFUsS0FBSyxFQUFFLEVBRGlEO0VBRXhESSxXQUFXLEVBQUUsRUFGMkM7RUFHeERTLFlBQVksRUFBRSxJQUgwQztFQUl4REYsS0FBSyxFQUFFLElBSmlEO0VBS3hEVCxlQUFlLEVBQUUsSUFMdUM7RUFNeERMLE1BQU0sRUFBRSxLQU5nRDtFQU94RFksUUFBUSxFQUFFO0FBUDhDLEMifQ==