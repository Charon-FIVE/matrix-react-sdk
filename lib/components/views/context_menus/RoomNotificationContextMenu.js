"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RoomNotificationContextMenu = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _KeyboardShortcuts = require("../../../accessibility/KeyboardShortcuts");

var _useRoomNotificationState = require("../../../hooks/useRoomNotificationState");

var _KeyBindingsManager = require("../../../KeyBindingsManager");

var _languageHandler = require("../../../languageHandler");

var _RoomNotifs = require("../../../RoomNotifs");

var _IconizedContextMenu = _interopRequireWildcard(require("../context_menus/IconizedContextMenu"));

const _excluded = ["room", "onFinished"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const RoomNotificationContextMenu = _ref => {
  let {
    room,
    onFinished
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const [notificationState, setNotificationState] = (0, _useRoomNotificationState.useNotificationState)(room);

  const wrapHandler = function (handler) {
    let persistent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    return ev => {
      ev.preventDefault();
      ev.stopPropagation();
      handler(ev);
      const action = (0, _KeyBindingsManager.getKeyBindingsManager)().getAccessibilityAction(ev);

      if (!persistent || action === _KeyboardShortcuts.KeyBindingAction.Enter) {
        onFinished();
      }
    };
  };

  const defaultOption = /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuRadio, {
    label: (0, _languageHandler._t)("Use default"),
    active: notificationState === _RoomNotifs.RoomNotifState.AllMessages,
    iconClassName: "mx_RoomNotificationContextMenu_iconBell",
    onClick: wrapHandler(() => setNotificationState(_RoomNotifs.RoomNotifState.AllMessages))
  });

  const allMessagesOption = /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuRadio, {
    label: (0, _languageHandler._t)("All messages"),
    active: notificationState === _RoomNotifs.RoomNotifState.AllMessagesLoud,
    iconClassName: "mx_RoomNotificationContextMenu_iconBellDot",
    onClick: wrapHandler(() => setNotificationState(_RoomNotifs.RoomNotifState.AllMessagesLoud))
  });

  const mentionsOption = /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuRadio, {
    label: (0, _languageHandler._t)("Mentions & Keywords"),
    active: notificationState === _RoomNotifs.RoomNotifState.MentionsOnly,
    iconClassName: "mx_RoomNotificationContextMenu_iconBellMentions",
    onClick: wrapHandler(() => setNotificationState(_RoomNotifs.RoomNotifState.MentionsOnly))
  });

  const muteOption = /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuRadio, {
    label: (0, _languageHandler._t)("None"),
    active: notificationState === _RoomNotifs.RoomNotifState.Mute,
    iconClassName: "mx_RoomNotificationContextMenu_iconBellCrossed",
    onClick: wrapHandler(() => setNotificationState(_RoomNotifs.RoomNotifState.Mute))
  });

  return /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.default, (0, _extends2.default)({}, props, {
    onFinished: onFinished,
    className: "mx_RoomNotificationContextMenu",
    compact: true
  }), /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuOptionList, {
    first: true
  }, defaultOption, allMessagesOption, mentionsOption, muteOption));
};

exports.RoomNotificationContextMenu = RoomNotificationContextMenu;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,