"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _AccessibleTooltipButton = _interopRequireDefault(require("../elements/AccessibleTooltipButton"));

const _excluded = ["isHighlighted", "isUnread", "onClick", "name", "title"];

// TODO: replace this, the composer buttons and the right panel buttons with a unified representation
class HeaderButton extends _react.default.Component {
  render() {
    const _this$props = this.props,
          {
      isHighlighted,
      isUnread = false,
      onClick,
      name,
      title
    } = _this$props,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
    const classes = (0, _classnames.default)({
      mx_RightPanel_headerButton: true,
      mx_RightPanel_headerButton_highlight: isHighlighted,
      mx_RightPanel_headerButton_unread: isUnread,
      [`mx_RightPanel_${name}`]: true
    });
    return /*#__PURE__*/_react.default.createElement(_AccessibleTooltipButton.default, (0, _extends2.default)({}, props, {
      "aria-selected": isHighlighted,
      role: "tab",
      title: title,
      className: classes,
      onClick: onClick
    }));
  }

}

exports.default = HeaderButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIZWFkZXJCdXR0b24iLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbmRlciIsInByb3BzIiwiaXNIaWdobGlnaHRlZCIsImlzVW5yZWFkIiwib25DbGljayIsIm5hbWUiLCJ0aXRsZSIsImNsYXNzZXMiLCJjbGFzc05hbWVzIiwibXhfUmlnaHRQYW5lbF9oZWFkZXJCdXR0b24iLCJteF9SaWdodFBhbmVsX2hlYWRlckJ1dHRvbl9oaWdobGlnaHQiLCJteF9SaWdodFBhbmVsX2hlYWRlckJ1dHRvbl91bnJlYWQiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy92aWV3cy9yaWdodF9wYW5lbC9IZWFkZXJCdXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxNSwgMjAxNiBPcGVuTWFya2V0IEx0ZFxuQ29weXJpZ2h0IDIwMTcgVmVjdG9yIENyZWF0aW9ucyBMdGRcbkNvcHlyaWdodCAyMDE3IE5ldyBWZWN0b3IgTHRkXG5Db3B5cmlnaHQgMjAxOCBOZXcgVmVjdG9yIEx0ZFxuQ29weXJpZ2h0IDIwMTkgVGhlIE1hdHJpeC5vcmcgRm91bmRhdGlvbiBDLkkuQy5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbmltcG9ydCBBY2Nlc3NpYmxlVG9vbHRpcEJ1dHRvbiBmcm9tIFwiLi4vZWxlbWVudHMvQWNjZXNzaWJsZVRvb2x0aXBCdXR0b25cIjtcbmltcG9ydCB7IEJ1dHRvbkV2ZW50IH0gZnJvbSBcIi4uL2VsZW1lbnRzL0FjY2Vzc2libGVCdXR0b25cIjtcblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgLy8gV2hldGhlciB0aGlzIGJ1dHRvbiBpcyBoaWdobGlnaHRlZFxuICAgIGlzSGlnaGxpZ2h0ZWQ6IGJvb2xlYW47XG4gICAgaXNVbnJlYWQ/OiBib29sZWFuO1xuICAgIC8vIGNsaWNrIGhhbmRsZXJcbiAgICBvbkNsaWNrOiAoZXY6IEJ1dHRvbkV2ZW50KSA9PiB2b2lkO1xuXG4gICAgLy8gQnV0dG9uIG5hbWVcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgLy8gQnV0dG9uIHRpdGxlXG4gICAgdGl0bGU6IHN0cmluZztcbn1cblxuLy8gVE9ETzogcmVwbGFjZSB0aGlzLCB0aGUgY29tcG9zZXIgYnV0dG9ucyBhbmQgdGhlIHJpZ2h0IHBhbmVsIGJ1dHRvbnMgd2l0aCBhIHVuaWZpZWQgcmVwcmVzZW50YXRpb25cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRlckJ1dHRvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICBwdWJsaWMgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGlzSGlnaGxpZ2h0ZWQsIGlzVW5yZWFkID0gZmFsc2UsIG9uQ2xpY2ssIG5hbWUsIHRpdGxlLCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICBjb25zdCBjbGFzc2VzID0gY2xhc3NOYW1lcyh7XG4gICAgICAgICAgICBteF9SaWdodFBhbmVsX2hlYWRlckJ1dHRvbjogdHJ1ZSxcbiAgICAgICAgICAgIG14X1JpZ2h0UGFuZWxfaGVhZGVyQnV0dG9uX2hpZ2hsaWdodDogaXNIaWdobGlnaHRlZCxcbiAgICAgICAgICAgIG14X1JpZ2h0UGFuZWxfaGVhZGVyQnV0dG9uX3VucmVhZDogaXNVbnJlYWQsXG4gICAgICAgICAgICBbYG14X1JpZ2h0UGFuZWxfJHtuYW1lfWBdOiB0cnVlLFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gPEFjY2Vzc2libGVUb29sdGlwQnV0dG9uXG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgICAgICBhcmlhLXNlbGVjdGVkPXtpc0hpZ2hsaWdodGVkfVxuICAgICAgICAgICAgcm9sZT1cInRhYlwiXG4gICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXN9XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAvPjtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBRUE7Ozs7QUFnQkE7QUFDZSxNQUFNQSxZQUFOLFNBQTJCQyxjQUFBLENBQU1DLFNBQWpDLENBQW1EO0VBQ3ZEQyxNQUFNLEdBQUc7SUFDWixvQkFBNEUsS0FBS0MsS0FBakY7SUFBQSxNQUFNO01BQUVDLGFBQUY7TUFBaUJDLFFBQVEsR0FBRyxLQUE1QjtNQUFtQ0MsT0FBbkM7TUFBNENDLElBQTVDO01BQWtEQztJQUFsRCxDQUFOO0lBQUEsTUFBa0VMLEtBQWxFO0lBRUEsTUFBTU0sT0FBTyxHQUFHLElBQUFDLG1CQUFBLEVBQVc7TUFDdkJDLDBCQUEwQixFQUFFLElBREw7TUFFdkJDLG9DQUFvQyxFQUFFUixhQUZmO01BR3ZCUyxpQ0FBaUMsRUFBRVIsUUFIWjtNQUl2QixDQUFFLGlCQUFnQkUsSUFBSyxFQUF2QixHQUEyQjtJQUpKLENBQVgsQ0FBaEI7SUFPQSxvQkFBTyw2QkFBQyxnQ0FBRCw2QkFDQ0osS0FERDtNQUVILGlCQUFlQyxhQUZaO01BR0gsSUFBSSxFQUFDLEtBSEY7TUFJSCxLQUFLLEVBQUVJLEtBSko7TUFLSCxTQUFTLEVBQUVDLE9BTFI7TUFNSCxPQUFPLEVBQUVIO0lBTk4sR0FBUDtFQVFIOztBQW5CNkQifQ==