"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CHAT_EFFECTS = void 0;

var _languageHandler = require("../languageHandler");

/*
 Copyright 2020 Nurjin Jafar
 Copyright 2020 Nordeck IT + Consulting GmbH.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/**
 * This configuration defines room effects that can be triggered by custom message types and emojis
 */
const CHAT_EFFECTS = [{
  emojis: ['üéä', 'üéâ'],
  msgType: 'nic.custom.confetti',
  command: 'confetti',
  description: () => (0, _languageHandler._td)("Sends the given message with confetti"),
  fallbackMessage: () => (0, _languageHandler._t)("sends confetti") + " üéâ",
  options: {
    maxCount: 150,
    speed: 3,
    frameInterval: 15,
    alpha: 1.0,
    gradient: false
  }
}, {
  emojis: ['üéÜ'],
  msgType: 'nic.custom.fireworks',
  command: 'fireworks',
  description: () => (0, _languageHandler._td)("Sends the given message with fireworks"),
  fallbackMessage: () => (0, _languageHandler._t)("sends fireworks") + " üéÜ",
  options: {
    maxCount: 500,
    gravity: 0.05
  }
}, {
  emojis: ['üåßÔ∏è', '‚õàÔ∏è', 'üå¶Ô∏è'],
  msgType: 'io.element.effect.rainfall',
  command: 'rainfall',
  description: () => (0, _languageHandler._td)("Sends the given message with rainfall"),
  fallbackMessage: () => (0, _languageHandler._t)("sends rainfall") + " üåßÔ∏è",
  options: {
    maxCount: 600,
    speed: 10
  }
}, {
  emojis: ['‚ùÑ', 'üå®'],
  msgType: 'io.element.effect.snowfall',
  command: 'snowfall',
  description: () => (0, _languageHandler._td)("Sends the given message with snowfall"),
  fallbackMessage: () => (0, _languageHandler._t)("sends snowfall") + " ‚ùÑ",
  options: {
    maxCount: 200,
    gravity: 0.05,
    maxDrift: 5
  }
}, {
  emojis: ["üëæ", "üåå"],
  msgType: "io.element.effects.space_invaders",
  command: "spaceinvaders",
  description: () => (0, _languageHandler._td)("Sends the given message with a space themed effect"),
  fallbackMessage: () => (0, _languageHandler._t)("sends space invaders") + " üëæ",
  options: {
    maxCount: 50,
    gravity: 0.01
  }
}, {
  emojis: ["üíù"],
  msgType: "io.element.effect.hearts",
  command: "hearts",
  description: () => (0, _languageHandler._td)("Sends the given message with hearts"),
  fallbackMessage: () => (0, _languageHandler._t)("sends hearts") + " üíù",
  options: {
    maxCount: 120,
    gravity: 3.2
  }
}];
exports.CHAT_EFFECTS = CHAT_EFFECTS;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDSEFUX0VGRkVDVFMiLCJlbW9qaXMiLCJtc2dUeXBlIiwiY29tbWFuZCIsImRlc2NyaXB0aW9uIiwiX3RkIiwiZmFsbGJhY2tNZXNzYWdlIiwiX3QiLCJvcHRpb25zIiwibWF4Q291bnQiLCJzcGVlZCIsImZyYW1lSW50ZXJ2YWwiLCJhbHBoYSIsImdyYWRpZW50IiwiZ3Jhdml0eSIsIm1heERyaWZ0Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VmZmVjdHMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiBDb3B5cmlnaHQgMjAyMCBOdXJqaW4gSmFmYXJcbiBDb3B5cmlnaHQgMjAyMCBOb3JkZWNrIElUICsgQ29uc3VsdGluZyBHbWJILlxuXG4gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyBfdCwgX3RkIH0gZnJvbSBcIi4uL2xhbmd1YWdlSGFuZGxlclwiO1xuaW1wb3J0IHsgQ29uZmV0dGlPcHRpb25zIH0gZnJvbSBcIi4vY29uZmV0dGlcIjtcbmltcG9ydCB7IEVmZmVjdCB9IGZyb20gXCIuL2VmZmVjdFwiO1xuaW1wb3J0IHsgRmlyZXdvcmtzT3B0aW9ucyB9IGZyb20gXCIuL2ZpcmV3b3Jrc1wiO1xuaW1wb3J0IHsgUmFpbmZhbGxPcHRpb25zIH0gZnJvbSBcIi4vcmFpbmZhbGxcIjtcbmltcG9ydCB7IFNub3dmYWxsT3B0aW9ucyB9IGZyb20gXCIuL3Nub3dmYWxsXCI7XG5pbXBvcnQgeyBTcGFjZUludmFkZXJzT3B0aW9ucyB9IGZyb20gXCIuL3NwYWNlaW52YWRlcnNcIjtcbmltcG9ydCB7IEhlYXJ0T3B0aW9ucyB9IGZyb20gXCIuL2hlYXJ0c1wiO1xuXG4vKipcbiAqIFRoaXMgY29uZmlndXJhdGlvbiBkZWZpbmVzIHJvb20gZWZmZWN0cyB0aGF0IGNhbiBiZSB0cmlnZ2VyZWQgYnkgY3VzdG9tIG1lc3NhZ2UgdHlwZXMgYW5kIGVtb2ppc1xuICovXG5leHBvcnQgY29uc3QgQ0hBVF9FRkZFQ1RTOiBBcnJheTxFZmZlY3Q8eyBba2V5OiBzdHJpbmddOiBhbnkgfT4+ID0gW1xuICAgIHtcbiAgICAgICAgZW1vamlzOiBbJ/CfjoonLCAn8J+OiSddLFxuICAgICAgICBtc2dUeXBlOiAnbmljLmN1c3RvbS5jb25mZXR0aScsXG4gICAgICAgIGNvbW1hbmQ6ICdjb25mZXR0aScsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAoKSA9PiBfdGQoXCJTZW5kcyB0aGUgZ2l2ZW4gbWVzc2FnZSB3aXRoIGNvbmZldHRpXCIpLFxuICAgICAgICBmYWxsYmFja01lc3NhZ2U6ICgpID0+IF90KFwic2VuZHMgY29uZmV0dGlcIikgKyBcIiDwn46JXCIsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIG1heENvdW50OiAxNTAsXG4gICAgICAgICAgICBzcGVlZDogMyxcbiAgICAgICAgICAgIGZyYW1lSW50ZXJ2YWw6IDE1LFxuICAgICAgICAgICAgYWxwaGE6IDEuMCxcbiAgICAgICAgICAgIGdyYWRpZW50OiBmYWxzZSxcbiAgICAgICAgfSxcbiAgICB9IGFzIEVmZmVjdDxDb25mZXR0aU9wdGlvbnM+LFxuICAgIHtcbiAgICAgICAgZW1vamlzOiBbJ/CfjoYnXSxcbiAgICAgICAgbXNnVHlwZTogJ25pYy5jdXN0b20uZmlyZXdvcmtzJyxcbiAgICAgICAgY29tbWFuZDogJ2ZpcmV3b3JrcycsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAoKSA9PiBfdGQoXCJTZW5kcyB0aGUgZ2l2ZW4gbWVzc2FnZSB3aXRoIGZpcmV3b3Jrc1wiKSxcbiAgICAgICAgZmFsbGJhY2tNZXNzYWdlOiAoKSA9PiBfdChcInNlbmRzIGZpcmV3b3Jrc1wiKSArIFwiIPCfjoZcIixcbiAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgbWF4Q291bnQ6IDUwMCxcbiAgICAgICAgICAgIGdyYXZpdHk6IDAuMDUsXG4gICAgICAgIH0sXG4gICAgfSBhcyBFZmZlY3Q8RmlyZXdvcmtzT3B0aW9ucz4sXG4gICAge1xuICAgICAgICBlbW9qaXM6IFsn8J+Mp++4jycsICfim4jvuI8nLCAn8J+Mpu+4jyddLFxuICAgICAgICBtc2dUeXBlOiAnaW8uZWxlbWVudC5lZmZlY3QucmFpbmZhbGwnLFxuICAgICAgICBjb21tYW5kOiAncmFpbmZhbGwnLFxuICAgICAgICBkZXNjcmlwdGlvbjogKCkgPT4gX3RkKFwiU2VuZHMgdGhlIGdpdmVuIG1lc3NhZ2Ugd2l0aCByYWluZmFsbFwiKSxcbiAgICAgICAgZmFsbGJhY2tNZXNzYWdlOiAoKSA9PiBfdChcInNlbmRzIHJhaW5mYWxsXCIpICsgXCIg8J+Mp++4j1wiLFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICBtYXhDb3VudDogNjAwLFxuICAgICAgICAgICAgc3BlZWQ6IDEwLFxuICAgICAgICB9LFxuICAgIH0gYXMgRWZmZWN0PFJhaW5mYWxsT3B0aW9ucz4sXG4gICAge1xuICAgICAgICBlbW9qaXM6IFsn4p2EJywgJ/CfjKgnXSxcbiAgICAgICAgbXNnVHlwZTogJ2lvLmVsZW1lbnQuZWZmZWN0LnNub3dmYWxsJyxcbiAgICAgICAgY29tbWFuZDogJ3Nub3dmYWxsJyxcbiAgICAgICAgZGVzY3JpcHRpb246ICgpID0+IF90ZChcIlNlbmRzIHRoZSBnaXZlbiBtZXNzYWdlIHdpdGggc25vd2ZhbGxcIiksXG4gICAgICAgIGZhbGxiYWNrTWVzc2FnZTogKCkgPT4gX3QoXCJzZW5kcyBzbm93ZmFsbFwiKSArIFwiIOKdhFwiLFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICBtYXhDb3VudDogMjAwLFxuICAgICAgICAgICAgZ3Jhdml0eTogMC4wNSxcbiAgICAgICAgICAgIG1heERyaWZ0OiA1LFxuICAgICAgICB9LFxuICAgIH0gYXMgRWZmZWN0PFNub3dmYWxsT3B0aW9ucz4sXG4gICAge1xuICAgICAgICBlbW9qaXM6IFtcIvCfkb5cIiwgXCLwn4yMXCJdLFxuICAgICAgICBtc2dUeXBlOiBcImlvLmVsZW1lbnQuZWZmZWN0cy5zcGFjZV9pbnZhZGVyc1wiLFxuICAgICAgICBjb21tYW5kOiBcInNwYWNlaW52YWRlcnNcIixcbiAgICAgICAgZGVzY3JpcHRpb246ICgpID0+IF90ZChcIlNlbmRzIHRoZSBnaXZlbiBtZXNzYWdlIHdpdGggYSBzcGFjZSB0aGVtZWQgZWZmZWN0XCIpLFxuICAgICAgICBmYWxsYmFja01lc3NhZ2U6ICgpID0+IF90KFwic2VuZHMgc3BhY2UgaW52YWRlcnNcIikgKyBcIiDwn5G+XCIsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIG1heENvdW50OiA1MCxcbiAgICAgICAgICAgIGdyYXZpdHk6IDAuMDEsXG4gICAgICAgIH0sXG4gICAgfSBhcyBFZmZlY3Q8U3BhY2VJbnZhZGVyc09wdGlvbnM+LFxuICAgIHtcbiAgICAgICAgZW1vamlzOiBbXCLwn5KdXCJdLFxuICAgICAgICBtc2dUeXBlOiBcImlvLmVsZW1lbnQuZWZmZWN0LmhlYXJ0c1wiLFxuICAgICAgICBjb21tYW5kOiBcImhlYXJ0c1wiLFxuICAgICAgICBkZXNjcmlwdGlvbjogKCkgPT4gX3RkKFwiU2VuZHMgdGhlIGdpdmVuIG1lc3NhZ2Ugd2l0aCBoZWFydHNcIiksXG4gICAgICAgIGZhbGxiYWNrTWVzc2FnZTogKCkgPT4gX3QoXCJzZW5kcyBoZWFydHNcIikgKyBcIiDwn5KdXCIsXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIG1heENvdW50OiAxMjAsXG4gICAgICAgICAgICBncmF2aXR5OiAzLjIsXG4gICAgICAgIH0sXG4gICAgfSBhcyBFZmZlY3Q8SGVhcnRPcHRpb25zPixcbl07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFnQkE7O0FBaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVVBO0FBQ0E7QUFDQTtBQUNPLE1BQU1BLFlBQW1ELEdBQUcsQ0FDL0Q7RUFDSUMsTUFBTSxFQUFFLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FEWjtFQUVJQyxPQUFPLEVBQUUscUJBRmI7RUFHSUMsT0FBTyxFQUFFLFVBSGI7RUFJSUMsV0FBVyxFQUFFLE1BQU0sSUFBQUMsb0JBQUEsRUFBSSx1Q0FBSixDQUp2QjtFQUtJQyxlQUFlLEVBQUUsTUFBTSxJQUFBQyxtQkFBQSxFQUFHLGdCQUFILElBQXVCLEtBTGxEO0VBTUlDLE9BQU8sRUFBRTtJQUNMQyxRQUFRLEVBQUUsR0FETDtJQUVMQyxLQUFLLEVBQUUsQ0FGRjtJQUdMQyxhQUFhLEVBQUUsRUFIVjtJQUlMQyxLQUFLLEVBQUUsR0FKRjtJQUtMQyxRQUFRLEVBQUU7RUFMTDtBQU5iLENBRCtELEVBZS9EO0VBQ0laLE1BQU0sRUFBRSxDQUFDLElBQUQsQ0FEWjtFQUVJQyxPQUFPLEVBQUUsc0JBRmI7RUFHSUMsT0FBTyxFQUFFLFdBSGI7RUFJSUMsV0FBVyxFQUFFLE1BQU0sSUFBQUMsb0JBQUEsRUFBSSx3Q0FBSixDQUp2QjtFQUtJQyxlQUFlLEVBQUUsTUFBTSxJQUFBQyxtQkFBQSxFQUFHLGlCQUFILElBQXdCLEtBTG5EO0VBTUlDLE9BQU8sRUFBRTtJQUNMQyxRQUFRLEVBQUUsR0FETDtJQUVMSyxPQUFPLEVBQUU7RUFGSjtBQU5iLENBZitELEVBMEIvRDtFQUNJYixNQUFNLEVBQUUsQ0FBQyxLQUFELEVBQVEsSUFBUixFQUFjLEtBQWQsQ0FEWjtFQUVJQyxPQUFPLEVBQUUsNEJBRmI7RUFHSUMsT0FBTyxFQUFFLFVBSGI7RUFJSUMsV0FBVyxFQUFFLE1BQU0sSUFBQUMsb0JBQUEsRUFBSSx1Q0FBSixDQUp2QjtFQUtJQyxlQUFlLEVBQUUsTUFBTSxJQUFBQyxtQkFBQSxFQUFHLGdCQUFILElBQXVCLE1BTGxEO0VBTUlDLE9BQU8sRUFBRTtJQUNMQyxRQUFRLEVBQUUsR0FETDtJQUVMQyxLQUFLLEVBQUU7RUFGRjtBQU5iLENBMUIrRCxFQXFDL0Q7RUFDSVQsTUFBTSxFQUFFLENBQUMsR0FBRCxFQUFNLElBQU4sQ0FEWjtFQUVJQyxPQUFPLEVBQUUsNEJBRmI7RUFHSUMsT0FBTyxFQUFFLFVBSGI7RUFJSUMsV0FBVyxFQUFFLE1BQU0sSUFBQUMsb0JBQUEsRUFBSSx1Q0FBSixDQUp2QjtFQUtJQyxlQUFlLEVBQUUsTUFBTSxJQUFBQyxtQkFBQSxFQUFHLGdCQUFILElBQXVCLElBTGxEO0VBTUlDLE9BQU8sRUFBRTtJQUNMQyxRQUFRLEVBQUUsR0FETDtJQUVMSyxPQUFPLEVBQUUsSUFGSjtJQUdMQyxRQUFRLEVBQUU7RUFITDtBQU5iLENBckMrRCxFQWlEL0Q7RUFDSWQsTUFBTSxFQUFFLENBQUMsSUFBRCxFQUFPLElBQVAsQ0FEWjtFQUVJQyxPQUFPLEVBQUUsbUNBRmI7RUFHSUMsT0FBTyxFQUFFLGVBSGI7RUFJSUMsV0FBVyxFQUFFLE1BQU0sSUFBQUMsb0JBQUEsRUFBSSxvREFBSixDQUp2QjtFQUtJQyxlQUFlLEVBQUUsTUFBTSxJQUFBQyxtQkFBQSxFQUFHLHNCQUFILElBQTZCLEtBTHhEO0VBTUlDLE9BQU8sRUFBRTtJQUNMQyxRQUFRLEVBQUUsRUFETDtJQUVMSyxPQUFPLEVBQUU7RUFGSjtBQU5iLENBakQrRCxFQTREL0Q7RUFDSWIsTUFBTSxFQUFFLENBQUMsSUFBRCxDQURaO0VBRUlDLE9BQU8sRUFBRSwwQkFGYjtFQUdJQyxPQUFPLEVBQUUsUUFIYjtFQUlJQyxXQUFXLEVBQUUsTUFBTSxJQUFBQyxvQkFBQSxFQUFJLHFDQUFKLENBSnZCO0VBS0lDLGVBQWUsRUFBRSxNQUFNLElBQUFDLG1CQUFBLEVBQUcsY0FBSCxJQUFxQixLQUxoRDtFQU1JQyxPQUFPLEVBQUU7SUFDTEMsUUFBUSxFQUFFLEdBREw7SUFFTEssT0FBTyxFQUFFO0VBRko7QUFOYixDQTVEK0QsQ0FBNUQifQ==