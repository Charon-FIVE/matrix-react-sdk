"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.roomContextDetails = roomContextDetails;

var _SpaceStore = _interopRequireDefault(require("../stores/spaces/SpaceStore"));

var _languageHandler = require("../languageHandler");

var _DMRoomMap = _interopRequireDefault(require("./DMRoomMap"));

/*
Copyright 2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
function roomContextDetails(room) {
  const dmPartner = _DMRoomMap.default.shared().getUserIdForRoomId(room.roomId); // if we’ve got more than 2 users, don’t treat it like a regular DM


  const isGroupDm = room.getMembers().length > 2;

  if (!room.isSpaceRoom() && dmPartner && !isGroupDm) {
    return {
      details: dmPartner
    };
  }

  const [parent, secondParent, ...otherParents] = _SpaceStore.default.instance.getKnownParents(room.roomId);

  if (secondParent && !otherParents?.length) {
    // exactly 2 edge case for improved i18n
    const space1Name = room.client.getRoom(parent)?.name;
    const space2Name = room.client.getRoom(secondParent)?.name;
    return {
      details: (0, _languageHandler._t)("%(space1Name)s and %(space2Name)s", {
        space1Name,
        space2Name
      }),
      ariaLabel: (0, _languageHandler._t)("In spaces %(space1Name)s and %(space2Name)s.", {
        space1Name,
        space2Name
      })
    };
  } else if (parent) {
    const spaceName = room.client.getRoom(parent)?.name;
    const count = otherParents.length;
    return {
      details: (0, _languageHandler._t)("%(spaceName)s and %(count)s others", {
        spaceName,
        count
      }),
      ariaLabel: (0, _languageHandler._t)("In %(spaceName)s and %(count)s other spaces.", {
        spaceName,
        count
      })
    };
  }

  return {
    details: room.getCanonicalAlias()
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyb29tQ29udGV4dERldGFpbHMiLCJyb29tIiwiZG1QYXJ0bmVyIiwiRE1Sb29tTWFwIiwic2hhcmVkIiwiZ2V0VXNlcklkRm9yUm9vbUlkIiwicm9vbUlkIiwiaXNHcm91cERtIiwiZ2V0TWVtYmVycyIsImxlbmd0aCIsImlzU3BhY2VSb29tIiwiZGV0YWlscyIsInBhcmVudCIsInNlY29uZFBhcmVudCIsIm90aGVyUGFyZW50cyIsIlNwYWNlU3RvcmUiLCJpbnN0YW5jZSIsImdldEtub3duUGFyZW50cyIsInNwYWNlMU5hbWUiLCJjbGllbnQiLCJnZXRSb29tIiwibmFtZSIsInNwYWNlMk5hbWUiLCJfdCIsImFyaWFMYWJlbCIsInNwYWNlTmFtZSIsImNvdW50IiwiZ2V0Q2Fub25pY2FsQWxpYXMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvaTE4bi1oZWxwZXJzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMiBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCB7IFJvb20gfSBmcm9tIFwibWF0cml4LWpzLXNkay9zcmMvbW9kZWxzL3Jvb21cIjtcblxuaW1wb3J0IFNwYWNlU3RvcmUgZnJvbSBcIi4uL3N0b3Jlcy9zcGFjZXMvU3BhY2VTdG9yZVwiO1xuaW1wb3J0IHsgX3QgfSBmcm9tIFwiLi4vbGFuZ3VhZ2VIYW5kbGVyXCI7XG5pbXBvcnQgRE1Sb29tTWFwIGZyb20gXCIuL0RNUm9vbU1hcFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJvb21Db250ZXh0RGV0YWlscyB7XG4gICAgZGV0YWlsczogc3RyaW5nO1xuICAgIGFyaWFMYWJlbD86IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJvb21Db250ZXh0RGV0YWlscyhyb29tOiBSb29tKTogUm9vbUNvbnRleHREZXRhaWxzIHwgbnVsbCB7XG4gICAgY29uc3QgZG1QYXJ0bmVyID0gRE1Sb29tTWFwLnNoYXJlZCgpLmdldFVzZXJJZEZvclJvb21JZChyb29tLnJvb21JZCk7XG4gICAgLy8gaWYgd2XigJl2ZSBnb3QgbW9yZSB0aGFuIDIgdXNlcnMsIGRvbuKAmXQgdHJlYXQgaXQgbGlrZSBhIHJlZ3VsYXIgRE1cbiAgICBjb25zdCBpc0dyb3VwRG0gPSByb29tLmdldE1lbWJlcnMoKS5sZW5ndGggPiAyO1xuICAgIGlmICghcm9vbS5pc1NwYWNlUm9vbSgpICYmIGRtUGFydG5lciAmJiAhaXNHcm91cERtKSB7XG4gICAgICAgIHJldHVybiB7IGRldGFpbHM6IGRtUGFydG5lciB9O1xuICAgIH1cblxuICAgIGNvbnN0IFtwYXJlbnQsIHNlY29uZFBhcmVudCwgLi4ub3RoZXJQYXJlbnRzXSA9IFNwYWNlU3RvcmUuaW5zdGFuY2UuZ2V0S25vd25QYXJlbnRzKHJvb20ucm9vbUlkKTtcbiAgICBpZiAoc2Vjb25kUGFyZW50ICYmICFvdGhlclBhcmVudHM/Lmxlbmd0aCkge1xuICAgICAgICAvLyBleGFjdGx5IDIgZWRnZSBjYXNlIGZvciBpbXByb3ZlZCBpMThuXG4gICAgICAgIGNvbnN0IHNwYWNlMU5hbWUgPSByb29tLmNsaWVudC5nZXRSb29tKHBhcmVudCk/Lm5hbWU7XG4gICAgICAgIGNvbnN0IHNwYWNlMk5hbWUgPSByb29tLmNsaWVudC5nZXRSb29tKHNlY29uZFBhcmVudCk/Lm5hbWU7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkZXRhaWxzOiBfdChcIiUoc3BhY2UxTmFtZSlzIGFuZCAlKHNwYWNlMk5hbWUpc1wiLCB7IHNwYWNlMU5hbWUsIHNwYWNlMk5hbWUgfSksXG4gICAgICAgICAgICBhcmlhTGFiZWw6IF90KFwiSW4gc3BhY2VzICUoc3BhY2UxTmFtZSlzIGFuZCAlKHNwYWNlMk5hbWUpcy5cIiwgeyBzcGFjZTFOYW1lLCBzcGFjZTJOYW1lIH0pLFxuICAgICAgICB9O1xuICAgIH0gZWxzZSBpZiAocGFyZW50KSB7XG4gICAgICAgIGNvbnN0IHNwYWNlTmFtZSA9IHJvb20uY2xpZW50LmdldFJvb20ocGFyZW50KT8ubmFtZTtcbiAgICAgICAgY29uc3QgY291bnQgPSBvdGhlclBhcmVudHMubGVuZ3RoO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGV0YWlsczogX3QoXCIlKHNwYWNlTmFtZSlzIGFuZCAlKGNvdW50KXMgb3RoZXJzXCIsIHsgc3BhY2VOYW1lLCBjb3VudCB9KSxcbiAgICAgICAgICAgIGFyaWFMYWJlbDogX3QoXCJJbiAlKHNwYWNlTmFtZSlzIGFuZCAlKGNvdW50KXMgb3RoZXIgc3BhY2VzLlwiLCB7IHNwYWNlTmFtZSwgY291bnQgfSksXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgZGV0YWlsczogcm9vbS5nZXRDYW5vbmljYWxBbGlhcygpIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQWtCQTs7QUFDQTs7QUFDQTs7QUFwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBYU8sU0FBU0Esa0JBQVQsQ0FBNEJDLElBQTVCLEVBQW1FO0VBQ3RFLE1BQU1DLFNBQVMsR0FBR0Msa0JBQUEsQ0FBVUMsTUFBVixHQUFtQkMsa0JBQW5CLENBQXNDSixJQUFJLENBQUNLLE1BQTNDLENBQWxCLENBRHNFLENBRXRFOzs7RUFDQSxNQUFNQyxTQUFTLEdBQUdOLElBQUksQ0FBQ08sVUFBTCxHQUFrQkMsTUFBbEIsR0FBMkIsQ0FBN0M7O0VBQ0EsSUFBSSxDQUFDUixJQUFJLENBQUNTLFdBQUwsRUFBRCxJQUF1QlIsU0FBdkIsSUFBb0MsQ0FBQ0ssU0FBekMsRUFBb0Q7SUFDaEQsT0FBTztNQUFFSSxPQUFPLEVBQUVUO0lBQVgsQ0FBUDtFQUNIOztFQUVELE1BQU0sQ0FBQ1UsTUFBRCxFQUFTQyxZQUFULEVBQXVCLEdBQUdDLFlBQTFCLElBQTBDQyxtQkFBQSxDQUFXQyxRQUFYLENBQW9CQyxlQUFwQixDQUFvQ2hCLElBQUksQ0FBQ0ssTUFBekMsQ0FBaEQ7O0VBQ0EsSUFBSU8sWUFBWSxJQUFJLENBQUNDLFlBQVksRUFBRUwsTUFBbkMsRUFBMkM7SUFDdkM7SUFDQSxNQUFNUyxVQUFVLEdBQUdqQixJQUFJLENBQUNrQixNQUFMLENBQVlDLE9BQVosQ0FBb0JSLE1BQXBCLEdBQTZCUyxJQUFoRDtJQUNBLE1BQU1DLFVBQVUsR0FBR3JCLElBQUksQ0FBQ2tCLE1BQUwsQ0FBWUMsT0FBWixDQUFvQlAsWUFBcEIsR0FBbUNRLElBQXREO0lBQ0EsT0FBTztNQUNIVixPQUFPLEVBQUUsSUFBQVksbUJBQUEsRUFBRyxtQ0FBSCxFQUF3QztRQUFFTCxVQUFGO1FBQWNJO01BQWQsQ0FBeEMsQ0FETjtNQUVIRSxTQUFTLEVBQUUsSUFBQUQsbUJBQUEsRUFBRyw4Q0FBSCxFQUFtRDtRQUFFTCxVQUFGO1FBQWNJO01BQWQsQ0FBbkQ7SUFGUixDQUFQO0VBSUgsQ0FSRCxNQVFPLElBQUlWLE1BQUosRUFBWTtJQUNmLE1BQU1hLFNBQVMsR0FBR3hCLElBQUksQ0FBQ2tCLE1BQUwsQ0FBWUMsT0FBWixDQUFvQlIsTUFBcEIsR0FBNkJTLElBQS9DO0lBQ0EsTUFBTUssS0FBSyxHQUFHWixZQUFZLENBQUNMLE1BQTNCO0lBQ0EsT0FBTztNQUNIRSxPQUFPLEVBQUUsSUFBQVksbUJBQUEsRUFBRyxvQ0FBSCxFQUF5QztRQUFFRSxTQUFGO1FBQWFDO01BQWIsQ0FBekMsQ0FETjtNQUVIRixTQUFTLEVBQUUsSUFBQUQsbUJBQUEsRUFBRyw4Q0FBSCxFQUFtRDtRQUFFRSxTQUFGO1FBQWFDO01BQWIsQ0FBbkQ7SUFGUixDQUFQO0VBSUg7O0VBRUQsT0FBTztJQUFFZixPQUFPLEVBQUVWLElBQUksQ0FBQzBCLGlCQUFMO0VBQVgsQ0FBUDtBQUNIIn0=