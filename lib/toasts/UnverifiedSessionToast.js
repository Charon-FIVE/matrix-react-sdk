"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showToast = exports.hideToast = void 0;

var _languageHandler = require("../languageHandler");

var _dispatcher = _interopRequireDefault(require("../dispatcher/dispatcher"));

var _MatrixClientPeg = require("../MatrixClientPeg");

var _DeviceListener = _interopRequireDefault(require("../DeviceListener"));

var _ToastStore = _interopRequireDefault(require("../stores/ToastStore"));

var _GenericToast = _interopRequireDefault(require("../components/views/toasts/GenericToast"));

var _actions = require("../dispatcher/actions");

var _UserTab = require("../components/views/dialogs/UserTab");

/*
Copyright 2020 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
function toastKey(deviceId) {
  return "unverified_session_" + deviceId;
}

const showToast = async deviceId => {
  const cli = _MatrixClientPeg.MatrixClientPeg.get();

  const onAccept = () => {
    _DeviceListener.default.sharedInstance().dismissUnverifiedSessions([deviceId]);

    _dispatcher.default.dispatch({
      action: _actions.Action.ViewUserSettings,
      initialTabId: _UserTab.UserTab.Security
    });
  };

  const onReject = () => {
    _DeviceListener.default.sharedInstance().dismissUnverifiedSessions([deviceId]);
  };

  const device = await cli.getDevice(deviceId);

  _ToastStore.default.sharedInstance().addOrReplaceToast({
    key: toastKey(deviceId),
    title: (0, _languageHandler._t)("New login. Was this you?"),
    icon: "verification_warning",
    props: {
      description: device.display_name,
      detail: (0, _languageHandler._t)("%(deviceId)s from %(ip)s", {
        deviceId,
        ip: device.last_seen_ip
      }),
      acceptLabel: (0, _languageHandler._t)("Check your devices"),
      onAccept,
      rejectLabel: (0, _languageHandler._t)("Later"),
      onReject
    },
    component: _GenericToast.default,
    priority: 80
  });
};

exports.showToast = showToast;

const hideToast = deviceId => {
  _ToastStore.default.sharedInstance().dismissToast(toastKey(deviceId));
};

exports.hideToast = hideToast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0b2FzdEtleSIsImRldmljZUlkIiwic2hvd1RvYXN0IiwiY2xpIiwiTWF0cml4Q2xpZW50UGVnIiwiZ2V0Iiwib25BY2NlcHQiLCJEZXZpY2VMaXN0ZW5lciIsInNoYXJlZEluc3RhbmNlIiwiZGlzbWlzc1VudmVyaWZpZWRTZXNzaW9ucyIsImRpcyIsImRpc3BhdGNoIiwiYWN0aW9uIiwiQWN0aW9uIiwiVmlld1VzZXJTZXR0aW5ncyIsImluaXRpYWxUYWJJZCIsIlVzZXJUYWIiLCJTZWN1cml0eSIsIm9uUmVqZWN0IiwiZGV2aWNlIiwiZ2V0RGV2aWNlIiwiVG9hc3RTdG9yZSIsImFkZE9yUmVwbGFjZVRvYXN0Iiwia2V5IiwidGl0bGUiLCJfdCIsImljb24iLCJwcm9wcyIsImRlc2NyaXB0aW9uIiwiZGlzcGxheV9uYW1lIiwiZGV0YWlsIiwiaXAiLCJsYXN0X3NlZW5faXAiLCJhY2NlcHRMYWJlbCIsInJlamVjdExhYmVsIiwiY29tcG9uZW50IiwiR2VuZXJpY1RvYXN0IiwicHJpb3JpdHkiLCJoaWRlVG9hc3QiLCJkaXNtaXNzVG9hc3QiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdG9hc3RzL1VudmVyaWZpZWRTZXNzaW9uVG9hc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIwIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgeyBfdCB9IGZyb20gJy4uL2xhbmd1YWdlSGFuZGxlcic7XG5pbXBvcnQgZGlzIGZyb20gXCIuLi9kaXNwYXRjaGVyL2Rpc3BhdGNoZXJcIjtcbmltcG9ydCB7IE1hdHJpeENsaWVudFBlZyB9IGZyb20gJy4uL01hdHJpeENsaWVudFBlZyc7XG5pbXBvcnQgRGV2aWNlTGlzdGVuZXIgZnJvbSAnLi4vRGV2aWNlTGlzdGVuZXInO1xuaW1wb3J0IFRvYXN0U3RvcmUgZnJvbSBcIi4uL3N0b3Jlcy9Ub2FzdFN0b3JlXCI7XG5pbXBvcnQgR2VuZXJpY1RvYXN0IGZyb20gXCIuLi9jb21wb25lbnRzL3ZpZXdzL3RvYXN0cy9HZW5lcmljVG9hc3RcIjtcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCIuLi9kaXNwYXRjaGVyL2FjdGlvbnNcIjtcbmltcG9ydCB7IFVzZXJUYWIgfSBmcm9tIFwiLi4vY29tcG9uZW50cy92aWV3cy9kaWFsb2dzL1VzZXJUYWJcIjtcblxuZnVuY3Rpb24gdG9hc3RLZXkoZGV2aWNlSWQ6IHN0cmluZykge1xuICAgIHJldHVybiBcInVudmVyaWZpZWRfc2Vzc2lvbl9cIiArIGRldmljZUlkO1xufVxuXG5leHBvcnQgY29uc3Qgc2hvd1RvYXN0ID0gYXN5bmMgKGRldmljZUlkOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBjbGkgPSBNYXRyaXhDbGllbnRQZWcuZ2V0KCk7XG5cbiAgICBjb25zdCBvbkFjY2VwdCA9ICgpID0+IHtcbiAgICAgICAgRGV2aWNlTGlzdGVuZXIuc2hhcmVkSW5zdGFuY2UoKS5kaXNtaXNzVW52ZXJpZmllZFNlc3Npb25zKFtkZXZpY2VJZF0pO1xuICAgICAgICBkaXMuZGlzcGF0Y2goe1xuICAgICAgICAgICAgYWN0aW9uOiBBY3Rpb24uVmlld1VzZXJTZXR0aW5ncyxcbiAgICAgICAgICAgIGluaXRpYWxUYWJJZDogVXNlclRhYi5TZWN1cml0eSxcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNvbnN0IG9uUmVqZWN0ID0gKCkgPT4ge1xuICAgICAgICBEZXZpY2VMaXN0ZW5lci5zaGFyZWRJbnN0YW5jZSgpLmRpc21pc3NVbnZlcmlmaWVkU2Vzc2lvbnMoW2RldmljZUlkXSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGRldmljZSA9IGF3YWl0IGNsaS5nZXREZXZpY2UoZGV2aWNlSWQpO1xuXG4gICAgVG9hc3RTdG9yZS5zaGFyZWRJbnN0YW5jZSgpLmFkZE9yUmVwbGFjZVRvYXN0KHtcbiAgICAgICAga2V5OiB0b2FzdEtleShkZXZpY2VJZCksXG4gICAgICAgIHRpdGxlOiBfdChcIk5ldyBsb2dpbi4gV2FzIHRoaXMgeW91P1wiKSxcbiAgICAgICAgaWNvbjogXCJ2ZXJpZmljYXRpb25fd2FybmluZ1wiLFxuICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgZGVzY3JpcHRpb246IGRldmljZS5kaXNwbGF5X25hbWUsXG4gICAgICAgICAgICBkZXRhaWw6IF90KFwiJShkZXZpY2VJZClzIGZyb20gJShpcClzXCIsIHtcbiAgICAgICAgICAgICAgICBkZXZpY2VJZCxcbiAgICAgICAgICAgICAgICBpcDogZGV2aWNlLmxhc3Rfc2Vlbl9pcCxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWNjZXB0TGFiZWw6IF90KFwiQ2hlY2sgeW91ciBkZXZpY2VzXCIpLFxuICAgICAgICAgICAgb25BY2NlcHQsXG4gICAgICAgICAgICByZWplY3RMYWJlbDogX3QoXCJMYXRlclwiKSxcbiAgICAgICAgICAgIG9uUmVqZWN0LFxuICAgICAgICB9LFxuICAgICAgICBjb21wb25lbnQ6IEdlbmVyaWNUb2FzdCxcbiAgICAgICAgcHJpb3JpdHk6IDgwLFxuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGhpZGVUb2FzdCA9IChkZXZpY2VJZDogc3RyaW5nKSA9PiB7XG4gICAgVG9hc3RTdG9yZS5zaGFyZWRJbnN0YW5jZSgpLmRpc21pc3NUb2FzdCh0b2FzdEtleShkZXZpY2VJZCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQXZCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFXQSxTQUFTQSxRQUFULENBQWtCQyxRQUFsQixFQUFvQztFQUNoQyxPQUFPLHdCQUF3QkEsUUFBL0I7QUFDSDs7QUFFTSxNQUFNQyxTQUFTLEdBQUcsTUFBT0QsUUFBUCxJQUE0QjtFQUNqRCxNQUFNRSxHQUFHLEdBQUdDLGdDQUFBLENBQWdCQyxHQUFoQixFQUFaOztFQUVBLE1BQU1DLFFBQVEsR0FBRyxNQUFNO0lBQ25CQyx1QkFBQSxDQUFlQyxjQUFmLEdBQWdDQyx5QkFBaEMsQ0FBMEQsQ0FBQ1IsUUFBRCxDQUExRDs7SUFDQVMsbUJBQUEsQ0FBSUMsUUFBSixDQUFhO01BQ1RDLE1BQU0sRUFBRUMsZUFBQSxDQUFPQyxnQkFETjtNQUVUQyxZQUFZLEVBQUVDLGdCQUFBLENBQVFDO0lBRmIsQ0FBYjtFQUlILENBTkQ7O0VBUUEsTUFBTUMsUUFBUSxHQUFHLE1BQU07SUFDbkJYLHVCQUFBLENBQWVDLGNBQWYsR0FBZ0NDLHlCQUFoQyxDQUEwRCxDQUFDUixRQUFELENBQTFEO0VBQ0gsQ0FGRDs7RUFJQSxNQUFNa0IsTUFBTSxHQUFHLE1BQU1oQixHQUFHLENBQUNpQixTQUFKLENBQWNuQixRQUFkLENBQXJCOztFQUVBb0IsbUJBQUEsQ0FBV2IsY0FBWCxHQUE0QmMsaUJBQTVCLENBQThDO0lBQzFDQyxHQUFHLEVBQUV2QixRQUFRLENBQUNDLFFBQUQsQ0FENkI7SUFFMUN1QixLQUFLLEVBQUUsSUFBQUMsbUJBQUEsRUFBRywwQkFBSCxDQUZtQztJQUcxQ0MsSUFBSSxFQUFFLHNCQUhvQztJQUkxQ0MsS0FBSyxFQUFFO01BQ0hDLFdBQVcsRUFBRVQsTUFBTSxDQUFDVSxZQURqQjtNQUVIQyxNQUFNLEVBQUUsSUFBQUwsbUJBQUEsRUFBRywwQkFBSCxFQUErQjtRQUNuQ3hCLFFBRG1DO1FBRW5DOEIsRUFBRSxFQUFFWixNQUFNLENBQUNhO01BRndCLENBQS9CLENBRkw7TUFNSEMsV0FBVyxFQUFFLElBQUFSLG1CQUFBLEVBQUcsb0JBQUgsQ0FOVjtNQU9IbkIsUUFQRztNQVFINEIsV0FBVyxFQUFFLElBQUFULG1CQUFBLEVBQUcsT0FBSCxDQVJWO01BU0hQO0lBVEcsQ0FKbUM7SUFlMUNpQixTQUFTLEVBQUVDLHFCQWYrQjtJQWdCMUNDLFFBQVEsRUFBRTtFQWhCZ0MsQ0FBOUM7QUFrQkgsQ0FuQ007Ozs7QUFxQ0EsTUFBTUMsU0FBUyxHQUFJckMsUUFBRCxJQUFzQjtFQUMzQ29CLG1CQUFBLENBQVdiLGNBQVgsR0FBNEIrQixZQUE1QixDQUF5Q3ZDLFFBQVEsQ0FBQ0MsUUFBRCxDQUFqRDtBQUNILENBRk0ifQ==