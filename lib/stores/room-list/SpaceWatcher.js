"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpaceWatcher = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _SpaceFilterCondition = require("./filters/SpaceFilterCondition");

var _SpaceStore = _interopRequireDefault(require("../spaces/SpaceStore"));

var _spaces = require("../spaces");

/*
Copyright 2021 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/**
 * Watches for changes in spaces to manage the filter on the provided RoomListStore
 */
class SpaceWatcher {
  // we track these separately to the SpaceStore as we need to observe transitions
  constructor(store) {
    var _this = this;

    this.store = store;
    (0, _defineProperty2.default)(this, "filter", new _SpaceFilterCondition.SpaceFilterCondition());
    (0, _defineProperty2.default)(this, "activeSpace", _SpaceStore.default.instance.activeSpace);
    (0, _defineProperty2.default)(this, "allRoomsInHome", _SpaceStore.default.instance.allRoomsInHome);
    (0, _defineProperty2.default)(this, "onSelectedSpaceUpdated", function (activeSpace) {
      let allRoomsInHome = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.allRoomsInHome;
      if (activeSpace === _this.activeSpace && allRoomsInHome === _this.allRoomsInHome) return; // nop

      const neededFilter = SpaceWatcher.needsFilter(_this.activeSpace, _this.allRoomsInHome);
      const needsFilter = SpaceWatcher.needsFilter(activeSpace, allRoomsInHome);
      _this.activeSpace = activeSpace;
      _this.allRoomsInHome = allRoomsInHome;

      if (needsFilter) {
        _this.updateFilter();
      }

      if (!neededFilter && needsFilter) {
        _this.store.addFilter(_this.filter);
      } else if (neededFilter && !needsFilter) {
        _this.store.removeFilter(_this.filter);
      }
    });
    (0, _defineProperty2.default)(this, "onHomeBehaviourUpdated", allRoomsInHome => {
      this.onSelectedSpaceUpdated(this.activeSpace, allRoomsInHome);
    });
    (0, _defineProperty2.default)(this, "updateFilter", () => {
      this.filter.updateSpace(this.activeSpace);
    });

    if (SpaceWatcher.needsFilter(this.activeSpace, this.allRoomsInHome)) {
      this.updateFilter();
      store.addFilter(this.filter);
    }

    _SpaceStore.default.instance.on(_spaces.UPDATE_SELECTED_SPACE, this.onSelectedSpaceUpdated);

    _SpaceStore.default.instance.on(_spaces.UPDATE_HOME_BEHAVIOUR, this.onHomeBehaviourUpdated);
  }

  static needsFilter(spaceKey, allRoomsInHome) {
    return !(spaceKey === _spaces.MetaSpace.Home && allRoomsInHome);
  }

}

exports.SpaceWatcher = SpaceWatcher;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTcGFjZVdhdGNoZXIiLCJjb25zdHJ1Y3RvciIsInN0b3JlIiwiU3BhY2VGaWx0ZXJDb25kaXRpb24iLCJTcGFjZVN0b3JlIiwiaW5zdGFuY2UiLCJhY3RpdmVTcGFjZSIsImFsbFJvb21zSW5Ib21lIiwibmVlZGVkRmlsdGVyIiwibmVlZHNGaWx0ZXIiLCJ1cGRhdGVGaWx0ZXIiLCJhZGRGaWx0ZXIiLCJmaWx0ZXIiLCJyZW1vdmVGaWx0ZXIiLCJvblNlbGVjdGVkU3BhY2VVcGRhdGVkIiwidXBkYXRlU3BhY2UiLCJvbiIsIlVQREFURV9TRUxFQ1RFRF9TUEFDRSIsIlVQREFURV9IT01FX0JFSEFWSU9VUiIsIm9uSG9tZUJlaGF2aW91clVwZGF0ZWQiLCJzcGFjZUtleSIsIk1ldGFTcGFjZSIsIkhvbWUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RvcmVzL3Jvb20tbGlzdC9TcGFjZVdhdGNoZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIxIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IHsgUm9vbUxpc3RTdG9yZUNsYXNzIH0gZnJvbSBcIi4vUm9vbUxpc3RTdG9yZVwiO1xuaW1wb3J0IHsgU3BhY2VGaWx0ZXJDb25kaXRpb24gfSBmcm9tIFwiLi9maWx0ZXJzL1NwYWNlRmlsdGVyQ29uZGl0aW9uXCI7XG5pbXBvcnQgU3BhY2VTdG9yZSBmcm9tIFwiLi4vc3BhY2VzL1NwYWNlU3RvcmVcIjtcbmltcG9ydCB7IE1ldGFTcGFjZSwgU3BhY2VLZXksIFVQREFURV9IT01FX0JFSEFWSU9VUiwgVVBEQVRFX1NFTEVDVEVEX1NQQUNFIH0gZnJvbSBcIi4uL3NwYWNlc1wiO1xuXG4vKipcbiAqIFdhdGNoZXMgZm9yIGNoYW5nZXMgaW4gc3BhY2VzIHRvIG1hbmFnZSB0aGUgZmlsdGVyIG9uIHRoZSBwcm92aWRlZCBSb29tTGlzdFN0b3JlXG4gKi9cbmV4cG9ydCBjbGFzcyBTcGFjZVdhdGNoZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgZmlsdGVyID0gbmV3IFNwYWNlRmlsdGVyQ29uZGl0aW9uKCk7XG4gICAgLy8gd2UgdHJhY2sgdGhlc2Ugc2VwYXJhdGVseSB0byB0aGUgU3BhY2VTdG9yZSBhcyB3ZSBuZWVkIHRvIG9ic2VydmUgdHJhbnNpdGlvbnNcbiAgICBwcml2YXRlIGFjdGl2ZVNwYWNlOiBTcGFjZUtleSA9IFNwYWNlU3RvcmUuaW5zdGFuY2UuYWN0aXZlU3BhY2U7XG4gICAgcHJpdmF0ZSBhbGxSb29tc0luSG9tZTogYm9vbGVhbiA9IFNwYWNlU3RvcmUuaW5zdGFuY2UuYWxsUm9vbXNJbkhvbWU7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHN0b3JlOiBSb29tTGlzdFN0b3JlQ2xhc3MpIHtcbiAgICAgICAgaWYgKFNwYWNlV2F0Y2hlci5uZWVkc0ZpbHRlcih0aGlzLmFjdGl2ZVNwYWNlLCB0aGlzLmFsbFJvb21zSW5Ib21lKSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVGaWx0ZXIoKTtcbiAgICAgICAgICAgIHN0b3JlLmFkZEZpbHRlcih0aGlzLmZpbHRlcik7XG4gICAgICAgIH1cbiAgICAgICAgU3BhY2VTdG9yZS5pbnN0YW5jZS5vbihVUERBVEVfU0VMRUNURURfU1BBQ0UsIHRoaXMub25TZWxlY3RlZFNwYWNlVXBkYXRlZCk7XG4gICAgICAgIFNwYWNlU3RvcmUuaW5zdGFuY2Uub24oVVBEQVRFX0hPTUVfQkVIQVZJT1VSLCB0aGlzLm9uSG9tZUJlaGF2aW91clVwZGF0ZWQpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIG5lZWRzRmlsdGVyKHNwYWNlS2V5OiBTcGFjZUtleSwgYWxsUm9vbXNJbkhvbWU6IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICEoc3BhY2VLZXkgPT09IE1ldGFTcGFjZS5Ib21lICYmIGFsbFJvb21zSW5Ib21lKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uU2VsZWN0ZWRTcGFjZVVwZGF0ZWQgPSAoYWN0aXZlU3BhY2U6IFNwYWNlS2V5LCBhbGxSb29tc0luSG9tZSA9IHRoaXMuYWxsUm9vbXNJbkhvbWUpID0+IHtcbiAgICAgICAgaWYgKGFjdGl2ZVNwYWNlID09PSB0aGlzLmFjdGl2ZVNwYWNlICYmIGFsbFJvb21zSW5Ib21lID09PSB0aGlzLmFsbFJvb21zSW5Ib21lKSByZXR1cm47IC8vIG5vcFxuXG4gICAgICAgIGNvbnN0IG5lZWRlZEZpbHRlciA9IFNwYWNlV2F0Y2hlci5uZWVkc0ZpbHRlcih0aGlzLmFjdGl2ZVNwYWNlLCB0aGlzLmFsbFJvb21zSW5Ib21lKTtcbiAgICAgICAgY29uc3QgbmVlZHNGaWx0ZXIgPSBTcGFjZVdhdGNoZXIubmVlZHNGaWx0ZXIoYWN0aXZlU3BhY2UsIGFsbFJvb21zSW5Ib21lKTtcblxuICAgICAgICB0aGlzLmFjdGl2ZVNwYWNlID0gYWN0aXZlU3BhY2U7XG4gICAgICAgIHRoaXMuYWxsUm9vbXNJbkhvbWUgPSBhbGxSb29tc0luSG9tZTtcblxuICAgICAgICBpZiAobmVlZHNGaWx0ZXIpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlRmlsdGVyKCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIW5lZWRlZEZpbHRlciAmJiBuZWVkc0ZpbHRlcikge1xuICAgICAgICAgICAgdGhpcy5zdG9yZS5hZGRGaWx0ZXIodGhpcy5maWx0ZXIpO1xuICAgICAgICB9IGVsc2UgaWYgKG5lZWRlZEZpbHRlciAmJiAhbmVlZHNGaWx0ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuc3RvcmUucmVtb3ZlRmlsdGVyKHRoaXMuZmlsdGVyKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBwcml2YXRlIG9uSG9tZUJlaGF2aW91clVwZGF0ZWQgPSAoYWxsUm9vbXNJbkhvbWU6IGJvb2xlYW4pID0+IHtcbiAgICAgICAgdGhpcy5vblNlbGVjdGVkU3BhY2VVcGRhdGVkKHRoaXMuYWN0aXZlU3BhY2UsIGFsbFJvb21zSW5Ib21lKTtcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSB1cGRhdGVGaWx0ZXIgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuZmlsdGVyLnVwZGF0ZVNwYWNlKHRoaXMuYWN0aXZlU3BhY2UpO1xuICAgIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBaUJBOztBQUNBOztBQUNBOztBQW5CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBT0E7QUFDQTtBQUNBO0FBQ08sTUFBTUEsWUFBTixDQUFtQjtFQUV0QjtFQUlBQyxXQUFXLENBQVNDLEtBQVQsRUFBb0M7SUFBQTs7SUFBQSxLQUEzQkEsS0FBMkIsR0FBM0JBLEtBQTJCO0lBQUEsOENBTHJCLElBQUlDLDBDQUFKLEVBS3FCO0lBQUEsbURBSGZDLG1CQUFBLENBQVdDLFFBQVgsQ0FBb0JDLFdBR0w7SUFBQSxzREFGYkYsbUJBQUEsQ0FBV0MsUUFBWCxDQUFvQkUsY0FFUDtJQUFBLDhEQWFkLFVBQUNELFdBQUQsRUFBaUU7TUFBQSxJQUF6Q0MsY0FBeUMsdUVBQXhCLEtBQUksQ0FBQ0EsY0FBbUI7TUFDOUYsSUFBSUQsV0FBVyxLQUFLLEtBQUksQ0FBQ0EsV0FBckIsSUFBb0NDLGNBQWMsS0FBSyxLQUFJLENBQUNBLGNBQWhFLEVBQWdGLE9BRGMsQ0FDTjs7TUFFeEYsTUFBTUMsWUFBWSxHQUFHUixZQUFZLENBQUNTLFdBQWIsQ0FBeUIsS0FBSSxDQUFDSCxXQUE5QixFQUEyQyxLQUFJLENBQUNDLGNBQWhELENBQXJCO01BQ0EsTUFBTUUsV0FBVyxHQUFHVCxZQUFZLENBQUNTLFdBQWIsQ0FBeUJILFdBQXpCLEVBQXNDQyxjQUF0QyxDQUFwQjtNQUVBLEtBQUksQ0FBQ0QsV0FBTCxHQUFtQkEsV0FBbkI7TUFDQSxLQUFJLENBQUNDLGNBQUwsR0FBc0JBLGNBQXRCOztNQUVBLElBQUlFLFdBQUosRUFBaUI7UUFDYixLQUFJLENBQUNDLFlBQUw7TUFDSDs7TUFFRCxJQUFJLENBQUNGLFlBQUQsSUFBaUJDLFdBQXJCLEVBQWtDO1FBQzlCLEtBQUksQ0FBQ1AsS0FBTCxDQUFXUyxTQUFYLENBQXFCLEtBQUksQ0FBQ0MsTUFBMUI7TUFDSCxDQUZELE1BRU8sSUFBSUosWUFBWSxJQUFJLENBQUNDLFdBQXJCLEVBQWtDO1FBQ3JDLEtBQUksQ0FBQ1AsS0FBTCxDQUFXVyxZQUFYLENBQXdCLEtBQUksQ0FBQ0QsTUFBN0I7TUFDSDtJQUNKLENBL0I4QztJQUFBLDhEQWlDYkwsY0FBRCxJQUE2QjtNQUMxRCxLQUFLTyxzQkFBTCxDQUE0QixLQUFLUixXQUFqQyxFQUE4Q0MsY0FBOUM7SUFDSCxDQW5DOEM7SUFBQSxvREFxQ3hCLE1BQU07TUFDekIsS0FBS0ssTUFBTCxDQUFZRyxXQUFaLENBQXdCLEtBQUtULFdBQTdCO0lBQ0gsQ0F2QzhDOztJQUMzQyxJQUFJTixZQUFZLENBQUNTLFdBQWIsQ0FBeUIsS0FBS0gsV0FBOUIsRUFBMkMsS0FBS0MsY0FBaEQsQ0FBSixFQUFxRTtNQUNqRSxLQUFLRyxZQUFMO01BQ0FSLEtBQUssQ0FBQ1MsU0FBTixDQUFnQixLQUFLQyxNQUFyQjtJQUNIOztJQUNEUixtQkFBQSxDQUFXQyxRQUFYLENBQW9CVyxFQUFwQixDQUF1QkMsNkJBQXZCLEVBQThDLEtBQUtILHNCQUFuRDs7SUFDQVYsbUJBQUEsQ0FBV0MsUUFBWCxDQUFvQlcsRUFBcEIsQ0FBdUJFLDZCQUF2QixFQUE4QyxLQUFLQyxzQkFBbkQ7RUFDSDs7RUFFeUIsT0FBWFYsV0FBVyxDQUFDVyxRQUFELEVBQXFCYixjQUFyQixFQUF1RDtJQUM3RSxPQUFPLEVBQUVhLFFBQVEsS0FBS0MsaUJBQUEsQ0FBVUMsSUFBdkIsSUFBK0JmLGNBQWpDLENBQVA7RUFDSDs7QUFqQnFCIn0=