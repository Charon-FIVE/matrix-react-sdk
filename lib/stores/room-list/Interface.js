"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RoomListStoreEvent = void 0;

/*
Copyright 2022 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
let RoomListStoreEvent;
exports.RoomListStoreEvent = RoomListStoreEvent;

(function (RoomListStoreEvent) {
  RoomListStoreEvent["ListsUpdate"] = "lists_update";
})(RoomListStoreEvent || (exports.RoomListStoreEvent = RoomListStoreEvent = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSb29tTGlzdFN0b3JlRXZlbnQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RvcmVzL3Jvb20tbGlzdC9JbnRlcmZhY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIyIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IHR5cGUgeyBSb29tIH0gZnJvbSBcIm1hdHJpeC1qcy1zZGsvc3JjL21vZGVscy9yb29tXCI7XG5pbXBvcnQgdHlwZSB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJldmVudHNcIjtcbmltcG9ydCB7IElUYWdNYXAsIExpc3RBbGdvcml0aG0sIFNvcnRBbGdvcml0aG0gfSBmcm9tIFwiLi9hbGdvcml0aG1zL21vZGVsc1wiO1xuaW1wb3J0IHsgUm9vbVVwZGF0ZUNhdXNlLCBUYWdJRCB9IGZyb20gXCIuL21vZGVsc1wiO1xuaW1wb3J0IHsgSUZpbHRlckNvbmRpdGlvbiB9IGZyb20gXCIuL2ZpbHRlcnMvSUZpbHRlckNvbmRpdGlvblwiO1xuXG5leHBvcnQgZW51bSBSb29tTGlzdFN0b3JlRXZlbnQge1xuICAgIC8vIFRoZSBldmVudC9jaGFubmVsIHdoaWNoIGlzIGNhbGxlZCB3aGVuIHRoZSByb29tIGxpc3RzIGhhdmUgYmVlbiBjaGFuZ2VkLlxuICAgIExpc3RzVXBkYXRlID0gXCJsaXN0c191cGRhdGVcIixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSb29tTGlzdFN0b3JlIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgICAvKipcbiAgICAgKiBHZXRzIGFuIG9yZGVyZWQgc2V0IG9mIHJvb21zIGZvciB0aGUgYWxsIGtub3duIHRhZ3MuXG4gICAgICogQHJldHVybnMge0lUYWdNYXB9IFRoZSBjYWNoZWQgbGlzdCBvZiByb29tcywgb3JkZXJlZCxcbiAgICAgKiBmb3IgZWFjaCB0YWcuIE1heSBiZSBlbXB0eSwgYnV0IG5ldmVyIG51bGwvdW5kZWZpbmVkLlxuICAgICAqL1xuICAgIGdldCBvcmRlcmVkTGlzdHMoKTogSVRhZ01hcDtcblxuICAgIC8qKlxuICAgICAqIFNldCB0aGUgc29ydCBhbGdvcml0aG0gZm9yIHRoZSBzcGVjaWZpZWQgdGFnLlxuICAgICAqIEBwYXJhbSB0YWdJZCB0aGUgdGFnIHRvIHNldCB0aGUgYWxnb3JpdGhtIGZvclxuICAgICAqIEBwYXJhbSBzb3J0IHRoZSBzb3J0IGFsZ29yaXRobSB0byBzZXQgdG9cbiAgICAgKi9cbiAgICBzZXRUYWdTb3J0aW5nKHRhZ0lkOiBUYWdJRCwgc29ydDogU29ydEFsZ29yaXRobSk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHNvcnQgYWxnb3JpdGhtIGZvciB0aGUgc3BlY2lmaWVkIHRhZy5cbiAgICAgKiBAcGFyYW0gdGFnSWQgdGFnIHRvIGdldCB0aGUgc29ydCBhbGdvcml0aG0gZm9yXG4gICAgICogQHJldHVybnMgdGhlIHNvcnQgYWxnb3JpdGhtXG4gICAgICovXG4gICAgZ2V0VGFnU29ydGluZyh0YWdJZDogVGFnSUQpOiBTb3J0QWxnb3JpdGhtO1xuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBsaXN0IGFsZ29yaXRobSBmb3IgdGhlIHNwZWNpZmllZCB0YWcuXG4gICAgICogQHBhcmFtIHRhZ0lkIHRoZSB0YWcgdG8gc2V0IHRoZSBhbGdvcml0aG0gZm9yXG4gICAgICogQHBhcmFtIG9yZGVyIHRoZSBsaXN0IGFsZ29yaXRobSB0byBzZXQgdG9cbiAgICAgKi9cbiAgICBzZXRMaXN0T3JkZXIodGFnSWQ6IFRhZ0lELCBvcmRlcjogTGlzdEFsZ29yaXRobSk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGxpc3QgYWxnb3JpdGhtIGZvciB0aGUgc3BlY2lmaWVkIHRhZy5cbiAgICAgKiBAcGFyYW0gdGFnSWQgdGFnIHRvIGdldCB0aGUgbGlzdCBhbGdvcml0aG0gZm9yXG4gICAgICogQHJldHVybnMgdGhlIGxpc3QgYWxnb3JpdGhtXG4gICAgICovXG4gICAgZ2V0TGlzdE9yZGVyKHRhZ0lkOiBUYWdJRCk6IExpc3RBbGdvcml0aG07XG5cbiAgICAvKipcbiAgICAgKiBSZWdlbmVyYXRlcyB0aGUgcm9vbSB3aG9sZSByb29tIGxpc3QsIGRpc2NhcmRpbmcgYW55IHByZXZpb3VzIHJlc3VsdHMuXG4gICAgICpcbiAgICAgKiBOb3RlOiBUaGlzIGlzIG9ubHkgZXhwb3NlZCBleHRlcm5hbGx5IGZvciB0aGUgdGVzdHMuIERvIG5vdCBjYWxsIHRoaXMgZnJvbSB3aXRoaW5cbiAgICAgKiB0aGUgYXBwLlxuICAgICAqIEBwYXJhbSBwYXJhbXMudHJpZ2dlciBTZXQgdG8gZmFsc2UgdG8gcHJldmVudCBhIGxpc3QgdXBkYXRlIGZyb20gYmVpbmcgc2VudC4gU2hvdWxkIG9ubHlcbiAgICAgKiBiZSB1c2VkIGlmIHRoZSBjYWxsaW5nIGNvZGUgd2lsbCBtYW51YWxseSB0cmlnZ2VyIHRoZSB1cGRhdGUuXG4gICAgICovXG4gICAgcmVnZW5lcmF0ZUFsbExpc3RzKHBhcmFtczogeyB0cmlnZ2VyOiBib29sZWFuIH0pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQWRkcyBhIGZpbHRlciBjb25kaXRpb24gdG8gdGhlIHJvb20gbGlzdCBzdG9yZS4gRmlsdGVycyBtYXkgYmUgYXBwbGllZCBhc3luYyxcbiAgICAgKiBhbmQgdGh1cyBtaWdodCBub3QgY2F1c2UgYW4gdXBkYXRlIHRvIHRoZSBzdG9yZSBpbW1lZGlhdGVseS5cbiAgICAgKiBAcGFyYW0ge0lGaWx0ZXJDb25kaXRpb259IGZpbHRlciBUaGUgZmlsdGVyIGNvbmRpdGlvbiB0byBhZGQuXG4gICAgICovXG4gICAgYWRkRmlsdGVyKGZpbHRlcjogSUZpbHRlckNvbmRpdGlvbik6IFByb21pc2U8dm9pZD47XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgZmlsdGVyIGNvbmRpdGlvbiBmcm9tIHRoZSByb29tIGxpc3Qgc3RvcmUuIElmIHRoZSBmaWx0ZXIgd2FzXG4gICAgICogbm90IHByZXZpb3VzbHkgYWRkZWQgdG8gdGhlIHJvb20gbGlzdCBzdG9yZSwgdGhpcyB3aWxsIG5vLW9wLiBUaGUgZWZmZWN0c1xuICAgICAqIG9mIHJlbW92aW5nIGEgZmlsdGVyIG1heSBiZSBhcHBsaWVkIGFzeW5jIGFuZCB0aGVyZWZvcmUgbWlnaHQgbm90IGNhdXNlXG4gICAgICogYW4gdXBkYXRlIHJpZ2h0IGF3YXkuXG4gICAgICogQHBhcmFtIHtJRmlsdGVyQ29uZGl0aW9ufSBmaWx0ZXIgVGhlIGZpbHRlciBjb25kaXRpb24gdG8gcmVtb3ZlLlxuICAgICAqL1xuICAgIHJlbW92ZUZpbHRlcihmaWx0ZXI6IElGaWx0ZXJDb25kaXRpb24pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgdGFncyBmb3IgYSByb29tIGlkZW50aWZpZWQgYnkgdGhlIHN0b3JlLiBUaGUgcmV0dXJuZWQgc2V0XG4gICAgICogc2hvdWxkIG5ldmVyIGJlIGVtcHR5LCBhbmQgd2lsbCBjb250YWluIERlZmF1bHRUYWdJRC5VbnRhZ2dlZCBpZlxuICAgICAqIHRoZSBzdG9yZSBpcyBub3QgYXdhcmUgb2YgYW55IHRhZ3MuXG4gICAgICogQHBhcmFtIHJvb20gVGhlIHJvb20gdG8gZ2V0IHRoZSB0YWdzIGZvci5cbiAgICAgKiBAcmV0dXJucyBUaGUgdGFncyBmb3IgdGhlIHJvb20uXG4gICAgICovXG4gICAgZ2V0VGFnc0ZvclJvb20ocm9vbTogUm9vbSk6IFRhZ0lEW107XG5cbiAgICAvKipcbiAgICAgKiBNYW51YWxseSB1cGRhdGUgYSByb29tIHdpdGggYSBnaXZlbiBjYXVzZS4gVGhpcyBzaG91bGQgb25seSBiZSB1c2VkIGlmIHRoZVxuICAgICAqIHJvb20gbGlzdCBzdG9yZSB3b3VsZCBvdGhlcndpc2UgYmUgaW5jYXBhYmxlIG9mIGRvaW5nIHRoZSB1cGRhdGUgaXRzZWxmLiBOb3RlXG4gICAgICogdGhhdCB0aGlzIG1heSByYWNlIHdpdGggdGhlIHJvb20gbGlzdCdzIHJlZ3VsYXIgb3BlcmF0aW9uLlxuICAgICAqIEBwYXJhbSB7Um9vbX0gcm9vbSBUaGUgcm9vbSB0byB1cGRhdGUuXG4gICAgICogQHBhcmFtIHtSb29tVXBkYXRlQ2F1c2V9IGNhdXNlIFRoZSBjYXVzZSB0byB1cGRhdGUgZm9yLlxuICAgICAqL1xuICAgIG1hbnVhbFJvb21VcGRhdGUocm9vbTogUm9vbSwgY2F1c2U6IFJvb21VcGRhdGVDYXVzZSk6IFByb21pc2U8dm9pZD47XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7SUFRWUEsa0I7OztXQUFBQSxrQjtFQUFBQSxrQjtHQUFBQSxrQixrQ0FBQUEsa0IifQ==