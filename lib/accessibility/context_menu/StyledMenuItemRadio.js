"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StyledMenuItemRadio = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _RovingTabIndex = require("../RovingTabIndex");

var _StyledRadioButton = _interopRequireDefault(require("../../components/views/elements/StyledRadioButton"));

var _KeyboardShortcuts = require("../KeyboardShortcuts");

var _KeyBindingsManager = require("../../KeyBindingsManager");

const _excluded = ["children", "label", "onChange", "onClose"];

// Semantic component for representing a styled role=menuitemradio
const StyledMenuItemRadio = _ref => {
  let {
    children,
    label,
    onChange,
    onClose
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const [onFocus, isActive, ref] = (0, _RovingTabIndex.useRovingTabIndex)();

  const onKeyDown = e => {
    let handled = true;
    const action = (0, _KeyBindingsManager.getKeyBindingsManager)().getAccessibilityAction(e);

    switch (action) {
      case _KeyboardShortcuts.KeyBindingAction.Space:
        onChange();
        break;

      case _KeyboardShortcuts.KeyBindingAction.Enter:
        onChange(); // Implements https://www.w3.org/TR/wai-aria-practices/#keyboard-interaction-12

        onClose();
        break;

      default:
        handled = false;
    }

    if (handled) {
      e.stopPropagation();
      e.preventDefault();
    }
  };

  const onKeyUp = e => {
    const action = (0, _KeyBindingsManager.getKeyBindingsManager)().getAccessibilityAction(e);

    switch (action) {
      case _KeyboardShortcuts.KeyBindingAction.Enter:
      case _KeyboardShortcuts.KeyBindingAction.Space:
        // prevent the input default handler as we handle it on keydown to match
        // https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-2/menubar-2.html
        e.stopPropagation();
        e.preventDefault();
        break;
    }
  };

  return /*#__PURE__*/_react.default.createElement(_StyledRadioButton.default, (0, _extends2.default)({}, props, {
    role: "menuitemradio",
    "aria-label": label,
    onChange: onChange,
    onKeyDown: onKeyDown,
    onKeyUp: onKeyUp,
    onFocus: onFocus,
    inputRef: ref,
    tabIndex: isActive ? 0 : -1
  }), children);
};

exports.StyledMenuItemRadio = StyledMenuItemRadio;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZWRNZW51SXRlbVJhZGlvIiwiY2hpbGRyZW4iLCJsYWJlbCIsIm9uQ2hhbmdlIiwib25DbG9zZSIsInByb3BzIiwib25Gb2N1cyIsImlzQWN0aXZlIiwicmVmIiwidXNlUm92aW5nVGFiSW5kZXgiLCJvbktleURvd24iLCJlIiwiaGFuZGxlZCIsImFjdGlvbiIsImdldEtleUJpbmRpbmdzTWFuYWdlciIsImdldEFjY2Vzc2liaWxpdHlBY3Rpb24iLCJLZXlCaW5kaW5nQWN0aW9uIiwiU3BhY2UiLCJFbnRlciIsInN0b3BQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0Iiwib25LZXlVcCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY2Nlc3NpYmlsaXR5L2NvbnRleHRfbWVudS9TdHlsZWRNZW51SXRlbVJhZGlvLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTUsIDIwMTYgT3Blbk1hcmtldCBMdGRcbkNvcHlyaWdodCAyMDE4IE5ldyBWZWN0b3IgTHRkXG5Db3B5cmlnaHQgMjAxOSBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgdXNlUm92aW5nVGFiSW5kZXggfSBmcm9tIFwiLi4vUm92aW5nVGFiSW5kZXhcIjtcbmltcG9ydCBTdHlsZWRSYWRpb0J1dHRvbiBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy92aWV3cy9lbGVtZW50cy9TdHlsZWRSYWRpb0J1dHRvblwiO1xuaW1wb3J0IHsgS2V5QmluZGluZ0FjdGlvbiB9IGZyb20gXCIuLi9LZXlib2FyZFNob3J0Y3V0c1wiO1xuaW1wb3J0IHsgZ2V0S2V5QmluZGluZ3NNYW5hZ2VyIH0gZnJvbSBcIi4uLy4uL0tleUJpbmRpbmdzTWFuYWdlclwiO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFN0eWxlZFJhZGlvQnV0dG9uPiB7XG4gICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgb25DaGFuZ2UoKTsgLy8gd2UgaGFuZGxlIGtleXVwL2Rvd24gb3Vyc2VsdmVzIHNvIGxvc2UgdGhlIENoYW5nZUV2ZW50XG4gICAgb25DbG9zZSgpOiB2b2lkOyAvLyBnZXRzIGNhbGxlZCBhZnRlciBvbkNoYW5nZSBvbiBLZXlCaW5kaW5nQWN0aW9uLkVudGVyXG59XG5cbi8vIFNlbWFudGljIGNvbXBvbmVudCBmb3IgcmVwcmVzZW50aW5nIGEgc3R5bGVkIHJvbGU9bWVudWl0ZW1yYWRpb1xuZXhwb3J0IGNvbnN0IFN0eWxlZE1lbnVJdGVtUmFkaW86IFJlYWN0LkZDPElQcm9wcz4gPSAoeyBjaGlsZHJlbiwgbGFiZWwsIG9uQ2hhbmdlLCBvbkNsb3NlLCAuLi5wcm9wcyB9KSA9PiB7XG4gICAgY29uc3QgW29uRm9jdXMsIGlzQWN0aXZlLCByZWZdID0gdXNlUm92aW5nVGFiSW5kZXg8SFRNTElucHV0RWxlbWVudD4oKTtcblxuICAgIGNvbnN0IG9uS2V5RG93biA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICAgIGxldCBoYW5kbGVkID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgYWN0aW9uID0gZ2V0S2V5QmluZGluZ3NNYW5hZ2VyKCkuZ2V0QWNjZXNzaWJpbGl0eUFjdGlvbihlKTtcblxuICAgICAgICBzd2l0Y2ggKGFjdGlvbikge1xuICAgICAgICAgICAgY2FzZSBLZXlCaW5kaW5nQWN0aW9uLlNwYWNlOlxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtleUJpbmRpbmdBY3Rpb24uRW50ZXI6XG4gICAgICAgICAgICAgICAgb25DaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAvLyBJbXBsZW1lbnRzIGh0dHBzOi8vd3d3LnczLm9yZy9UUi93YWktYXJpYS1wcmFjdGljZXMvI2tleWJvYXJkLWludGVyYWN0aW9uLTEyXG4gICAgICAgICAgICAgICAgb25DbG9zZSgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBoYW5kbGVkID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFuZGxlZCkge1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3Qgb25LZXlVcCA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IGdldEtleUJpbmRpbmdzTWFuYWdlcigpLmdldEFjY2Vzc2liaWxpdHlBY3Rpb24oZSk7XG4gICAgICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIEtleUJpbmRpbmdBY3Rpb24uRW50ZXI6XG4gICAgICAgICAgICBjYXNlIEtleUJpbmRpbmdBY3Rpb24uU3BhY2U6XG4gICAgICAgICAgICAgICAgLy8gcHJldmVudCB0aGUgaW5wdXQgZGVmYXVsdCBoYW5kbGVyIGFzIHdlIGhhbmRsZSBpdCBvbiBrZXlkb3duIHRvIG1hdGNoXG4gICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL3dhaS1hcmlhLXByYWN0aWNlcy9leGFtcGxlcy9tZW51YmFyL21lbnViYXItMi9tZW51YmFyLTIuaHRtbFxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gKFxuICAgICAgICA8U3R5bGVkUmFkaW9CdXR0b25cbiAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgIHJvbGU9XCJtZW51aXRlbXJhZGlvXCJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e2xhYmVsfVxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxuICAgICAgICAgICAgb25LZXlEb3duPXtvbktleURvd259XG4gICAgICAgICAgICBvbktleVVwPXtvbktleVVwfVxuICAgICAgICAgICAgb25Gb2N1cz17b25Gb2N1c31cbiAgICAgICAgICAgIGlucHV0UmVmPXtyZWZ9XG4gICAgICAgICAgICB0YWJJbmRleD17aXNBY3RpdmUgPyAwIDogLTF9XG4gICAgICAgID5cbiAgICAgICAgICAgIHsgY2hpbGRyZW4gfVxuICAgICAgICA8L1N0eWxlZFJhZGlvQnV0dG9uPlxuICAgICk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBa0JBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBUUE7QUFDTyxNQUFNQSxtQkFBcUMsR0FBRyxRQUFzRDtFQUFBLElBQXJEO0lBQUVDLFFBQUY7SUFBWUMsS0FBWjtJQUFtQkMsUUFBbkI7SUFBNkJDO0VBQTdCLENBQXFEO0VBQUEsSUFBWkMsS0FBWTtFQUN2RyxNQUFNLENBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUFvQkMsR0FBcEIsSUFBMkIsSUFBQUMsaUNBQUEsR0FBakM7O0VBRUEsTUFBTUMsU0FBUyxHQUFJQyxDQUFELElBQTRCO0lBQzFDLElBQUlDLE9BQU8sR0FBRyxJQUFkO0lBQ0EsTUFBTUMsTUFBTSxHQUFHLElBQUFDLHlDQUFBLElBQXdCQyxzQkFBeEIsQ0FBK0NKLENBQS9DLENBQWY7O0lBRUEsUUFBUUUsTUFBUjtNQUNJLEtBQUtHLG1DQUFBLENBQWlCQyxLQUF0QjtRQUNJZCxRQUFRO1FBQ1I7O01BQ0osS0FBS2EsbUNBQUEsQ0FBaUJFLEtBQXRCO1FBQ0lmLFFBQVEsR0FEWixDQUVJOztRQUNBQyxPQUFPO1FBQ1A7O01BQ0o7UUFDSVEsT0FBTyxHQUFHLEtBQVY7SUFWUjs7SUFhQSxJQUFJQSxPQUFKLEVBQWE7TUFDVEQsQ0FBQyxDQUFDUSxlQUFGO01BQ0FSLENBQUMsQ0FBQ1MsY0FBRjtJQUNIO0VBQ0osQ0FyQkQ7O0VBc0JBLE1BQU1DLE9BQU8sR0FBSVYsQ0FBRCxJQUE0QjtJQUN4QyxNQUFNRSxNQUFNLEdBQUcsSUFBQUMseUNBQUEsSUFBd0JDLHNCQUF4QixDQUErQ0osQ0FBL0MsQ0FBZjs7SUFDQSxRQUFRRSxNQUFSO01BQ0ksS0FBS0csbUNBQUEsQ0FBaUJFLEtBQXRCO01BQ0EsS0FBS0YsbUNBQUEsQ0FBaUJDLEtBQXRCO1FBQ0k7UUFDQTtRQUNBTixDQUFDLENBQUNRLGVBQUY7UUFDQVIsQ0FBQyxDQUFDUyxjQUFGO1FBQ0E7SUFQUjtFQVNILENBWEQ7O0VBWUEsb0JBQ0ksNkJBQUMsMEJBQUQsNkJBQ1FmLEtBRFI7SUFFSSxJQUFJLEVBQUMsZUFGVDtJQUdJLGNBQVlILEtBSGhCO0lBSUksUUFBUSxFQUFFQyxRQUpkO0lBS0ksU0FBUyxFQUFFTyxTQUxmO0lBTUksT0FBTyxFQUFFVyxPQU5iO0lBT0ksT0FBTyxFQUFFZixPQVBiO0lBUUksUUFBUSxFQUFFRSxHQVJkO0lBU0ksUUFBUSxFQUFFRCxRQUFRLEdBQUcsQ0FBSCxHQUFPLENBQUM7RUFUOUIsSUFXTU4sUUFYTixDQURKO0FBZUgsQ0FwRE0ifQ==